"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  changeResourceRecordSetsMiddleware: () => changeResourceRecordSetsMiddleware,
  changeResourceRecordSetsMiddlewareOptions: () => changeResourceRecordSetsMiddlewareOptions,
  getChangeResourceRecordSetsPlugin: () => getChangeResourceRecordSetsPlugin,
  getIdNormalizerPlugin: () => getIdNormalizerPlugin,
  idNormalizerMiddleware: () => idNormalizerMiddleware,
  idNormalizerMiddlewareOptions: () => idNormalizerMiddlewareOptions
});
module.exports = __toCommonJS(src_exports);

// src/constants.ts
var IDENTIFIER_PREFIX_PATTERN = /^\/(hostedzone|change|delegationset)\//;

// src/change-resource-record-sets.ts
function changeResourceRecordSetsMiddleware() {
  return (next) => async (args) => {
    const { ChangeBatch } = args.input;
    const Changes = [];
    for (const change of ChangeBatch.Changes) {
      const { AliasTarget } = change.ResourceRecordSet;
      if (AliasTarget) {
        Changes.push({
          ...change,
          ResourceRecordSet: {
            ...change.ResourceRecordSet,
            AliasTarget: {
              ...AliasTarget,
              HostedZoneId: AliasTarget.HostedZoneId.replace(IDENTIFIER_PREFIX_PATTERN, "")
            }
          }
        });
      } else {
        Changes.push(change);
      }
    }
    return next({
      ...args,
      input: {
        ...args.input,
        ChangeBatch: {
          ...ChangeBatch,
          Changes
        }
      }
    });
  };
}
__name(changeResourceRecordSetsMiddleware, "changeResourceRecordSetsMiddleware");
var changeResourceRecordSetsMiddlewareOptions = {
  step: "initialize",
  tags: ["ROUTE53_IDS", "CHANGE_RESOURCE_RECORD_SETS"],
  name: "changeResourceRecordSetsMiddleware",
  override: true
};
var getChangeResourceRecordSetsPlugin = /* @__PURE__ */ __name((unused) => ({
  applyToStack: (clientStack) => {
    clientStack.add(changeResourceRecordSetsMiddleware(), changeResourceRecordSetsMiddlewareOptions);
  }
}), "getChangeResourceRecordSetsPlugin");

// src/id-normalizer.ts
var IDENTIFIER_PARAMETERS = ["DelegationSetId", "HostedZoneId", "Id"];
function idNormalizerMiddleware() {
  return (next) => async (args) => {
    const input = { ...args.input };
    for (const paramName of IDENTIFIER_PARAMETERS) {
      const param = input[paramName];
      if (param) {
        input[paramName] = param.replace(IDENTIFIER_PREFIX_PATTERN, "");
      }
    }
    return next({
      ...args,
      input
    });
  };
}
__name(idNormalizerMiddleware, "idNormalizerMiddleware");
var idNormalizerMiddlewareOptions = {
  step: "initialize",
  tags: ["ROUTE53_IDS"],
  name: "idNormalizerMiddleware",
  override: true
};
var getIdNormalizerPlugin = /* @__PURE__ */ __name((unused) => ({
  applyToStack: (clientStack) => {
    clientStack.add(idNormalizerMiddleware(), idNormalizerMiddlewareOptions);
  }
}), "getIdNormalizerPlugin");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  changeResourceRecordSetsMiddleware,
  changeResourceRecordSetsMiddlewareOptions,
  getChangeResourceRecordSetsPlugin,
  idNormalizerMiddleware,
  idNormalizerMiddlewareOptions,
  getIdNormalizerPlugin
});

