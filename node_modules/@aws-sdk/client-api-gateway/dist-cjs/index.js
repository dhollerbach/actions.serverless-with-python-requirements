"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  APIGateway: () => APIGateway,
  APIGatewayClient: () => APIGatewayClient,
  APIGatewayServiceException: () => APIGatewayServiceException,
  AccessAssociationSourceType: () => AccessAssociationSourceType,
  ApiKeySourceType: () => ApiKeySourceType,
  ApiKeysFormat: () => ApiKeysFormat,
  AuthorizerType: () => AuthorizerType,
  BadRequestException: () => BadRequestException,
  CacheClusterSize: () => CacheClusterSize,
  CacheClusterStatus: () => CacheClusterStatus,
  ConflictException: () => ConflictException,
  ConnectionType: () => ConnectionType,
  ContentHandlingStrategy: () => ContentHandlingStrategy,
  CreateApiKeyCommand: () => CreateApiKeyCommand,
  CreateAuthorizerCommand: () => CreateAuthorizerCommand,
  CreateBasePathMappingCommand: () => CreateBasePathMappingCommand,
  CreateDeploymentCommand: () => CreateDeploymentCommand,
  CreateDocumentationPartCommand: () => CreateDocumentationPartCommand,
  CreateDocumentationVersionCommand: () => CreateDocumentationVersionCommand,
  CreateDomainNameAccessAssociationCommand: () => CreateDomainNameAccessAssociationCommand,
  CreateDomainNameCommand: () => CreateDomainNameCommand,
  CreateModelCommand: () => CreateModelCommand,
  CreateRequestValidatorCommand: () => CreateRequestValidatorCommand,
  CreateResourceCommand: () => CreateResourceCommand,
  CreateRestApiCommand: () => CreateRestApiCommand,
  CreateStageCommand: () => CreateStageCommand,
  CreateUsagePlanCommand: () => CreateUsagePlanCommand,
  CreateUsagePlanKeyCommand: () => CreateUsagePlanKeyCommand,
  CreateVpcLinkCommand: () => CreateVpcLinkCommand,
  DeleteApiKeyCommand: () => DeleteApiKeyCommand,
  DeleteAuthorizerCommand: () => DeleteAuthorizerCommand,
  DeleteBasePathMappingCommand: () => DeleteBasePathMappingCommand,
  DeleteClientCertificateCommand: () => DeleteClientCertificateCommand,
  DeleteDeploymentCommand: () => DeleteDeploymentCommand,
  DeleteDocumentationPartCommand: () => DeleteDocumentationPartCommand,
  DeleteDocumentationVersionCommand: () => DeleteDocumentationVersionCommand,
  DeleteDomainNameAccessAssociationCommand: () => DeleteDomainNameAccessAssociationCommand,
  DeleteDomainNameCommand: () => DeleteDomainNameCommand,
  DeleteGatewayResponseCommand: () => DeleteGatewayResponseCommand,
  DeleteIntegrationCommand: () => DeleteIntegrationCommand,
  DeleteIntegrationResponseCommand: () => DeleteIntegrationResponseCommand,
  DeleteMethodCommand: () => DeleteMethodCommand,
  DeleteMethodResponseCommand: () => DeleteMethodResponseCommand,
  DeleteModelCommand: () => DeleteModelCommand,
  DeleteRequestValidatorCommand: () => DeleteRequestValidatorCommand,
  DeleteResourceCommand: () => DeleteResourceCommand,
  DeleteRestApiCommand: () => DeleteRestApiCommand,
  DeleteStageCommand: () => DeleteStageCommand,
  DeleteUsagePlanCommand: () => DeleteUsagePlanCommand,
  DeleteUsagePlanKeyCommand: () => DeleteUsagePlanKeyCommand,
  DeleteVpcLinkCommand: () => DeleteVpcLinkCommand,
  DocumentationPartType: () => DocumentationPartType,
  DomainNameStatus: () => DomainNameStatus,
  EndpointType: () => EndpointType,
  FlushStageAuthorizersCacheCommand: () => FlushStageAuthorizersCacheCommand,
  FlushStageCacheCommand: () => FlushStageCacheCommand,
  GatewayResponseType: () => GatewayResponseType,
  GenerateClientCertificateCommand: () => GenerateClientCertificateCommand,
  GetAccountCommand: () => GetAccountCommand,
  GetApiKeyCommand: () => GetApiKeyCommand,
  GetApiKeysCommand: () => GetApiKeysCommand,
  GetAuthorizerCommand: () => GetAuthorizerCommand,
  GetAuthorizersCommand: () => GetAuthorizersCommand,
  GetBasePathMappingCommand: () => GetBasePathMappingCommand,
  GetBasePathMappingsCommand: () => GetBasePathMappingsCommand,
  GetClientCertificateCommand: () => GetClientCertificateCommand,
  GetClientCertificatesCommand: () => GetClientCertificatesCommand,
  GetDeploymentCommand: () => GetDeploymentCommand,
  GetDeploymentsCommand: () => GetDeploymentsCommand,
  GetDocumentationPartCommand: () => GetDocumentationPartCommand,
  GetDocumentationPartsCommand: () => GetDocumentationPartsCommand,
  GetDocumentationVersionCommand: () => GetDocumentationVersionCommand,
  GetDocumentationVersionsCommand: () => GetDocumentationVersionsCommand,
  GetDomainNameAccessAssociationsCommand: () => GetDomainNameAccessAssociationsCommand,
  GetDomainNameCommand: () => GetDomainNameCommand,
  GetDomainNamesCommand: () => GetDomainNamesCommand,
  GetExportCommand: () => GetExportCommand,
  GetGatewayResponseCommand: () => GetGatewayResponseCommand,
  GetGatewayResponsesCommand: () => GetGatewayResponsesCommand,
  GetIntegrationCommand: () => GetIntegrationCommand,
  GetIntegrationResponseCommand: () => GetIntegrationResponseCommand,
  GetMethodCommand: () => GetMethodCommand,
  GetMethodResponseCommand: () => GetMethodResponseCommand,
  GetModelCommand: () => GetModelCommand,
  GetModelTemplateCommand: () => GetModelTemplateCommand,
  GetModelsCommand: () => GetModelsCommand,
  GetRequestValidatorCommand: () => GetRequestValidatorCommand,
  GetRequestValidatorsCommand: () => GetRequestValidatorsCommand,
  GetResourceCommand: () => GetResourceCommand,
  GetResourcesCommand: () => GetResourcesCommand,
  GetRestApiCommand: () => GetRestApiCommand,
  GetRestApisCommand: () => GetRestApisCommand,
  GetSdkCommand: () => GetSdkCommand,
  GetSdkTypeCommand: () => GetSdkTypeCommand,
  GetSdkTypesCommand: () => GetSdkTypesCommand,
  GetStageCommand: () => GetStageCommand,
  GetStagesCommand: () => GetStagesCommand,
  GetTagsCommand: () => GetTagsCommand,
  GetUsageCommand: () => GetUsageCommand,
  GetUsagePlanCommand: () => GetUsagePlanCommand,
  GetUsagePlanKeyCommand: () => GetUsagePlanKeyCommand,
  GetUsagePlanKeysCommand: () => GetUsagePlanKeysCommand,
  GetUsagePlansCommand: () => GetUsagePlansCommand,
  GetVpcLinkCommand: () => GetVpcLinkCommand,
  GetVpcLinksCommand: () => GetVpcLinksCommand,
  ImportApiKeysCommand: () => ImportApiKeysCommand,
  ImportDocumentationPartsCommand: () => ImportDocumentationPartsCommand,
  ImportRestApiCommand: () => ImportRestApiCommand,
  IntegrationType: () => IntegrationType,
  LimitExceededException: () => LimitExceededException,
  LocationStatusType: () => LocationStatusType,
  NotFoundException: () => NotFoundException,
  Op: () => Op,
  PutGatewayResponseCommand: () => PutGatewayResponseCommand,
  PutIntegrationCommand: () => PutIntegrationCommand,
  PutIntegrationResponseCommand: () => PutIntegrationResponseCommand,
  PutMethodCommand: () => PutMethodCommand,
  PutMethodResponseCommand: () => PutMethodResponseCommand,
  PutMode: () => PutMode,
  PutRestApiCommand: () => PutRestApiCommand,
  QuotaPeriodType: () => QuotaPeriodType,
  RejectDomainNameAccessAssociationCommand: () => RejectDomainNameAccessAssociationCommand,
  ResourceOwner: () => ResourceOwner,
  SecurityPolicy: () => SecurityPolicy,
  ServiceUnavailableException: () => ServiceUnavailableException,
  TagResourceCommand: () => TagResourceCommand,
  TestInvokeAuthorizerCommand: () => TestInvokeAuthorizerCommand,
  TestInvokeMethodCommand: () => TestInvokeMethodCommand,
  TooManyRequestsException: () => TooManyRequestsException,
  UnauthorizedCacheControlHeaderStrategy: () => UnauthorizedCacheControlHeaderStrategy,
  UnauthorizedException: () => UnauthorizedException,
  UntagResourceCommand: () => UntagResourceCommand,
  UpdateAccountCommand: () => UpdateAccountCommand,
  UpdateApiKeyCommand: () => UpdateApiKeyCommand,
  UpdateAuthorizerCommand: () => UpdateAuthorizerCommand,
  UpdateBasePathMappingCommand: () => UpdateBasePathMappingCommand,
  UpdateClientCertificateCommand: () => UpdateClientCertificateCommand,
  UpdateDeploymentCommand: () => UpdateDeploymentCommand,
  UpdateDocumentationPartCommand: () => UpdateDocumentationPartCommand,
  UpdateDocumentationVersionCommand: () => UpdateDocumentationVersionCommand,
  UpdateDomainNameCommand: () => UpdateDomainNameCommand,
  UpdateGatewayResponseCommand: () => UpdateGatewayResponseCommand,
  UpdateIntegrationCommand: () => UpdateIntegrationCommand,
  UpdateIntegrationResponseCommand: () => UpdateIntegrationResponseCommand,
  UpdateMethodCommand: () => UpdateMethodCommand,
  UpdateMethodResponseCommand: () => UpdateMethodResponseCommand,
  UpdateModelCommand: () => UpdateModelCommand,
  UpdateRequestValidatorCommand: () => UpdateRequestValidatorCommand,
  UpdateResourceCommand: () => UpdateResourceCommand,
  UpdateRestApiCommand: () => UpdateRestApiCommand,
  UpdateStageCommand: () => UpdateStageCommand,
  UpdateUsageCommand: () => UpdateUsageCommand,
  UpdateUsagePlanCommand: () => UpdateUsagePlanCommand,
  UpdateVpcLinkCommand: () => UpdateVpcLinkCommand,
  VpcLinkStatus: () => VpcLinkStatus,
  __Client: () => import_smithy_client.Client,
  paginateGetApiKeys: () => paginateGetApiKeys,
  paginateGetBasePathMappings: () => paginateGetBasePathMappings,
  paginateGetClientCertificates: () => paginateGetClientCertificates,
  paginateGetDeployments: () => paginateGetDeployments,
  paginateGetDomainNames: () => paginateGetDomainNames,
  paginateGetModels: () => paginateGetModels,
  paginateGetResources: () => paginateGetResources,
  paginateGetRestApis: () => paginateGetRestApis,
  paginateGetUsage: () => paginateGetUsage,
  paginateGetUsagePlanKeys: () => paginateGetUsagePlanKeys,
  paginateGetUsagePlans: () => paginateGetUsagePlans,
  paginateGetVpcLinks: () => paginateGetVpcLinks
});
module.exports = __toCommonJS(src_exports);

// src/APIGatewayClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_sdk_api_gateway = require("@aws-sdk/middleware-sdk-api-gateway");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "apigateway"
  };
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/APIGatewayClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var asPartial = /* @__PURE__ */ __name((t) => t, "asPartial");
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
}, "resolveRuntimeExtensions");

// src/APIGatewayClient.ts
var APIGatewayClient = class extends import_smithy_client.Client {
  static {
    __name(this, "APIGatewayClient");
  }
  /**
   * The resolved configuration of APIGatewayClient class. This is resolved and normalized from the {@link APIGatewayClientConfig | constructor configuration interface}.
   */
  config;
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_1);
    const _config_3 = (0, import_middleware_retry.resolveRetryConfig)(_config_2);
    const _config_4 = (0, import_config_resolver.resolveRegionConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, configuration?.extensions || []);
    super(_config_8);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_sdk_api_gateway.getAcceptHeaderPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: import_httpAuthSchemeProvider.defaultAPIGatewayHttpAuthSchemeParametersProvider,
        identityProviderConfigProvider: async (config) => new import_core.DefaultIdentityProviderConfig({
          "aws.auth#sigv4": config.credentials
        })
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
};

// src/APIGateway.ts


// src/commands/CreateApiKeyCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");


// src/protocols/Aws_restJson1.ts
var import_core2 = require("@aws-sdk/core");



// src/models/APIGatewayServiceException.ts

var APIGatewayServiceException = class _APIGatewayServiceException extends import_smithy_client.ServiceException {
  static {
    __name(this, "APIGatewayServiceException");
  }
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _APIGatewayServiceException.prototype);
  }
};

// src/models/models_0.ts
var AccessAssociationSourceType = {
  VPCE: "VPCE"
};
var ApiKeysFormat = {
  csv: "csv"
};
var ApiKeySourceType = {
  AUTHORIZER: "AUTHORIZER",
  HEADER: "HEADER"
};
var AuthorizerType = {
  COGNITO_USER_POOLS: "COGNITO_USER_POOLS",
  REQUEST: "REQUEST",
  TOKEN: "TOKEN"
};
var BadRequestException = class _BadRequestException extends APIGatewayServiceException {
  static {
    __name(this, "BadRequestException");
  }
  name = "BadRequestException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "BadRequestException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _BadRequestException.prototype);
  }
};
var ConflictException = class _ConflictException extends APIGatewayServiceException {
  static {
    __name(this, "ConflictException");
  }
  name = "ConflictException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ConflictException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ConflictException.prototype);
  }
};
var LimitExceededException = class _LimitExceededException extends APIGatewayServiceException {
  static {
    __name(this, "LimitExceededException");
  }
  name = "LimitExceededException";
  $fault = "client";
  retryAfterSeconds;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "LimitExceededException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _LimitExceededException.prototype);
    this.retryAfterSeconds = opts.retryAfterSeconds;
  }
};
var NotFoundException = class _NotFoundException extends APIGatewayServiceException {
  static {
    __name(this, "NotFoundException");
  }
  name = "NotFoundException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "NotFoundException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _NotFoundException.prototype);
  }
};
var TooManyRequestsException = class _TooManyRequestsException extends APIGatewayServiceException {
  static {
    __name(this, "TooManyRequestsException");
  }
  name = "TooManyRequestsException";
  $fault = "client";
  retryAfterSeconds;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "TooManyRequestsException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _TooManyRequestsException.prototype);
    this.retryAfterSeconds = opts.retryAfterSeconds;
  }
};
var UnauthorizedException = class _UnauthorizedException extends APIGatewayServiceException {
  static {
    __name(this, "UnauthorizedException");
  }
  name = "UnauthorizedException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "UnauthorizedException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _UnauthorizedException.prototype);
  }
};
var CacheClusterSize = {
  SIZE_0_POINT_5_GB: "0.5",
  SIZE_118_GB: "118",
  SIZE_13_POINT_5_GB: "13.5",
  SIZE_1_POINT_6_GB: "1.6",
  SIZE_237_GB: "237",
  SIZE_28_POINT_4_GB: "28.4",
  SIZE_58_POINT_2_GB: "58.2",
  SIZE_6_POINT_1_GB: "6.1"
};
var ServiceUnavailableException = class _ServiceUnavailableException extends APIGatewayServiceException {
  static {
    __name(this, "ServiceUnavailableException");
  }
  name = "ServiceUnavailableException";
  $fault = "server";
  retryAfterSeconds;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ServiceUnavailableException",
      $fault: "server",
      ...opts
    });
    Object.setPrototypeOf(this, _ServiceUnavailableException.prototype);
    this.retryAfterSeconds = opts.retryAfterSeconds;
  }
};
var DocumentationPartType = {
  API: "API",
  AUTHORIZER: "AUTHORIZER",
  METHOD: "METHOD",
  MODEL: "MODEL",
  PATH_PARAMETER: "PATH_PARAMETER",
  QUERY_PARAMETER: "QUERY_PARAMETER",
  REQUEST_BODY: "REQUEST_BODY",
  REQUEST_HEADER: "REQUEST_HEADER",
  RESOURCE: "RESOURCE",
  RESPONSE: "RESPONSE",
  RESPONSE_BODY: "RESPONSE_BODY",
  RESPONSE_HEADER: "RESPONSE_HEADER"
};
var EndpointType = {
  EDGE: "EDGE",
  PRIVATE: "PRIVATE",
  REGIONAL: "REGIONAL"
};
var SecurityPolicy = {
  TLS_1_0: "TLS_1_0",
  TLS_1_2: "TLS_1_2"
};
var DomainNameStatus = {
  AVAILABLE: "AVAILABLE",
  PENDING: "PENDING",
  PENDING_CERTIFICATE_REIMPORT: "PENDING_CERTIFICATE_REIMPORT",
  PENDING_OWNERSHIP_VERIFICATION: "PENDING_OWNERSHIP_VERIFICATION",
  UPDATING: "UPDATING"
};
var ConnectionType = {
  INTERNET: "INTERNET",
  VPC_LINK: "VPC_LINK"
};
var ContentHandlingStrategy = {
  CONVERT_TO_BINARY: "CONVERT_TO_BINARY",
  CONVERT_TO_TEXT: "CONVERT_TO_TEXT"
};
var IntegrationType = {
  AWS: "AWS",
  AWS_PROXY: "AWS_PROXY",
  HTTP: "HTTP",
  HTTP_PROXY: "HTTP_PROXY",
  MOCK: "MOCK"
};
var CacheClusterStatus = {
  AVAILABLE: "AVAILABLE",
  CREATE_IN_PROGRESS: "CREATE_IN_PROGRESS",
  DELETE_IN_PROGRESS: "DELETE_IN_PROGRESS",
  FLUSH_IN_PROGRESS: "FLUSH_IN_PROGRESS",
  NOT_AVAILABLE: "NOT_AVAILABLE"
};
var UnauthorizedCacheControlHeaderStrategy = {
  FAIL_WITH_403: "FAIL_WITH_403",
  SUCCEED_WITHOUT_RESPONSE_HEADER: "SUCCEED_WITHOUT_RESPONSE_HEADER",
  SUCCEED_WITH_RESPONSE_HEADER: "SUCCEED_WITH_RESPONSE_HEADER"
};
var QuotaPeriodType = {
  DAY: "DAY",
  MONTH: "MONTH",
  WEEK: "WEEK"
};
var VpcLinkStatus = {
  AVAILABLE: "AVAILABLE",
  DELETING: "DELETING",
  FAILED: "FAILED",
  PENDING: "PENDING"
};
var GatewayResponseType = {
  ACCESS_DENIED: "ACCESS_DENIED",
  API_CONFIGURATION_ERROR: "API_CONFIGURATION_ERROR",
  AUTHORIZER_CONFIGURATION_ERROR: "AUTHORIZER_CONFIGURATION_ERROR",
  AUTHORIZER_FAILURE: "AUTHORIZER_FAILURE",
  BAD_REQUEST_BODY: "BAD_REQUEST_BODY",
  BAD_REQUEST_PARAMETERS: "BAD_REQUEST_PARAMETERS",
  DEFAULT_4XX: "DEFAULT_4XX",
  DEFAULT_5XX: "DEFAULT_5XX",
  EXPIRED_TOKEN: "EXPIRED_TOKEN",
  INTEGRATION_FAILURE: "INTEGRATION_FAILURE",
  INTEGRATION_TIMEOUT: "INTEGRATION_TIMEOUT",
  INVALID_API_KEY: "INVALID_API_KEY",
  INVALID_SIGNATURE: "INVALID_SIGNATURE",
  MISSING_AUTHENTICATION_TOKEN: "MISSING_AUTHENTICATION_TOKEN",
  QUOTA_EXCEEDED: "QUOTA_EXCEEDED",
  REQUEST_TOO_LARGE: "REQUEST_TOO_LARGE",
  RESOURCE_NOT_FOUND: "RESOURCE_NOT_FOUND",
  THROTTLED: "THROTTLED",
  UNAUTHORIZED: "UNAUTHORIZED",
  UNSUPPORTED_MEDIA_TYPE: "UNSUPPORTED_MEDIA_TYPE",
  WAF_FILTERED: "WAF_FILTERED"
};
var LocationStatusType = {
  DOCUMENTED: "DOCUMENTED",
  UNDOCUMENTED: "UNDOCUMENTED"
};
var ResourceOwner = {
  OTHER_ACCOUNTS: "OTHER_ACCOUNTS",
  SELF: "SELF"
};
var PutMode = {
  Merge: "merge",
  Overwrite: "overwrite"
};
var Op = {
  add: "add",
  copy: "copy",
  move: "move",
  remove: "remove",
  replace: "replace",
  test: "test"
};

// src/protocols/Aws_restJson1.ts
var se_CreateApiKeyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/apikeys");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      customerId: [],
      description: [],
      enabled: [],
      generateDistinctId: [],
      name: [],
      stageKeys: (_) => (0, import_smithy_client._json)(_),
      tags: (_) => (0, import_smithy_client._json)(_),
      value: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateApiKeyCommand");
var se_CreateAuthorizerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/restapis/{restApiId}/authorizers");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      authType: [],
      authorizerCredentials: [],
      authorizerResultTtlInSeconds: [],
      authorizerUri: [],
      identitySource: [],
      identityValidationExpression: [],
      name: [],
      providerARNs: (_) => (0, import_smithy_client._json)(_),
      type: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateAuthorizerCommand");
var se_CreateBasePathMappingCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/domainnames/{domainName}/basepathmappings");
  b.p("domainName", () => input.domainName, "{domainName}", false);
  const query = (0, import_smithy_client.map)({
    [_dNI]: [, input[_dNI]]
  });
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      basePath: [],
      restApiId: [],
      stage: []
    })
  );
  b.m("POST").h(headers).q(query).b(body);
  return b.build();
}, "se_CreateBasePathMappingCommand");
var se_CreateDeploymentCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/restapis/{restApiId}/deployments");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      cacheClusterEnabled: [],
      cacheClusterSize: [],
      canarySettings: (_) => se_DeploymentCanarySettings(_, context),
      description: [],
      stageDescription: [],
      stageName: [],
      tracingEnabled: [],
      variables: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateDeploymentCommand");
var se_CreateDocumentationPartCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/restapis/{restApiId}/documentation/parts");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      location: (_) => (0, import_smithy_client._json)(_),
      properties: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateDocumentationPartCommand");
var se_CreateDocumentationVersionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/restapis/{restApiId}/documentation/versions");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      description: [],
      documentationVersion: [],
      stageName: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateDocumentationVersionCommand");
var se_CreateDomainNameCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/domainnames");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      certificateArn: [],
      certificateBody: [],
      certificateChain: [],
      certificateName: [],
      certificatePrivateKey: [],
      domainName: [],
      endpointConfiguration: (_) => (0, import_smithy_client._json)(_),
      mutualTlsAuthentication: (_) => (0, import_smithy_client._json)(_),
      ownershipVerificationCertificateArn: [],
      policy: [],
      regionalCertificateArn: [],
      regionalCertificateName: [],
      securityPolicy: [],
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateDomainNameCommand");
var se_CreateDomainNameAccessAssociationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/domainnameaccessassociations");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      accessAssociationSource: [],
      accessAssociationSourceType: [],
      domainNameArn: [],
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateDomainNameAccessAssociationCommand");
var se_CreateModelCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/restapis/{restApiId}/models");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      contentType: [],
      description: [],
      name: [],
      schema: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateModelCommand");
var se_CreateRequestValidatorCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/restapis/{restApiId}/requestvalidators");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      name: [],
      validateRequestBody: [],
      validateRequestParameters: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateRequestValidatorCommand");
var se_CreateResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/restapis/{restApiId}/resources/{parentId}");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("parentId", () => input.parentId, "{parentId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      pathPart: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateResourceCommand");
var se_CreateRestApiCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/restapis");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      apiKeySource: [],
      binaryMediaTypes: (_) => (0, import_smithy_client._json)(_),
      cloneFrom: [],
      description: [],
      disableExecuteApiEndpoint: [],
      endpointConfiguration: (_) => (0, import_smithy_client._json)(_),
      minimumCompressionSize: [],
      name: [],
      policy: [],
      tags: (_) => (0, import_smithy_client._json)(_),
      version: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateRestApiCommand");
var se_CreateStageCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/restapis/{restApiId}/stages");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      cacheClusterEnabled: [],
      cacheClusterSize: [],
      canarySettings: (_) => se_CanarySettings(_, context),
      deploymentId: [],
      description: [],
      documentationVersion: [],
      stageName: [],
      tags: (_) => (0, import_smithy_client._json)(_),
      tracingEnabled: [],
      variables: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateStageCommand");
var se_CreateUsagePlanCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/usageplans");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      apiStages: (_) => se_ListOfApiStage(_, context),
      description: [],
      name: [],
      quota: (_) => (0, import_smithy_client._json)(_),
      tags: (_) => (0, import_smithy_client._json)(_),
      throttle: (_) => se_ThrottleSettings(_, context)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateUsagePlanCommand");
var se_CreateUsagePlanKeyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/usageplans/{usagePlanId}/keys");
  b.p("usagePlanId", () => input.usagePlanId, "{usagePlanId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      keyId: [],
      keyType: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateUsagePlanKeyCommand");
var se_CreateVpcLinkCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/vpclinks");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      description: [],
      name: [],
      tags: (_) => (0, import_smithy_client._json)(_),
      targetArns: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateVpcLinkCommand");
var se_DeleteApiKeyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/apikeys/{apiKey}");
  b.p("apiKey", () => input.apiKey, "{apiKey}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteApiKeyCommand");
var se_DeleteAuthorizerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/restapis/{restApiId}/authorizers/{authorizerId}");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("authorizerId", () => input.authorizerId, "{authorizerId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteAuthorizerCommand");
var se_DeleteBasePathMappingCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/domainnames/{domainName}/basepathmappings/{basePath}");
  b.p("domainName", () => input.domainName, "{domainName}", false);
  b.p("basePath", () => input.basePath, "{basePath}", false);
  const query = (0, import_smithy_client.map)({
    [_dNI]: [, input[_dNI]]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_DeleteBasePathMappingCommand");
var se_DeleteClientCertificateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/clientcertificates/{clientCertificateId}");
  b.p("clientCertificateId", () => input.clientCertificateId, "{clientCertificateId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteClientCertificateCommand");
var se_DeleteDeploymentCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/restapis/{restApiId}/deployments/{deploymentId}");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("deploymentId", () => input.deploymentId, "{deploymentId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteDeploymentCommand");
var se_DeleteDocumentationPartCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/restapis/{restApiId}/documentation/parts/{documentationPartId}");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("documentationPartId", () => input.documentationPartId, "{documentationPartId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteDocumentationPartCommand");
var se_DeleteDocumentationVersionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/restapis/{restApiId}/documentation/versions/{documentationVersion}");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("documentationVersion", () => input.documentationVersion, "{documentationVersion}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteDocumentationVersionCommand");
var se_DeleteDomainNameCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/domainnames/{domainName}");
  b.p("domainName", () => input.domainName, "{domainName}", false);
  const query = (0, import_smithy_client.map)({
    [_dNI]: [, input[_dNI]]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_DeleteDomainNameCommand");
var se_DeleteDomainNameAccessAssociationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/domainnameaccessassociations/{domainNameAccessAssociationArn}");
  b.p(
    "domainNameAccessAssociationArn",
    () => input.domainNameAccessAssociationArn,
    "{domainNameAccessAssociationArn}",
    false
  );
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteDomainNameAccessAssociationCommand");
var se_DeleteGatewayResponseCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/restapis/{restApiId}/gatewayresponses/{responseType}");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("responseType", () => input.responseType, "{responseType}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteGatewayResponseCommand");
var se_DeleteIntegrationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}/integration");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("resourceId", () => input.resourceId, "{resourceId}", false);
  b.p("httpMethod", () => input.httpMethod, "{httpMethod}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteIntegrationCommand");
var se_DeleteIntegrationResponseCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}/integration/responses/{statusCode}");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("resourceId", () => input.resourceId, "{resourceId}", false);
  b.p("httpMethod", () => input.httpMethod, "{httpMethod}", false);
  b.p("statusCode", () => input.statusCode, "{statusCode}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteIntegrationResponseCommand");
var se_DeleteMethodCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("resourceId", () => input.resourceId, "{resourceId}", false);
  b.p("httpMethod", () => input.httpMethod, "{httpMethod}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteMethodCommand");
var se_DeleteMethodResponseCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}/responses/{statusCode}");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("resourceId", () => input.resourceId, "{resourceId}", false);
  b.p("httpMethod", () => input.httpMethod, "{httpMethod}", false);
  b.p("statusCode", () => input.statusCode, "{statusCode}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteMethodResponseCommand");
var se_DeleteModelCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/restapis/{restApiId}/models/{modelName}");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("modelName", () => input.modelName, "{modelName}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteModelCommand");
var se_DeleteRequestValidatorCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/restapis/{restApiId}/requestvalidators/{requestValidatorId}");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("requestValidatorId", () => input.requestValidatorId, "{requestValidatorId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteRequestValidatorCommand");
var se_DeleteResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/restapis/{restApiId}/resources/{resourceId}");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("resourceId", () => input.resourceId, "{resourceId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteResourceCommand");
var se_DeleteRestApiCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/restapis/{restApiId}");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteRestApiCommand");
var se_DeleteStageCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/restapis/{restApiId}/stages/{stageName}");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("stageName", () => input.stageName, "{stageName}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteStageCommand");
var se_DeleteUsagePlanCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/usageplans/{usagePlanId}");
  b.p("usagePlanId", () => input.usagePlanId, "{usagePlanId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteUsagePlanCommand");
var se_DeleteUsagePlanKeyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/usageplans/{usagePlanId}/keys/{keyId}");
  b.p("usagePlanId", () => input.usagePlanId, "{usagePlanId}", false);
  b.p("keyId", () => input.keyId, "{keyId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteUsagePlanKeyCommand");
var se_DeleteVpcLinkCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/vpclinks/{vpcLinkId}");
  b.p("vpcLinkId", () => input.vpcLinkId, "{vpcLinkId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteVpcLinkCommand");
var se_FlushStageAuthorizersCacheCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/restapis/{restApiId}/stages/{stageName}/cache/authorizers");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("stageName", () => input.stageName, "{stageName}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_FlushStageAuthorizersCacheCommand");
var se_FlushStageCacheCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/restapis/{restApiId}/stages/{stageName}/cache/data");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("stageName", () => input.stageName, "{stageName}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_FlushStageCacheCommand");
var se_GenerateClientCertificateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/clientcertificates");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      description: [],
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_GenerateClientCertificateCommand");
var se_GetAccountCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/account");
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetAccountCommand");
var se_GetApiKeyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/apikeys/{apiKey}");
  b.p("apiKey", () => input.apiKey, "{apiKey}", false);
  const query = (0, import_smithy_client.map)({
    [_iV]: [() => input.includeValue !== void 0, () => input[_iV].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetApiKeyCommand");
var se_GetApiKeysCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/apikeys");
  const query = (0, import_smithy_client.map)({
    [_p]: [, input[_p]],
    [_l]: [() => input.limit !== void 0, () => input[_l].toString()],
    [_n]: [, input[_nQ]],
    [_cI]: [, input[_cI]],
    [_iVn]: [() => input.includeValues !== void 0, () => input[_iVn].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetApiKeysCommand");
var se_GetAuthorizerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/restapis/{restApiId}/authorizers/{authorizerId}");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("authorizerId", () => input.authorizerId, "{authorizerId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetAuthorizerCommand");
var se_GetAuthorizersCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/restapis/{restApiId}/authorizers");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  const query = (0, import_smithy_client.map)({
    [_p]: [, input[_p]],
    [_l]: [() => input.limit !== void 0, () => input[_l].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetAuthorizersCommand");
var se_GetBasePathMappingCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/domainnames/{domainName}/basepathmappings/{basePath}");
  b.p("domainName", () => input.domainName, "{domainName}", false);
  b.p("basePath", () => input.basePath, "{basePath}", false);
  const query = (0, import_smithy_client.map)({
    [_dNI]: [, input[_dNI]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetBasePathMappingCommand");
var se_GetBasePathMappingsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/domainnames/{domainName}/basepathmappings");
  b.p("domainName", () => input.domainName, "{domainName}", false);
  const query = (0, import_smithy_client.map)({
    [_dNI]: [, input[_dNI]],
    [_p]: [, input[_p]],
    [_l]: [() => input.limit !== void 0, () => input[_l].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetBasePathMappingsCommand");
var se_GetClientCertificateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/clientcertificates/{clientCertificateId}");
  b.p("clientCertificateId", () => input.clientCertificateId, "{clientCertificateId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetClientCertificateCommand");
var se_GetClientCertificatesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/clientcertificates");
  const query = (0, import_smithy_client.map)({
    [_p]: [, input[_p]],
    [_l]: [() => input.limit !== void 0, () => input[_l].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetClientCertificatesCommand");
var se_GetDeploymentCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/restapis/{restApiId}/deployments/{deploymentId}");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("deploymentId", () => input.deploymentId, "{deploymentId}", false);
  const query = (0, import_smithy_client.map)({
    [_e]: [() => input.embed !== void 0, () => input[_e] || []]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetDeploymentCommand");
var se_GetDeploymentsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/restapis/{restApiId}/deployments");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  const query = (0, import_smithy_client.map)({
    [_p]: [, input[_p]],
    [_l]: [() => input.limit !== void 0, () => input[_l].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetDeploymentsCommand");
var se_GetDocumentationPartCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/restapis/{restApiId}/documentation/parts/{documentationPartId}");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("documentationPartId", () => input.documentationPartId, "{documentationPartId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetDocumentationPartCommand");
var se_GetDocumentationPartsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/restapis/{restApiId}/documentation/parts");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  const query = (0, import_smithy_client.map)({
    [_t]: [, input[_t]],
    [_n]: [, input[_nQ]],
    [_pa]: [, input[_pa]],
    [_p]: [, input[_p]],
    [_l]: [() => input.limit !== void 0, () => input[_l].toString()],
    [_lS]: [, input[_lS]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetDocumentationPartsCommand");
var se_GetDocumentationVersionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/restapis/{restApiId}/documentation/versions/{documentationVersion}");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("documentationVersion", () => input.documentationVersion, "{documentationVersion}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetDocumentationVersionCommand");
var se_GetDocumentationVersionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/restapis/{restApiId}/documentation/versions");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  const query = (0, import_smithy_client.map)({
    [_p]: [, input[_p]],
    [_l]: [() => input.limit !== void 0, () => input[_l].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetDocumentationVersionsCommand");
var se_GetDomainNameCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/domainnames/{domainName}");
  b.p("domainName", () => input.domainName, "{domainName}", false);
  const query = (0, import_smithy_client.map)({
    [_dNI]: [, input[_dNI]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetDomainNameCommand");
var se_GetDomainNameAccessAssociationsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/domainnameaccessassociations");
  const query = (0, import_smithy_client.map)({
    [_p]: [, input[_p]],
    [_l]: [() => input.limit !== void 0, () => input[_l].toString()],
    [_rO]: [, input[_rO]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetDomainNameAccessAssociationsCommand");
var se_GetDomainNamesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/domainnames");
  const query = (0, import_smithy_client.map)({
    [_p]: [, input[_p]],
    [_l]: [() => input.limit !== void 0, () => input[_l].toString()],
    [_rO]: [, input[_rO]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetDomainNamesCommand");
var se_GetExportCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, import_smithy_client.isSerializableHeaderValue, {
    [_ac]: input[_a]
  });
  b.bp("/restapis/{restApiId}/stages/{stageName}/exports/{exportType}");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("stageName", () => input.stageName, "{stageName}", false);
  b.p("exportType", () => input.exportType, "{exportType}", false);
  const query = (0, import_smithy_client.map)({
    ...(0, import_smithy_client.convertMap)(input.parameters)
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetExportCommand");
var se_GetGatewayResponseCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/restapis/{restApiId}/gatewayresponses/{responseType}");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("responseType", () => input.responseType, "{responseType}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetGatewayResponseCommand");
var se_GetGatewayResponsesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/restapis/{restApiId}/gatewayresponses");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  const query = (0, import_smithy_client.map)({
    [_p]: [, input[_p]],
    [_l]: [() => input.limit !== void 0, () => input[_l].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetGatewayResponsesCommand");
var se_GetIntegrationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}/integration");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("resourceId", () => input.resourceId, "{resourceId}", false);
  b.p("httpMethod", () => input.httpMethod, "{httpMethod}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetIntegrationCommand");
var se_GetIntegrationResponseCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}/integration/responses/{statusCode}");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("resourceId", () => input.resourceId, "{resourceId}", false);
  b.p("httpMethod", () => input.httpMethod, "{httpMethod}", false);
  b.p("statusCode", () => input.statusCode, "{statusCode}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetIntegrationResponseCommand");
var se_GetMethodCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("resourceId", () => input.resourceId, "{resourceId}", false);
  b.p("httpMethod", () => input.httpMethod, "{httpMethod}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetMethodCommand");
var se_GetMethodResponseCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}/responses/{statusCode}");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("resourceId", () => input.resourceId, "{resourceId}", false);
  b.p("httpMethod", () => input.httpMethod, "{httpMethod}", false);
  b.p("statusCode", () => input.statusCode, "{statusCode}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetMethodResponseCommand");
var se_GetModelCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/restapis/{restApiId}/models/{modelName}");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("modelName", () => input.modelName, "{modelName}", false);
  const query = (0, import_smithy_client.map)({
    [_f]: [() => input.flatten !== void 0, () => input[_f].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetModelCommand");
var se_GetModelsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/restapis/{restApiId}/models");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  const query = (0, import_smithy_client.map)({
    [_p]: [, input[_p]],
    [_l]: [() => input.limit !== void 0, () => input[_l].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetModelsCommand");
var se_GetModelTemplateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/restapis/{restApiId}/models/{modelName}/default_template");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("modelName", () => input.modelName, "{modelName}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetModelTemplateCommand");
var se_GetRequestValidatorCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/restapis/{restApiId}/requestvalidators/{requestValidatorId}");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("requestValidatorId", () => input.requestValidatorId, "{requestValidatorId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetRequestValidatorCommand");
var se_GetRequestValidatorsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/restapis/{restApiId}/requestvalidators");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  const query = (0, import_smithy_client.map)({
    [_p]: [, input[_p]],
    [_l]: [() => input.limit !== void 0, () => input[_l].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetRequestValidatorsCommand");
var se_GetResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/restapis/{restApiId}/resources/{resourceId}");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("resourceId", () => input.resourceId, "{resourceId}", false);
  const query = (0, import_smithy_client.map)({
    [_e]: [() => input.embed !== void 0, () => input[_e] || []]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetResourceCommand");
var se_GetResourcesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/restapis/{restApiId}/resources");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  const query = (0, import_smithy_client.map)({
    [_p]: [, input[_p]],
    [_l]: [() => input.limit !== void 0, () => input[_l].toString()],
    [_e]: [() => input.embed !== void 0, () => input[_e] || []]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetResourcesCommand");
var se_GetRestApiCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/restapis/{restApiId}");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetRestApiCommand");
var se_GetRestApisCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/restapis");
  const query = (0, import_smithy_client.map)({
    [_p]: [, input[_p]],
    [_l]: [() => input.limit !== void 0, () => input[_l].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetRestApisCommand");
var se_GetSdkCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/restapis/{restApiId}/stages/{stageName}/sdks/{sdkType}");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("stageName", () => input.stageName, "{stageName}", false);
  b.p("sdkType", () => input.sdkType, "{sdkType}", false);
  const query = (0, import_smithy_client.map)({
    ...(0, import_smithy_client.convertMap)(input.parameters)
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetSdkCommand");
var se_GetSdkTypeCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/sdktypes/{id}");
  b.p("id", () => input.id, "{id}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetSdkTypeCommand");
var se_GetSdkTypesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/sdktypes");
  const query = (0, import_smithy_client.map)({
    [_p]: [, input[_p]],
    [_l]: [() => input.limit !== void 0, () => input[_l].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetSdkTypesCommand");
var se_GetStageCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/restapis/{restApiId}/stages/{stageName}");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("stageName", () => input.stageName, "{stageName}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetStageCommand");
var se_GetStagesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/restapis/{restApiId}/stages");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  const query = (0, import_smithy_client.map)({
    [_dI]: [, input[_dI]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetStagesCommand");
var se_GetTagsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  const query = (0, import_smithy_client.map)({
    [_p]: [, input[_p]],
    [_l]: [() => input.limit !== void 0, () => input[_l].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetTagsCommand");
var se_GetUsageCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/usageplans/{usagePlanId}/usage");
  b.p("usagePlanId", () => input.usagePlanId, "{usagePlanId}", false);
  const query = (0, import_smithy_client.map)({
    [_kI]: [, input[_kI]],
    [_sD]: [, (0, import_smithy_client.expectNonNull)(input[_sD], `startDate`)],
    [_eD]: [, (0, import_smithy_client.expectNonNull)(input[_eD], `endDate`)],
    [_p]: [, input[_p]],
    [_l]: [() => input.limit !== void 0, () => input[_l].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetUsageCommand");
var se_GetUsagePlanCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/usageplans/{usagePlanId}");
  b.p("usagePlanId", () => input.usagePlanId, "{usagePlanId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetUsagePlanCommand");
var se_GetUsagePlanKeyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/usageplans/{usagePlanId}/keys/{keyId}");
  b.p("usagePlanId", () => input.usagePlanId, "{usagePlanId}", false);
  b.p("keyId", () => input.keyId, "{keyId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetUsagePlanKeyCommand");
var se_GetUsagePlanKeysCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/usageplans/{usagePlanId}/keys");
  b.p("usagePlanId", () => input.usagePlanId, "{usagePlanId}", false);
  const query = (0, import_smithy_client.map)({
    [_p]: [, input[_p]],
    [_l]: [() => input.limit !== void 0, () => input[_l].toString()],
    [_n]: [, input[_nQ]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetUsagePlanKeysCommand");
var se_GetUsagePlansCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/usageplans");
  const query = (0, import_smithy_client.map)({
    [_p]: [, input[_p]],
    [_kI]: [, input[_kI]],
    [_l]: [() => input.limit !== void 0, () => input[_l].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetUsagePlansCommand");
var se_GetVpcLinkCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/vpclinks/{vpcLinkId}");
  b.p("vpcLinkId", () => input.vpcLinkId, "{vpcLinkId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetVpcLinkCommand");
var se_GetVpcLinksCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/vpclinks");
  const query = (0, import_smithy_client.map)({
    [_p]: [, input[_p]],
    [_l]: [() => input.limit !== void 0, () => input[_l].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetVpcLinksCommand");
var se_ImportApiKeysCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/octet-stream"
  };
  b.bp("/apikeys");
  const query = (0, import_smithy_client.map)({
    [_m]: [, "import"],
    [_fo]: [, (0, import_smithy_client.expectNonNull)(input[_fo], `format`)],
    [_fa]: [() => input.failOnWarnings !== void 0, () => input[_fOW].toString()]
  });
  let body;
  if (input.body !== void 0) {
    body = input.body;
  }
  b.m("POST").h(headers).q(query).b(body);
  return b.build();
}, "se_ImportApiKeysCommand");
var se_ImportDocumentationPartsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/octet-stream"
  };
  b.bp("/restapis/{restApiId}/documentation/parts");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  const query = (0, import_smithy_client.map)({
    [_m]: [, input[_m]],
    [_fa]: [() => input.failOnWarnings !== void 0, () => input[_fOW].toString()]
  });
  let body;
  if (input.body !== void 0) {
    body = input.body;
  }
  b.m("PUT").h(headers).q(query).b(body);
  return b.build();
}, "se_ImportDocumentationPartsCommand");
var se_ImportRestApiCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/octet-stream"
  };
  b.bp("/restapis");
  const query = (0, import_smithy_client.map)({
    [_m]: [, "import"],
    ...(0, import_smithy_client.convertMap)(input.parameters),
    [_fa]: [() => input.failOnWarnings !== void 0, () => input[_fOW].toString()]
  });
  let body;
  if (input.body !== void 0) {
    body = input.body;
  }
  b.m("POST").h(headers).q(query).b(body);
  return b.build();
}, "se_ImportRestApiCommand");
var se_PutGatewayResponseCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/restapis/{restApiId}/gatewayresponses/{responseType}");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("responseType", () => input.responseType, "{responseType}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      responseParameters: (_) => (0, import_smithy_client._json)(_),
      responseTemplates: (_) => (0, import_smithy_client._json)(_),
      statusCode: []
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_PutGatewayResponseCommand");
var se_PutIntegrationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}/integration");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("resourceId", () => input.resourceId, "{resourceId}", false);
  b.p("httpMethod", () => input.httpMethod, "{httpMethod}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      cacheKeyParameters: (_) => (0, import_smithy_client._json)(_),
      cacheNamespace: [],
      connectionId: [],
      connectionType: [],
      contentHandling: [],
      credentials: [],
      httpMethod: [, , `integrationHttpMethod`],
      passthroughBehavior: [],
      requestParameters: (_) => (0, import_smithy_client._json)(_),
      requestTemplates: (_) => (0, import_smithy_client._json)(_),
      timeoutInMillis: [],
      tlsConfig: (_) => (0, import_smithy_client._json)(_),
      type: [],
      uri: []
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_PutIntegrationCommand");
var se_PutIntegrationResponseCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}/integration/responses/{statusCode}");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("resourceId", () => input.resourceId, "{resourceId}", false);
  b.p("httpMethod", () => input.httpMethod, "{httpMethod}", false);
  b.p("statusCode", () => input.statusCode, "{statusCode}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      contentHandling: [],
      responseParameters: (_) => (0, import_smithy_client._json)(_),
      responseTemplates: (_) => (0, import_smithy_client._json)(_),
      selectionPattern: []
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_PutIntegrationResponseCommand");
var se_PutMethodCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("resourceId", () => input.resourceId, "{resourceId}", false);
  b.p("httpMethod", () => input.httpMethod, "{httpMethod}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      apiKeyRequired: [],
      authorizationScopes: (_) => (0, import_smithy_client._json)(_),
      authorizationType: [],
      authorizerId: [],
      operationName: [],
      requestModels: (_) => (0, import_smithy_client._json)(_),
      requestParameters: (_) => (0, import_smithy_client._json)(_),
      requestValidatorId: []
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_PutMethodCommand");
var se_PutMethodResponseCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}/responses/{statusCode}");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("resourceId", () => input.resourceId, "{resourceId}", false);
  b.p("httpMethod", () => input.httpMethod, "{httpMethod}", false);
  b.p("statusCode", () => input.statusCode, "{statusCode}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      responseModels: (_) => (0, import_smithy_client._json)(_),
      responseParameters: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_PutMethodResponseCommand");
var se_PutRestApiCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/octet-stream"
  };
  b.bp("/restapis/{restApiId}");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  const query = (0, import_smithy_client.map)({
    ...(0, import_smithy_client.convertMap)(input.parameters),
    [_m]: [, input[_m]],
    [_fa]: [() => input.failOnWarnings !== void 0, () => input[_fOW].toString()]
  });
  let body;
  if (input.body !== void 0) {
    body = input.body;
  }
  b.m("PUT").h(headers).q(query).b(body);
  return b.build();
}, "se_PutRestApiCommand");
var se_RejectDomainNameAccessAssociationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/rejectdomainnameaccessassociations");
  const query = (0, import_smithy_client.map)({
    [_dNAAA]: [, (0, import_smithy_client.expectNonNull)(input[_dNAAA], `domainNameAccessAssociationArn`)],
    [_dNA]: [, (0, import_smithy_client.expectNonNull)(input[_dNA], `domainNameArn`)]
  });
  let body;
  b.m("POST").h(headers).q(query).b(body);
  return b.build();
}, "se_RejectDomainNameAccessAssociationCommand");
var se_TagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_TagResourceCommand");
var se_TestInvokeAuthorizerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/restapis/{restApiId}/authorizers/{authorizerId}");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("authorizerId", () => input.authorizerId, "{authorizerId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      additionalContext: (_) => (0, import_smithy_client._json)(_),
      body: [],
      headers: (_) => (0, import_smithy_client._json)(_),
      multiValueHeaders: (_) => (0, import_smithy_client._json)(_),
      pathWithQueryString: [],
      stageVariables: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_TestInvokeAuthorizerCommand");
var se_TestInvokeMethodCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("resourceId", () => input.resourceId, "{resourceId}", false);
  b.p("httpMethod", () => input.httpMethod, "{httpMethod}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      body: [],
      clientCertificateId: [],
      headers: (_) => (0, import_smithy_client._json)(_),
      multiValueHeaders: (_) => (0, import_smithy_client._json)(_),
      pathWithQueryString: [],
      stageVariables: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_TestInvokeMethodCommand");
var se_UntagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  const query = (0, import_smithy_client.map)({
    [_tK]: [(0, import_smithy_client.expectNonNull)(input.tagKeys, `tagKeys`) != null, () => input[_tK] || []]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_UntagResourceCommand");
var se_UpdateAccountCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/account");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      patchOperations: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("PATCH").h(headers).b(body);
  return b.build();
}, "se_UpdateAccountCommand");
var se_UpdateApiKeyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/apikeys/{apiKey}");
  b.p("apiKey", () => input.apiKey, "{apiKey}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      patchOperations: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("PATCH").h(headers).b(body);
  return b.build();
}, "se_UpdateApiKeyCommand");
var se_UpdateAuthorizerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/restapis/{restApiId}/authorizers/{authorizerId}");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("authorizerId", () => input.authorizerId, "{authorizerId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      patchOperations: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("PATCH").h(headers).b(body);
  return b.build();
}, "se_UpdateAuthorizerCommand");
var se_UpdateBasePathMappingCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/domainnames/{domainName}/basepathmappings/{basePath}");
  b.p("domainName", () => input.domainName, "{domainName}", false);
  b.p("basePath", () => input.basePath, "{basePath}", false);
  const query = (0, import_smithy_client.map)({
    [_dNI]: [, input[_dNI]]
  });
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      patchOperations: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("PATCH").h(headers).q(query).b(body);
  return b.build();
}, "se_UpdateBasePathMappingCommand");
var se_UpdateClientCertificateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/clientcertificates/{clientCertificateId}");
  b.p("clientCertificateId", () => input.clientCertificateId, "{clientCertificateId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      patchOperations: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("PATCH").h(headers).b(body);
  return b.build();
}, "se_UpdateClientCertificateCommand");
var se_UpdateDeploymentCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/restapis/{restApiId}/deployments/{deploymentId}");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("deploymentId", () => input.deploymentId, "{deploymentId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      patchOperations: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("PATCH").h(headers).b(body);
  return b.build();
}, "se_UpdateDeploymentCommand");
var se_UpdateDocumentationPartCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/restapis/{restApiId}/documentation/parts/{documentationPartId}");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("documentationPartId", () => input.documentationPartId, "{documentationPartId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      patchOperations: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("PATCH").h(headers).b(body);
  return b.build();
}, "se_UpdateDocumentationPartCommand");
var se_UpdateDocumentationVersionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/restapis/{restApiId}/documentation/versions/{documentationVersion}");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("documentationVersion", () => input.documentationVersion, "{documentationVersion}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      patchOperations: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("PATCH").h(headers).b(body);
  return b.build();
}, "se_UpdateDocumentationVersionCommand");
var se_UpdateDomainNameCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/domainnames/{domainName}");
  b.p("domainName", () => input.domainName, "{domainName}", false);
  const query = (0, import_smithy_client.map)({
    [_dNI]: [, input[_dNI]]
  });
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      patchOperations: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("PATCH").h(headers).q(query).b(body);
  return b.build();
}, "se_UpdateDomainNameCommand");
var se_UpdateGatewayResponseCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/restapis/{restApiId}/gatewayresponses/{responseType}");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("responseType", () => input.responseType, "{responseType}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      patchOperations: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("PATCH").h(headers).b(body);
  return b.build();
}, "se_UpdateGatewayResponseCommand");
var se_UpdateIntegrationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}/integration");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("resourceId", () => input.resourceId, "{resourceId}", false);
  b.p("httpMethod", () => input.httpMethod, "{httpMethod}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      patchOperations: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("PATCH").h(headers).b(body);
  return b.build();
}, "se_UpdateIntegrationCommand");
var se_UpdateIntegrationResponseCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}/integration/responses/{statusCode}");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("resourceId", () => input.resourceId, "{resourceId}", false);
  b.p("httpMethod", () => input.httpMethod, "{httpMethod}", false);
  b.p("statusCode", () => input.statusCode, "{statusCode}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      patchOperations: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("PATCH").h(headers).b(body);
  return b.build();
}, "se_UpdateIntegrationResponseCommand");
var se_UpdateMethodCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("resourceId", () => input.resourceId, "{resourceId}", false);
  b.p("httpMethod", () => input.httpMethod, "{httpMethod}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      patchOperations: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("PATCH").h(headers).b(body);
  return b.build();
}, "se_UpdateMethodCommand");
var se_UpdateMethodResponseCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}/responses/{statusCode}");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("resourceId", () => input.resourceId, "{resourceId}", false);
  b.p("httpMethod", () => input.httpMethod, "{httpMethod}", false);
  b.p("statusCode", () => input.statusCode, "{statusCode}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      patchOperations: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("PATCH").h(headers).b(body);
  return b.build();
}, "se_UpdateMethodResponseCommand");
var se_UpdateModelCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/restapis/{restApiId}/models/{modelName}");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("modelName", () => input.modelName, "{modelName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      patchOperations: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("PATCH").h(headers).b(body);
  return b.build();
}, "se_UpdateModelCommand");
var se_UpdateRequestValidatorCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/restapis/{restApiId}/requestvalidators/{requestValidatorId}");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("requestValidatorId", () => input.requestValidatorId, "{requestValidatorId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      patchOperations: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("PATCH").h(headers).b(body);
  return b.build();
}, "se_UpdateRequestValidatorCommand");
var se_UpdateResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/restapis/{restApiId}/resources/{resourceId}");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("resourceId", () => input.resourceId, "{resourceId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      patchOperations: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("PATCH").h(headers).b(body);
  return b.build();
}, "se_UpdateResourceCommand");
var se_UpdateRestApiCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/restapis/{restApiId}");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      patchOperations: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("PATCH").h(headers).b(body);
  return b.build();
}, "se_UpdateRestApiCommand");
var se_UpdateStageCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/restapis/{restApiId}/stages/{stageName}");
  b.p("restApiId", () => input.restApiId, "{restApiId}", false);
  b.p("stageName", () => input.stageName, "{stageName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      patchOperations: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("PATCH").h(headers).b(body);
  return b.build();
}, "se_UpdateStageCommand");
var se_UpdateUsageCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/usageplans/{usagePlanId}/keys/{keyId}/usage");
  b.p("usagePlanId", () => input.usagePlanId, "{usagePlanId}", false);
  b.p("keyId", () => input.keyId, "{keyId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      patchOperations: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("PATCH").h(headers).b(body);
  return b.build();
}, "se_UpdateUsageCommand");
var se_UpdateUsagePlanCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/usageplans/{usagePlanId}");
  b.p("usagePlanId", () => input.usagePlanId, "{usagePlanId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      patchOperations: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("PATCH").h(headers).b(body);
  return b.build();
}, "se_UpdateUsagePlanCommand");
var se_UpdateVpcLinkCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/vpclinks/{vpcLinkId}");
  b.p("vpcLinkId", () => input.vpcLinkId, "{vpcLinkId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      patchOperations: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("PATCH").h(headers).b(body);
  return b.build();
}, "se_UpdateVpcLinkCommand");
var de_CreateApiKeyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    createdDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    customerId: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    enabled: import_smithy_client.expectBoolean,
    id: import_smithy_client.expectString,
    lastUpdatedDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    name: import_smithy_client.expectString,
    stageKeys: import_smithy_client._json,
    tags: import_smithy_client._json,
    value: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateApiKeyCommand");
var de_CreateAuthorizerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    authType: import_smithy_client.expectString,
    authorizerCredentials: import_smithy_client.expectString,
    authorizerResultTtlInSeconds: import_smithy_client.expectInt32,
    authorizerUri: import_smithy_client.expectString,
    id: import_smithy_client.expectString,
    identitySource: import_smithy_client.expectString,
    identityValidationExpression: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    providerARNs: import_smithy_client._json,
    type: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateAuthorizerCommand");
var de_CreateBasePathMappingCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    basePath: import_smithy_client.expectString,
    restApiId: import_smithy_client.expectString,
    stage: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateBasePathMappingCommand");
var de_CreateDeploymentCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    apiSummary: import_smithy_client._json,
    createdDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    description: import_smithy_client.expectString,
    id: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateDeploymentCommand");
var de_CreateDocumentationPartCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    id: import_smithy_client.expectString,
    location: import_smithy_client._json,
    properties: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateDocumentationPartCommand");
var de_CreateDocumentationVersionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    createdDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    description: import_smithy_client.expectString,
    version: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateDocumentationVersionCommand");
var de_CreateDomainNameCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    certificateArn: import_smithy_client.expectString,
    certificateName: import_smithy_client.expectString,
    certificateUploadDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    distributionDomainName: import_smithy_client.expectString,
    distributionHostedZoneId: import_smithy_client.expectString,
    domainName: import_smithy_client.expectString,
    domainNameArn: import_smithy_client.expectString,
    domainNameId: import_smithy_client.expectString,
    domainNameStatus: import_smithy_client.expectString,
    domainNameStatusMessage: import_smithy_client.expectString,
    endpointConfiguration: import_smithy_client._json,
    managementPolicy: import_smithy_client.expectString,
    mutualTlsAuthentication: import_smithy_client._json,
    ownershipVerificationCertificateArn: import_smithy_client.expectString,
    policy: import_smithy_client.expectString,
    regionalCertificateArn: import_smithy_client.expectString,
    regionalCertificateName: import_smithy_client.expectString,
    regionalDomainName: import_smithy_client.expectString,
    regionalHostedZoneId: import_smithy_client.expectString,
    securityPolicy: import_smithy_client.expectString,
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateDomainNameCommand");
var de_CreateDomainNameAccessAssociationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    accessAssociationSource: import_smithy_client.expectString,
    accessAssociationSourceType: import_smithy_client.expectString,
    domainNameAccessAssociationArn: import_smithy_client.expectString,
    domainNameArn: import_smithy_client.expectString,
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateDomainNameAccessAssociationCommand");
var de_CreateModelCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    contentType: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    id: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    schema: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateModelCommand");
var de_CreateRequestValidatorCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    id: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    validateRequestBody: import_smithy_client.expectBoolean,
    validateRequestParameters: import_smithy_client.expectBoolean
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateRequestValidatorCommand");
var de_CreateResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    id: import_smithy_client.expectString,
    parentId: import_smithy_client.expectString,
    path: import_smithy_client.expectString,
    pathPart: import_smithy_client.expectString,
    resourceMethods: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateResourceCommand");
var de_CreateRestApiCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    apiKeySource: import_smithy_client.expectString,
    binaryMediaTypes: import_smithy_client._json,
    createdDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    description: import_smithy_client.expectString,
    disableExecuteApiEndpoint: import_smithy_client.expectBoolean,
    endpointConfiguration: import_smithy_client._json,
    id: import_smithy_client.expectString,
    minimumCompressionSize: import_smithy_client.expectInt32,
    name: import_smithy_client.expectString,
    policy: import_smithy_client.expectString,
    rootResourceId: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    version: import_smithy_client.expectString,
    warnings: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateRestApiCommand");
var de_CreateStageCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    accessLogSettings: import_smithy_client._json,
    cacheClusterEnabled: import_smithy_client.expectBoolean,
    cacheClusterSize: import_smithy_client.expectString,
    cacheClusterStatus: import_smithy_client.expectString,
    canarySettings: (_) => de_CanarySettings(_, context),
    clientCertificateId: import_smithy_client.expectString,
    createdDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    deploymentId: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    documentationVersion: import_smithy_client.expectString,
    lastUpdatedDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    methodSettings: (_) => de_MapOfMethodSettings(_, context),
    stageName: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    tracingEnabled: import_smithy_client.expectBoolean,
    variables: import_smithy_client._json,
    webAclArn: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateStageCommand");
var de_CreateUsagePlanCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    apiStages: (_) => de_ListOfApiStage(_, context),
    description: import_smithy_client.expectString,
    id: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    productCode: import_smithy_client.expectString,
    quota: import_smithy_client._json,
    tags: import_smithy_client._json,
    throttle: (_) => de_ThrottleSettings(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateUsagePlanCommand");
var de_CreateUsagePlanKeyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    id: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    type: import_smithy_client.expectString,
    value: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateUsagePlanKeyCommand");
var de_CreateVpcLinkCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    description: import_smithy_client.expectString,
    id: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    status: import_smithy_client.expectString,
    statusMessage: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    targetArns: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateVpcLinkCommand");
var de_DeleteApiKeyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteApiKeyCommand");
var de_DeleteAuthorizerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteAuthorizerCommand");
var de_DeleteBasePathMappingCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteBasePathMappingCommand");
var de_DeleteClientCertificateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteClientCertificateCommand");
var de_DeleteDeploymentCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteDeploymentCommand");
var de_DeleteDocumentationPartCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteDocumentationPartCommand");
var de_DeleteDocumentationVersionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteDocumentationVersionCommand");
var de_DeleteDomainNameCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteDomainNameCommand");
var de_DeleteDomainNameAccessAssociationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteDomainNameAccessAssociationCommand");
var de_DeleteGatewayResponseCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteGatewayResponseCommand");
var de_DeleteIntegrationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteIntegrationCommand");
var de_DeleteIntegrationResponseCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteIntegrationResponseCommand");
var de_DeleteMethodCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteMethodCommand");
var de_DeleteMethodResponseCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteMethodResponseCommand");
var de_DeleteModelCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteModelCommand");
var de_DeleteRequestValidatorCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteRequestValidatorCommand");
var de_DeleteResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteResourceCommand");
var de_DeleteRestApiCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteRestApiCommand");
var de_DeleteStageCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteStageCommand");
var de_DeleteUsagePlanCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteUsagePlanCommand");
var de_DeleteUsagePlanKeyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteUsagePlanKeyCommand");
var de_DeleteVpcLinkCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteVpcLinkCommand");
var de_FlushStageAuthorizersCacheCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_FlushStageAuthorizersCacheCommand");
var de_FlushStageCacheCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_FlushStageCacheCommand");
var de_GenerateClientCertificateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    clientCertificateId: import_smithy_client.expectString,
    createdDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    description: import_smithy_client.expectString,
    expirationDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    pemEncodedCertificate: import_smithy_client.expectString,
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GenerateClientCertificateCommand");
var de_GetAccountCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    apiKeyVersion: import_smithy_client.expectString,
    cloudwatchRoleArn: import_smithy_client.expectString,
    features: import_smithy_client._json,
    throttleSettings: (_) => de_ThrottleSettings(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetAccountCommand");
var de_GetApiKeyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    createdDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    customerId: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    enabled: import_smithy_client.expectBoolean,
    id: import_smithy_client.expectString,
    lastUpdatedDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    name: import_smithy_client.expectString,
    stageKeys: import_smithy_client._json,
    tags: import_smithy_client._json,
    value: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetApiKeyCommand");
var de_GetApiKeysCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    items: [, (_) => de_ListOfApiKey(_, context), `item`],
    position: import_smithy_client.expectString,
    warnings: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetApiKeysCommand");
var de_GetAuthorizerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    authType: import_smithy_client.expectString,
    authorizerCredentials: import_smithy_client.expectString,
    authorizerResultTtlInSeconds: import_smithy_client.expectInt32,
    authorizerUri: import_smithy_client.expectString,
    id: import_smithy_client.expectString,
    identitySource: import_smithy_client.expectString,
    identityValidationExpression: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    providerARNs: import_smithy_client._json,
    type: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetAuthorizerCommand");
var de_GetAuthorizersCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    items: [, import_smithy_client._json, `item`],
    position: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetAuthorizersCommand");
var de_GetBasePathMappingCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    basePath: import_smithy_client.expectString,
    restApiId: import_smithy_client.expectString,
    stage: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetBasePathMappingCommand");
var de_GetBasePathMappingsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    items: [, import_smithy_client._json, `item`],
    position: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetBasePathMappingsCommand");
var de_GetClientCertificateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    clientCertificateId: import_smithy_client.expectString,
    createdDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    description: import_smithy_client.expectString,
    expirationDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    pemEncodedCertificate: import_smithy_client.expectString,
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetClientCertificateCommand");
var de_GetClientCertificatesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    items: [, (_) => de_ListOfClientCertificate(_, context), `item`],
    position: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetClientCertificatesCommand");
var de_GetDeploymentCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    apiSummary: import_smithy_client._json,
    createdDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    description: import_smithy_client.expectString,
    id: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetDeploymentCommand");
var de_GetDeploymentsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    items: [, (_) => de_ListOfDeployment(_, context), `item`],
    position: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetDeploymentsCommand");
var de_GetDocumentationPartCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    id: import_smithy_client.expectString,
    location: import_smithy_client._json,
    properties: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetDocumentationPartCommand");
var de_GetDocumentationPartsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    items: [, import_smithy_client._json, `item`],
    position: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetDocumentationPartsCommand");
var de_GetDocumentationVersionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    createdDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    description: import_smithy_client.expectString,
    version: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetDocumentationVersionCommand");
var de_GetDocumentationVersionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    items: [, (_) => de_ListOfDocumentationVersion(_, context), `item`],
    position: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetDocumentationVersionsCommand");
var de_GetDomainNameCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    certificateArn: import_smithy_client.expectString,
    certificateName: import_smithy_client.expectString,
    certificateUploadDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    distributionDomainName: import_smithy_client.expectString,
    distributionHostedZoneId: import_smithy_client.expectString,
    domainName: import_smithy_client.expectString,
    domainNameArn: import_smithy_client.expectString,
    domainNameId: import_smithy_client.expectString,
    domainNameStatus: import_smithy_client.expectString,
    domainNameStatusMessage: import_smithy_client.expectString,
    endpointConfiguration: import_smithy_client._json,
    managementPolicy: import_smithy_client.expectString,
    mutualTlsAuthentication: import_smithy_client._json,
    ownershipVerificationCertificateArn: import_smithy_client.expectString,
    policy: import_smithy_client.expectString,
    regionalCertificateArn: import_smithy_client.expectString,
    regionalCertificateName: import_smithy_client.expectString,
    regionalDomainName: import_smithy_client.expectString,
    regionalHostedZoneId: import_smithy_client.expectString,
    securityPolicy: import_smithy_client.expectString,
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetDomainNameCommand");
var de_GetDomainNameAccessAssociationsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    items: [, import_smithy_client._json, `item`],
    position: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetDomainNameAccessAssociationsCommand");
var de_GetDomainNamesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    items: [, (_) => de_ListOfDomainName(_, context), `item`],
    position: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetDomainNamesCommand");
var de_GetExportCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output),
    [_cT]: [, output.headers[_ct]],
    [_cD]: [, output.headers[_cd]]
  });
  const data = await (0, import_smithy_client.collectBody)(output.body, context);
  contents.body = data;
  return contents;
}, "de_GetExportCommand");
var de_GetGatewayResponseCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    defaultResponse: import_smithy_client.expectBoolean,
    responseParameters: import_smithy_client._json,
    responseTemplates: import_smithy_client._json,
    responseType: import_smithy_client.expectString,
    statusCode: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetGatewayResponseCommand");
var de_GetGatewayResponsesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    items: [, import_smithy_client._json, `item`],
    position: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetGatewayResponsesCommand");
var de_GetIntegrationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    cacheKeyParameters: import_smithy_client._json,
    cacheNamespace: import_smithy_client.expectString,
    connectionId: import_smithy_client.expectString,
    connectionType: import_smithy_client.expectString,
    contentHandling: import_smithy_client.expectString,
    credentials: import_smithy_client.expectString,
    httpMethod: import_smithy_client.expectString,
    integrationResponses: import_smithy_client._json,
    passthroughBehavior: import_smithy_client.expectString,
    requestParameters: import_smithy_client._json,
    requestTemplates: import_smithy_client._json,
    timeoutInMillis: import_smithy_client.expectInt32,
    tlsConfig: import_smithy_client._json,
    type: import_smithy_client.expectString,
    uri: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetIntegrationCommand");
var de_GetIntegrationResponseCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    contentHandling: import_smithy_client.expectString,
    responseParameters: import_smithy_client._json,
    responseTemplates: import_smithy_client._json,
    selectionPattern: import_smithy_client.expectString,
    statusCode: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetIntegrationResponseCommand");
var de_GetMethodCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    apiKeyRequired: import_smithy_client.expectBoolean,
    authorizationScopes: import_smithy_client._json,
    authorizationType: import_smithy_client.expectString,
    authorizerId: import_smithy_client.expectString,
    httpMethod: import_smithy_client.expectString,
    methodIntegration: import_smithy_client._json,
    methodResponses: import_smithy_client._json,
    operationName: import_smithy_client.expectString,
    requestModels: import_smithy_client._json,
    requestParameters: import_smithy_client._json,
    requestValidatorId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetMethodCommand");
var de_GetMethodResponseCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    responseModels: import_smithy_client._json,
    responseParameters: import_smithy_client._json,
    statusCode: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetMethodResponseCommand");
var de_GetModelCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    contentType: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    id: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    schema: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetModelCommand");
var de_GetModelsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    items: [, import_smithy_client._json, `item`],
    position: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetModelsCommand");
var de_GetModelTemplateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    value: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetModelTemplateCommand");
var de_GetRequestValidatorCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    id: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    validateRequestBody: import_smithy_client.expectBoolean,
    validateRequestParameters: import_smithy_client.expectBoolean
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetRequestValidatorCommand");
var de_GetRequestValidatorsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    items: [, import_smithy_client._json, `item`],
    position: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetRequestValidatorsCommand");
var de_GetResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    id: import_smithy_client.expectString,
    parentId: import_smithy_client.expectString,
    path: import_smithy_client.expectString,
    pathPart: import_smithy_client.expectString,
    resourceMethods: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetResourceCommand");
var de_GetResourcesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    items: [, import_smithy_client._json, `item`],
    position: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetResourcesCommand");
var de_GetRestApiCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    apiKeySource: import_smithy_client.expectString,
    binaryMediaTypes: import_smithy_client._json,
    createdDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    description: import_smithy_client.expectString,
    disableExecuteApiEndpoint: import_smithy_client.expectBoolean,
    endpointConfiguration: import_smithy_client._json,
    id: import_smithy_client.expectString,
    minimumCompressionSize: import_smithy_client.expectInt32,
    name: import_smithy_client.expectString,
    policy: import_smithy_client.expectString,
    rootResourceId: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    version: import_smithy_client.expectString,
    warnings: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetRestApiCommand");
var de_GetRestApisCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    items: [, (_) => de_ListOfRestApi(_, context), `item`],
    position: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetRestApisCommand");
var de_GetSdkCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output),
    [_cT]: [, output.headers[_ct]],
    [_cD]: [, output.headers[_cd]]
  });
  const data = await (0, import_smithy_client.collectBody)(output.body, context);
  contents.body = data;
  return contents;
}, "de_GetSdkCommand");
var de_GetSdkTypeCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    configurationProperties: import_smithy_client._json,
    description: import_smithy_client.expectString,
    friendlyName: import_smithy_client.expectString,
    id: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetSdkTypeCommand");
var de_GetSdkTypesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    items: [, import_smithy_client._json, `item`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetSdkTypesCommand");
var de_GetStageCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    accessLogSettings: import_smithy_client._json,
    cacheClusterEnabled: import_smithy_client.expectBoolean,
    cacheClusterSize: import_smithy_client.expectString,
    cacheClusterStatus: import_smithy_client.expectString,
    canarySettings: (_) => de_CanarySettings(_, context),
    clientCertificateId: import_smithy_client.expectString,
    createdDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    deploymentId: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    documentationVersion: import_smithy_client.expectString,
    lastUpdatedDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    methodSettings: (_) => de_MapOfMethodSettings(_, context),
    stageName: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    tracingEnabled: import_smithy_client.expectBoolean,
    variables: import_smithy_client._json,
    webAclArn: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetStageCommand");
var de_GetStagesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    item: (_) => de_ListOfStage(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetStagesCommand");
var de_GetTagsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetTagsCommand");
var de_GetUsageCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    endDate: import_smithy_client.expectString,
    items: [, import_smithy_client._json, `values`],
    position: import_smithy_client.expectString,
    startDate: import_smithy_client.expectString,
    usagePlanId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetUsageCommand");
var de_GetUsagePlanCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    apiStages: (_) => de_ListOfApiStage(_, context),
    description: import_smithy_client.expectString,
    id: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    productCode: import_smithy_client.expectString,
    quota: import_smithy_client._json,
    tags: import_smithy_client._json,
    throttle: (_) => de_ThrottleSettings(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetUsagePlanCommand");
var de_GetUsagePlanKeyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    id: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    type: import_smithy_client.expectString,
    value: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetUsagePlanKeyCommand");
var de_GetUsagePlanKeysCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    items: [, import_smithy_client._json, `item`],
    position: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetUsagePlanKeysCommand");
var de_GetUsagePlansCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    items: [, (_) => de_ListOfUsagePlan(_, context), `item`],
    position: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetUsagePlansCommand");
var de_GetVpcLinkCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    description: import_smithy_client.expectString,
    id: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    status: import_smithy_client.expectString,
    statusMessage: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    targetArns: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetVpcLinkCommand");
var de_GetVpcLinksCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    items: [, import_smithy_client._json, `item`],
    position: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetVpcLinksCommand");
var de_ImportApiKeysCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ids: import_smithy_client._json,
    warnings: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ImportApiKeysCommand");
var de_ImportDocumentationPartsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ids: import_smithy_client._json,
    warnings: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ImportDocumentationPartsCommand");
var de_ImportRestApiCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    apiKeySource: import_smithy_client.expectString,
    binaryMediaTypes: import_smithy_client._json,
    createdDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    description: import_smithy_client.expectString,
    disableExecuteApiEndpoint: import_smithy_client.expectBoolean,
    endpointConfiguration: import_smithy_client._json,
    id: import_smithy_client.expectString,
    minimumCompressionSize: import_smithy_client.expectInt32,
    name: import_smithy_client.expectString,
    policy: import_smithy_client.expectString,
    rootResourceId: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    version: import_smithy_client.expectString,
    warnings: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ImportRestApiCommand");
var de_PutGatewayResponseCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    defaultResponse: import_smithy_client.expectBoolean,
    responseParameters: import_smithy_client._json,
    responseTemplates: import_smithy_client._json,
    responseType: import_smithy_client.expectString,
    statusCode: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_PutGatewayResponseCommand");
var de_PutIntegrationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    cacheKeyParameters: import_smithy_client._json,
    cacheNamespace: import_smithy_client.expectString,
    connectionId: import_smithy_client.expectString,
    connectionType: import_smithy_client.expectString,
    contentHandling: import_smithy_client.expectString,
    credentials: import_smithy_client.expectString,
    httpMethod: import_smithy_client.expectString,
    integrationResponses: import_smithy_client._json,
    passthroughBehavior: import_smithy_client.expectString,
    requestParameters: import_smithy_client._json,
    requestTemplates: import_smithy_client._json,
    timeoutInMillis: import_smithy_client.expectInt32,
    tlsConfig: import_smithy_client._json,
    type: import_smithy_client.expectString,
    uri: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_PutIntegrationCommand");
var de_PutIntegrationResponseCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    contentHandling: import_smithy_client.expectString,
    responseParameters: import_smithy_client._json,
    responseTemplates: import_smithy_client._json,
    selectionPattern: import_smithy_client.expectString,
    statusCode: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_PutIntegrationResponseCommand");
var de_PutMethodCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    apiKeyRequired: import_smithy_client.expectBoolean,
    authorizationScopes: import_smithy_client._json,
    authorizationType: import_smithy_client.expectString,
    authorizerId: import_smithy_client.expectString,
    httpMethod: import_smithy_client.expectString,
    methodIntegration: import_smithy_client._json,
    methodResponses: import_smithy_client._json,
    operationName: import_smithy_client.expectString,
    requestModels: import_smithy_client._json,
    requestParameters: import_smithy_client._json,
    requestValidatorId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_PutMethodCommand");
var de_PutMethodResponseCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    responseModels: import_smithy_client._json,
    responseParameters: import_smithy_client._json,
    statusCode: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_PutMethodResponseCommand");
var de_PutRestApiCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    apiKeySource: import_smithy_client.expectString,
    binaryMediaTypes: import_smithy_client._json,
    createdDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    description: import_smithy_client.expectString,
    disableExecuteApiEndpoint: import_smithy_client.expectBoolean,
    endpointConfiguration: import_smithy_client._json,
    id: import_smithy_client.expectString,
    minimumCompressionSize: import_smithy_client.expectInt32,
    name: import_smithy_client.expectString,
    policy: import_smithy_client.expectString,
    rootResourceId: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    version: import_smithy_client.expectString,
    warnings: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_PutRestApiCommand");
var de_RejectDomainNameAccessAssociationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_RejectDomainNameAccessAssociationCommand");
var de_TagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_TagResourceCommand");
var de_TestInvokeAuthorizerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    authorization: import_smithy_client._json,
    claims: import_smithy_client._json,
    clientStatus: import_smithy_client.expectInt32,
    latency: import_smithy_client.expectLong,
    log: import_smithy_client.expectString,
    policy: import_smithy_client.expectString,
    principalId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_TestInvokeAuthorizerCommand");
var de_TestInvokeMethodCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    body: import_smithy_client.expectString,
    headers: import_smithy_client._json,
    latency: import_smithy_client.expectLong,
    log: import_smithy_client.expectString,
    multiValueHeaders: import_smithy_client._json,
    status: import_smithy_client.expectInt32
  });
  Object.assign(contents, doc);
  return contents;
}, "de_TestInvokeMethodCommand");
var de_UntagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UntagResourceCommand");
var de_UpdateAccountCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    apiKeyVersion: import_smithy_client.expectString,
    cloudwatchRoleArn: import_smithy_client.expectString,
    features: import_smithy_client._json,
    throttleSettings: (_) => de_ThrottleSettings(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateAccountCommand");
var de_UpdateApiKeyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    createdDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    customerId: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    enabled: import_smithy_client.expectBoolean,
    id: import_smithy_client.expectString,
    lastUpdatedDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    name: import_smithy_client.expectString,
    stageKeys: import_smithy_client._json,
    tags: import_smithy_client._json,
    value: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateApiKeyCommand");
var de_UpdateAuthorizerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    authType: import_smithy_client.expectString,
    authorizerCredentials: import_smithy_client.expectString,
    authorizerResultTtlInSeconds: import_smithy_client.expectInt32,
    authorizerUri: import_smithy_client.expectString,
    id: import_smithy_client.expectString,
    identitySource: import_smithy_client.expectString,
    identityValidationExpression: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    providerARNs: import_smithy_client._json,
    type: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateAuthorizerCommand");
var de_UpdateBasePathMappingCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    basePath: import_smithy_client.expectString,
    restApiId: import_smithy_client.expectString,
    stage: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateBasePathMappingCommand");
var de_UpdateClientCertificateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    clientCertificateId: import_smithy_client.expectString,
    createdDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    description: import_smithy_client.expectString,
    expirationDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    pemEncodedCertificate: import_smithy_client.expectString,
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateClientCertificateCommand");
var de_UpdateDeploymentCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    apiSummary: import_smithy_client._json,
    createdDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    description: import_smithy_client.expectString,
    id: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateDeploymentCommand");
var de_UpdateDocumentationPartCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    id: import_smithy_client.expectString,
    location: import_smithy_client._json,
    properties: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateDocumentationPartCommand");
var de_UpdateDocumentationVersionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    createdDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    description: import_smithy_client.expectString,
    version: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateDocumentationVersionCommand");
var de_UpdateDomainNameCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    certificateArn: import_smithy_client.expectString,
    certificateName: import_smithy_client.expectString,
    certificateUploadDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    distributionDomainName: import_smithy_client.expectString,
    distributionHostedZoneId: import_smithy_client.expectString,
    domainName: import_smithy_client.expectString,
    domainNameArn: import_smithy_client.expectString,
    domainNameId: import_smithy_client.expectString,
    domainNameStatus: import_smithy_client.expectString,
    domainNameStatusMessage: import_smithy_client.expectString,
    endpointConfiguration: import_smithy_client._json,
    managementPolicy: import_smithy_client.expectString,
    mutualTlsAuthentication: import_smithy_client._json,
    ownershipVerificationCertificateArn: import_smithy_client.expectString,
    policy: import_smithy_client.expectString,
    regionalCertificateArn: import_smithy_client.expectString,
    regionalCertificateName: import_smithy_client.expectString,
    regionalDomainName: import_smithy_client.expectString,
    regionalHostedZoneId: import_smithy_client.expectString,
    securityPolicy: import_smithy_client.expectString,
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateDomainNameCommand");
var de_UpdateGatewayResponseCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    defaultResponse: import_smithy_client.expectBoolean,
    responseParameters: import_smithy_client._json,
    responseTemplates: import_smithy_client._json,
    responseType: import_smithy_client.expectString,
    statusCode: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateGatewayResponseCommand");
var de_UpdateIntegrationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    cacheKeyParameters: import_smithy_client._json,
    cacheNamespace: import_smithy_client.expectString,
    connectionId: import_smithy_client.expectString,
    connectionType: import_smithy_client.expectString,
    contentHandling: import_smithy_client.expectString,
    credentials: import_smithy_client.expectString,
    httpMethod: import_smithy_client.expectString,
    integrationResponses: import_smithy_client._json,
    passthroughBehavior: import_smithy_client.expectString,
    requestParameters: import_smithy_client._json,
    requestTemplates: import_smithy_client._json,
    timeoutInMillis: import_smithy_client.expectInt32,
    tlsConfig: import_smithy_client._json,
    type: import_smithy_client.expectString,
    uri: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateIntegrationCommand");
var de_UpdateIntegrationResponseCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    contentHandling: import_smithy_client.expectString,
    responseParameters: import_smithy_client._json,
    responseTemplates: import_smithy_client._json,
    selectionPattern: import_smithy_client.expectString,
    statusCode: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateIntegrationResponseCommand");
var de_UpdateMethodCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    apiKeyRequired: import_smithy_client.expectBoolean,
    authorizationScopes: import_smithy_client._json,
    authorizationType: import_smithy_client.expectString,
    authorizerId: import_smithy_client.expectString,
    httpMethod: import_smithy_client.expectString,
    methodIntegration: import_smithy_client._json,
    methodResponses: import_smithy_client._json,
    operationName: import_smithy_client.expectString,
    requestModels: import_smithy_client._json,
    requestParameters: import_smithy_client._json,
    requestValidatorId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateMethodCommand");
var de_UpdateMethodResponseCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    responseModels: import_smithy_client._json,
    responseParameters: import_smithy_client._json,
    statusCode: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateMethodResponseCommand");
var de_UpdateModelCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    contentType: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    id: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    schema: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateModelCommand");
var de_UpdateRequestValidatorCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    id: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    validateRequestBody: import_smithy_client.expectBoolean,
    validateRequestParameters: import_smithy_client.expectBoolean
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateRequestValidatorCommand");
var de_UpdateResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    id: import_smithy_client.expectString,
    parentId: import_smithy_client.expectString,
    path: import_smithy_client.expectString,
    pathPart: import_smithy_client.expectString,
    resourceMethods: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateResourceCommand");
var de_UpdateRestApiCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    apiKeySource: import_smithy_client.expectString,
    binaryMediaTypes: import_smithy_client._json,
    createdDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    description: import_smithy_client.expectString,
    disableExecuteApiEndpoint: import_smithy_client.expectBoolean,
    endpointConfiguration: import_smithy_client._json,
    id: import_smithy_client.expectString,
    minimumCompressionSize: import_smithy_client.expectInt32,
    name: import_smithy_client.expectString,
    policy: import_smithy_client.expectString,
    rootResourceId: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    version: import_smithy_client.expectString,
    warnings: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateRestApiCommand");
var de_UpdateStageCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    accessLogSettings: import_smithy_client._json,
    cacheClusterEnabled: import_smithy_client.expectBoolean,
    cacheClusterSize: import_smithy_client.expectString,
    cacheClusterStatus: import_smithy_client.expectString,
    canarySettings: (_) => de_CanarySettings(_, context),
    clientCertificateId: import_smithy_client.expectString,
    createdDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    deploymentId: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    documentationVersion: import_smithy_client.expectString,
    lastUpdatedDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    methodSettings: (_) => de_MapOfMethodSettings(_, context),
    stageName: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    tracingEnabled: import_smithy_client.expectBoolean,
    variables: import_smithy_client._json,
    webAclArn: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateStageCommand");
var de_UpdateUsageCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    endDate: import_smithy_client.expectString,
    items: [, import_smithy_client._json, `values`],
    position: import_smithy_client.expectString,
    startDate: import_smithy_client.expectString,
    usagePlanId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateUsageCommand");
var de_UpdateUsagePlanCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    apiStages: (_) => de_ListOfApiStage(_, context),
    description: import_smithy_client.expectString,
    id: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    productCode: import_smithy_client.expectString,
    quota: import_smithy_client._json,
    tags: import_smithy_client._json,
    throttle: (_) => de_ThrottleSettings(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateUsagePlanCommand");
var de_UpdateVpcLinkCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    description: import_smithy_client.expectString,
    id: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    status: import_smithy_client.expectString,
    statusMessage: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    targetArns: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateVpcLinkCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await (0, import_core2.parseJsonErrorBody)(output.body, context)
  };
  const errorCode = (0, import_core2.loadRestJsonErrorCode)(output, parsedOutput.body);
  switch (errorCode) {
    case "BadRequestException":
    case "com.amazonaws.apigateway#BadRequestException":
      throw await de_BadRequestExceptionRes(parsedOutput, context);
    case "ConflictException":
    case "com.amazonaws.apigateway#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.apigateway#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    case "NotFoundException":
    case "com.amazonaws.apigateway#NotFoundException":
      throw await de_NotFoundExceptionRes(parsedOutput, context);
    case "TooManyRequestsException":
    case "com.amazonaws.apigateway#TooManyRequestsException":
      throw await de_TooManyRequestsExceptionRes(parsedOutput, context);
    case "UnauthorizedException":
    case "com.amazonaws.apigateway#UnauthorizedException":
      throw await de_UnauthorizedExceptionRes(parsedOutput, context);
    case "ServiceUnavailableException":
    case "com.amazonaws.apigateway#ServiceUnavailableException":
      throw await de_ServiceUnavailableExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var throwDefaultError = (0, import_smithy_client.withBaseException)(APIGatewayServiceException);
var de_BadRequestExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new BadRequestException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_BadRequestExceptionRes");
var de_ConflictExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ConflictException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ConflictExceptionRes");
var de_LimitExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({
    [_rAS]: [, parsedOutput.headers[_ra]]
  });
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new LimitExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_LimitExceededExceptionRes");
var de_NotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new NotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_NotFoundExceptionRes");
var de_ServiceUnavailableExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({
    [_rAS]: [, parsedOutput.headers[_ra]]
  });
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ServiceUnavailableException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ServiceUnavailableExceptionRes");
var de_TooManyRequestsExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({
    [_rAS]: [, parsedOutput.headers[_ra]]
  });
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new TooManyRequestsException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_TooManyRequestsExceptionRes");
var de_UnauthorizedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new UnauthorizedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_UnauthorizedExceptionRes");
var se_ApiStage = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    apiId: [],
    stage: [],
    throttle: (_) => se_MapOfApiStageThrottleSettings(_, context)
  });
}, "se_ApiStage");
var se_CanarySettings = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    deploymentId: [],
    percentTraffic: import_smithy_client.serializeFloat,
    stageVariableOverrides: import_smithy_client._json,
    useStageCache: []
  });
}, "se_CanarySettings");
var se_DeploymentCanarySettings = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    percentTraffic: import_smithy_client.serializeFloat,
    stageVariableOverrides: import_smithy_client._json,
    useStageCache: []
  });
}, "se_DeploymentCanarySettings");
var se_ListOfApiStage = /* @__PURE__ */ __name((input, context) => {
  return input.filter((e) => e != null).map((entry) => {
    return se_ApiStage(entry, context);
  });
}, "se_ListOfApiStage");
var se_MapOfApiStageThrottleSettings = /* @__PURE__ */ __name((input, context) => {
  return Object.entries(input).reduce((acc, [key, value]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = se_ThrottleSettings(value, context);
    return acc;
  }, {});
}, "se_MapOfApiStageThrottleSettings");
var se_ThrottleSettings = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    burstLimit: [],
    rateLimit: import_smithy_client.serializeFloat
  });
}, "se_ThrottleSettings");
var de_ApiKey = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    createdDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    customerId: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    enabled: import_smithy_client.expectBoolean,
    id: import_smithy_client.expectString,
    lastUpdatedDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    name: import_smithy_client.expectString,
    stageKeys: import_smithy_client._json,
    tags: import_smithy_client._json,
    value: import_smithy_client.expectString
  });
}, "de_ApiKey");
var de_ApiStage = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    apiId: import_smithy_client.expectString,
    stage: import_smithy_client.expectString,
    throttle: (_) => de_MapOfApiStageThrottleSettings(_, context)
  });
}, "de_ApiStage");
var de_CanarySettings = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    deploymentId: import_smithy_client.expectString,
    percentTraffic: import_smithy_client.limitedParseDouble,
    stageVariableOverrides: import_smithy_client._json,
    useStageCache: import_smithy_client.expectBoolean
  });
}, "de_CanarySettings");
var de_ClientCertificate = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    clientCertificateId: import_smithy_client.expectString,
    createdDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    description: import_smithy_client.expectString,
    expirationDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    pemEncodedCertificate: import_smithy_client.expectString,
    tags: import_smithy_client._json
  });
}, "de_ClientCertificate");
var de_Deployment = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    apiSummary: import_smithy_client._json,
    createdDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    description: import_smithy_client.expectString,
    id: import_smithy_client.expectString
  });
}, "de_Deployment");
var de_DocumentationVersion = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    createdDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    description: import_smithy_client.expectString,
    version: import_smithy_client.expectString
  });
}, "de_DocumentationVersion");
var de_DomainName = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    certificateArn: import_smithy_client.expectString,
    certificateName: import_smithy_client.expectString,
    certificateUploadDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    distributionDomainName: import_smithy_client.expectString,
    distributionHostedZoneId: import_smithy_client.expectString,
    domainName: import_smithy_client.expectString,
    domainNameArn: import_smithy_client.expectString,
    domainNameId: import_smithy_client.expectString,
    domainNameStatus: import_smithy_client.expectString,
    domainNameStatusMessage: import_smithy_client.expectString,
    endpointConfiguration: import_smithy_client._json,
    managementPolicy: import_smithy_client.expectString,
    mutualTlsAuthentication: import_smithy_client._json,
    ownershipVerificationCertificateArn: import_smithy_client.expectString,
    policy: import_smithy_client.expectString,
    regionalCertificateArn: import_smithy_client.expectString,
    regionalCertificateName: import_smithy_client.expectString,
    regionalDomainName: import_smithy_client.expectString,
    regionalHostedZoneId: import_smithy_client.expectString,
    securityPolicy: import_smithy_client.expectString,
    tags: import_smithy_client._json
  });
}, "de_DomainName");
var de_ListOfApiKey = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ApiKey(entry, context);
  });
  return retVal;
}, "de_ListOfApiKey");
var de_ListOfApiStage = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ApiStage(entry, context);
  });
  return retVal;
}, "de_ListOfApiStage");
var de_ListOfClientCertificate = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ClientCertificate(entry, context);
  });
  return retVal;
}, "de_ListOfClientCertificate");
var de_ListOfDeployment = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Deployment(entry, context);
  });
  return retVal;
}, "de_ListOfDeployment");
var de_ListOfDocumentationVersion = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_DocumentationVersion(entry, context);
  });
  return retVal;
}, "de_ListOfDocumentationVersion");
var de_ListOfDomainName = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_DomainName(entry, context);
  });
  return retVal;
}, "de_ListOfDomainName");
var de_ListOfRestApi = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_RestApi(entry, context);
  });
  return retVal;
}, "de_ListOfRestApi");
var de_ListOfStage = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Stage(entry, context);
  });
  return retVal;
}, "de_ListOfStage");
var de_ListOfUsagePlan = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_UsagePlan(entry, context);
  });
  return retVal;
}, "de_ListOfUsagePlan");
var de_MapOfApiStageThrottleSettings = /* @__PURE__ */ __name((output, context) => {
  return Object.entries(output).reduce((acc, [key, value]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = de_ThrottleSettings(value, context);
    return acc;
  }, {});
}, "de_MapOfApiStageThrottleSettings");
var de_MapOfMethodSettings = /* @__PURE__ */ __name((output, context) => {
  return Object.entries(output).reduce((acc, [key, value]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = de_MethodSetting(value, context);
    return acc;
  }, {});
}, "de_MapOfMethodSettings");
var de_MethodSetting = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    cacheDataEncrypted: import_smithy_client.expectBoolean,
    cacheTtlInSeconds: import_smithy_client.expectInt32,
    cachingEnabled: import_smithy_client.expectBoolean,
    dataTraceEnabled: import_smithy_client.expectBoolean,
    loggingLevel: import_smithy_client.expectString,
    metricsEnabled: import_smithy_client.expectBoolean,
    requireAuthorizationForCacheControl: import_smithy_client.expectBoolean,
    throttlingBurstLimit: import_smithy_client.expectInt32,
    throttlingRateLimit: import_smithy_client.limitedParseDouble,
    unauthorizedCacheControlHeaderStrategy: import_smithy_client.expectString
  });
}, "de_MethodSetting");
var de_RestApi = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    apiKeySource: import_smithy_client.expectString,
    binaryMediaTypes: import_smithy_client._json,
    createdDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    description: import_smithy_client.expectString,
    disableExecuteApiEndpoint: import_smithy_client.expectBoolean,
    endpointConfiguration: import_smithy_client._json,
    id: import_smithy_client.expectString,
    minimumCompressionSize: import_smithy_client.expectInt32,
    name: import_smithy_client.expectString,
    policy: import_smithy_client.expectString,
    rootResourceId: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    version: import_smithy_client.expectString,
    warnings: import_smithy_client._json
  });
}, "de_RestApi");
var de_Stage = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    accessLogSettings: import_smithy_client._json,
    cacheClusterEnabled: import_smithy_client.expectBoolean,
    cacheClusterSize: import_smithy_client.expectString,
    cacheClusterStatus: import_smithy_client.expectString,
    canarySettings: (_) => de_CanarySettings(_, context),
    clientCertificateId: import_smithy_client.expectString,
    createdDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    deploymentId: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    documentationVersion: import_smithy_client.expectString,
    lastUpdatedDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    methodSettings: (_) => de_MapOfMethodSettings(_, context),
    stageName: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    tracingEnabled: import_smithy_client.expectBoolean,
    variables: import_smithy_client._json,
    webAclArn: import_smithy_client.expectString
  });
}, "de_Stage");
var de_ThrottleSettings = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    burstLimit: import_smithy_client.expectInt32,
    rateLimit: import_smithy_client.limitedParseDouble
  });
}, "de_ThrottleSettings");
var de_UsagePlan = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    apiStages: (_) => de_ListOfApiStage(_, context),
    description: import_smithy_client.expectString,
    id: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    productCode: import_smithy_client.expectString,
    quota: import_smithy_client._json,
    tags: import_smithy_client._json,
    throttle: (_) => de_ThrottleSettings(_, context)
  });
}, "de_UsagePlan");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var _a = "accepts";
var _ac = "accept";
var _cD = "contentDisposition";
var _cI = "customerId";
var _cT = "contentType";
var _cd = "content-disposition";
var _ct = "content-type";
var _dI = "deploymentId";
var _dNA = "domainNameArn";
var _dNAAA = "domainNameAccessAssociationArn";
var _dNI = "domainNameId";
var _e = "embed";
var _eD = "endDate";
var _f = "flatten";
var _fOW = "failOnWarnings";
var _fa = "failonwarnings";
var _fo = "format";
var _iV = "includeValue";
var _iVn = "includeValues";
var _kI = "keyId";
var _l = "limit";
var _lS = "locationStatus";
var _m = "mode";
var _n = "name";
var _nQ = "nameQuery";
var _p = "position";
var _pa = "path";
var _rAS = "retryAfterSeconds";
var _rO = "resourceOwner";
var _ra = "retry-after";
var _sD = "startDate";
var _t = "type";
var _tK = "tagKeys";

// src/commands/CreateApiKeyCommand.ts
var CreateApiKeyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "CreateApiKey", {}).n("APIGatewayClient", "CreateApiKeyCommand").f(void 0, void 0).ser(se_CreateApiKeyCommand).de(de_CreateApiKeyCommand).build() {
  static {
    __name(this, "CreateApiKeyCommand");
  }
};

// src/commands/CreateAuthorizerCommand.ts



var CreateAuthorizerCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "CreateAuthorizer", {}).n("APIGatewayClient", "CreateAuthorizerCommand").f(void 0, void 0).ser(se_CreateAuthorizerCommand).de(de_CreateAuthorizerCommand).build() {
  static {
    __name(this, "CreateAuthorizerCommand");
  }
};

// src/commands/CreateBasePathMappingCommand.ts



var CreateBasePathMappingCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "CreateBasePathMapping", {}).n("APIGatewayClient", "CreateBasePathMappingCommand").f(void 0, void 0).ser(se_CreateBasePathMappingCommand).de(de_CreateBasePathMappingCommand).build() {
  static {
    __name(this, "CreateBasePathMappingCommand");
  }
};

// src/commands/CreateDeploymentCommand.ts



var CreateDeploymentCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "CreateDeployment", {}).n("APIGatewayClient", "CreateDeploymentCommand").f(void 0, void 0).ser(se_CreateDeploymentCommand).de(de_CreateDeploymentCommand).build() {
  static {
    __name(this, "CreateDeploymentCommand");
  }
};

// src/commands/CreateDocumentationPartCommand.ts



var CreateDocumentationPartCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "CreateDocumentationPart", {}).n("APIGatewayClient", "CreateDocumentationPartCommand").f(void 0, void 0).ser(se_CreateDocumentationPartCommand).de(de_CreateDocumentationPartCommand).build() {
  static {
    __name(this, "CreateDocumentationPartCommand");
  }
};

// src/commands/CreateDocumentationVersionCommand.ts



var CreateDocumentationVersionCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "CreateDocumentationVersion", {}).n("APIGatewayClient", "CreateDocumentationVersionCommand").f(void 0, void 0).ser(se_CreateDocumentationVersionCommand).de(de_CreateDocumentationVersionCommand).build() {
  static {
    __name(this, "CreateDocumentationVersionCommand");
  }
};

// src/commands/CreateDomainNameAccessAssociationCommand.ts



var CreateDomainNameAccessAssociationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "CreateDomainNameAccessAssociation", {}).n("APIGatewayClient", "CreateDomainNameAccessAssociationCommand").f(void 0, void 0).ser(se_CreateDomainNameAccessAssociationCommand).de(de_CreateDomainNameAccessAssociationCommand).build() {
  static {
    __name(this, "CreateDomainNameAccessAssociationCommand");
  }
};

// src/commands/CreateDomainNameCommand.ts



var CreateDomainNameCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "CreateDomainName", {}).n("APIGatewayClient", "CreateDomainNameCommand").f(void 0, void 0).ser(se_CreateDomainNameCommand).de(de_CreateDomainNameCommand).build() {
  static {
    __name(this, "CreateDomainNameCommand");
  }
};

// src/commands/CreateModelCommand.ts



var CreateModelCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "CreateModel", {}).n("APIGatewayClient", "CreateModelCommand").f(void 0, void 0).ser(se_CreateModelCommand).de(de_CreateModelCommand).build() {
  static {
    __name(this, "CreateModelCommand");
  }
};

// src/commands/CreateRequestValidatorCommand.ts



var CreateRequestValidatorCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "CreateRequestValidator", {}).n("APIGatewayClient", "CreateRequestValidatorCommand").f(void 0, void 0).ser(se_CreateRequestValidatorCommand).de(de_CreateRequestValidatorCommand).build() {
  static {
    __name(this, "CreateRequestValidatorCommand");
  }
};

// src/commands/CreateResourceCommand.ts



var CreateResourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "CreateResource", {}).n("APIGatewayClient", "CreateResourceCommand").f(void 0, void 0).ser(se_CreateResourceCommand).de(de_CreateResourceCommand).build() {
  static {
    __name(this, "CreateResourceCommand");
  }
};

// src/commands/CreateRestApiCommand.ts



var CreateRestApiCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "CreateRestApi", {}).n("APIGatewayClient", "CreateRestApiCommand").f(void 0, void 0).ser(se_CreateRestApiCommand).de(de_CreateRestApiCommand).build() {
  static {
    __name(this, "CreateRestApiCommand");
  }
};

// src/commands/CreateStageCommand.ts



var CreateStageCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "CreateStage", {}).n("APIGatewayClient", "CreateStageCommand").f(void 0, void 0).ser(se_CreateStageCommand).de(de_CreateStageCommand).build() {
  static {
    __name(this, "CreateStageCommand");
  }
};

// src/commands/CreateUsagePlanCommand.ts



var CreateUsagePlanCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "CreateUsagePlan", {}).n("APIGatewayClient", "CreateUsagePlanCommand").f(void 0, void 0).ser(se_CreateUsagePlanCommand).de(de_CreateUsagePlanCommand).build() {
  static {
    __name(this, "CreateUsagePlanCommand");
  }
};

// src/commands/CreateUsagePlanKeyCommand.ts



var CreateUsagePlanKeyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "CreateUsagePlanKey", {}).n("APIGatewayClient", "CreateUsagePlanKeyCommand").f(void 0, void 0).ser(se_CreateUsagePlanKeyCommand).de(de_CreateUsagePlanKeyCommand).build() {
  static {
    __name(this, "CreateUsagePlanKeyCommand");
  }
};

// src/commands/CreateVpcLinkCommand.ts



var CreateVpcLinkCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "CreateVpcLink", {}).n("APIGatewayClient", "CreateVpcLinkCommand").f(void 0, void 0).ser(se_CreateVpcLinkCommand).de(de_CreateVpcLinkCommand).build() {
  static {
    __name(this, "CreateVpcLinkCommand");
  }
};

// src/commands/DeleteApiKeyCommand.ts



var DeleteApiKeyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "DeleteApiKey", {}).n("APIGatewayClient", "DeleteApiKeyCommand").f(void 0, void 0).ser(se_DeleteApiKeyCommand).de(de_DeleteApiKeyCommand).build() {
  static {
    __name(this, "DeleteApiKeyCommand");
  }
};

// src/commands/DeleteAuthorizerCommand.ts



var DeleteAuthorizerCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "DeleteAuthorizer", {}).n("APIGatewayClient", "DeleteAuthorizerCommand").f(void 0, void 0).ser(se_DeleteAuthorizerCommand).de(de_DeleteAuthorizerCommand).build() {
  static {
    __name(this, "DeleteAuthorizerCommand");
  }
};

// src/commands/DeleteBasePathMappingCommand.ts



var DeleteBasePathMappingCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "DeleteBasePathMapping", {}).n("APIGatewayClient", "DeleteBasePathMappingCommand").f(void 0, void 0).ser(se_DeleteBasePathMappingCommand).de(de_DeleteBasePathMappingCommand).build() {
  static {
    __name(this, "DeleteBasePathMappingCommand");
  }
};

// src/commands/DeleteClientCertificateCommand.ts



var DeleteClientCertificateCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "DeleteClientCertificate", {}).n("APIGatewayClient", "DeleteClientCertificateCommand").f(void 0, void 0).ser(se_DeleteClientCertificateCommand).de(de_DeleteClientCertificateCommand).build() {
  static {
    __name(this, "DeleteClientCertificateCommand");
  }
};

// src/commands/DeleteDeploymentCommand.ts



var DeleteDeploymentCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "DeleteDeployment", {}).n("APIGatewayClient", "DeleteDeploymentCommand").f(void 0, void 0).ser(se_DeleteDeploymentCommand).de(de_DeleteDeploymentCommand).build() {
  static {
    __name(this, "DeleteDeploymentCommand");
  }
};

// src/commands/DeleteDocumentationPartCommand.ts



var DeleteDocumentationPartCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "DeleteDocumentationPart", {}).n("APIGatewayClient", "DeleteDocumentationPartCommand").f(void 0, void 0).ser(se_DeleteDocumentationPartCommand).de(de_DeleteDocumentationPartCommand).build() {
  static {
    __name(this, "DeleteDocumentationPartCommand");
  }
};

// src/commands/DeleteDocumentationVersionCommand.ts



var DeleteDocumentationVersionCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "DeleteDocumentationVersion", {}).n("APIGatewayClient", "DeleteDocumentationVersionCommand").f(void 0, void 0).ser(se_DeleteDocumentationVersionCommand).de(de_DeleteDocumentationVersionCommand).build() {
  static {
    __name(this, "DeleteDocumentationVersionCommand");
  }
};

// src/commands/DeleteDomainNameAccessAssociationCommand.ts



var DeleteDomainNameAccessAssociationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "DeleteDomainNameAccessAssociation", {}).n("APIGatewayClient", "DeleteDomainNameAccessAssociationCommand").f(void 0, void 0).ser(se_DeleteDomainNameAccessAssociationCommand).de(de_DeleteDomainNameAccessAssociationCommand).build() {
  static {
    __name(this, "DeleteDomainNameAccessAssociationCommand");
  }
};

// src/commands/DeleteDomainNameCommand.ts



var DeleteDomainNameCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "DeleteDomainName", {}).n("APIGatewayClient", "DeleteDomainNameCommand").f(void 0, void 0).ser(se_DeleteDomainNameCommand).de(de_DeleteDomainNameCommand).build() {
  static {
    __name(this, "DeleteDomainNameCommand");
  }
};

// src/commands/DeleteGatewayResponseCommand.ts



var DeleteGatewayResponseCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "DeleteGatewayResponse", {}).n("APIGatewayClient", "DeleteGatewayResponseCommand").f(void 0, void 0).ser(se_DeleteGatewayResponseCommand).de(de_DeleteGatewayResponseCommand).build() {
  static {
    __name(this, "DeleteGatewayResponseCommand");
  }
};

// src/commands/DeleteIntegrationCommand.ts



var DeleteIntegrationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "DeleteIntegration", {}).n("APIGatewayClient", "DeleteIntegrationCommand").f(void 0, void 0).ser(se_DeleteIntegrationCommand).de(de_DeleteIntegrationCommand).build() {
  static {
    __name(this, "DeleteIntegrationCommand");
  }
};

// src/commands/DeleteIntegrationResponseCommand.ts



var DeleteIntegrationResponseCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "DeleteIntegrationResponse", {}).n("APIGatewayClient", "DeleteIntegrationResponseCommand").f(void 0, void 0).ser(se_DeleteIntegrationResponseCommand).de(de_DeleteIntegrationResponseCommand).build() {
  static {
    __name(this, "DeleteIntegrationResponseCommand");
  }
};

// src/commands/DeleteMethodCommand.ts



var DeleteMethodCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "DeleteMethod", {}).n("APIGatewayClient", "DeleteMethodCommand").f(void 0, void 0).ser(se_DeleteMethodCommand).de(de_DeleteMethodCommand).build() {
  static {
    __name(this, "DeleteMethodCommand");
  }
};

// src/commands/DeleteMethodResponseCommand.ts



var DeleteMethodResponseCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "DeleteMethodResponse", {}).n("APIGatewayClient", "DeleteMethodResponseCommand").f(void 0, void 0).ser(se_DeleteMethodResponseCommand).de(de_DeleteMethodResponseCommand).build() {
  static {
    __name(this, "DeleteMethodResponseCommand");
  }
};

// src/commands/DeleteModelCommand.ts



var DeleteModelCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "DeleteModel", {}).n("APIGatewayClient", "DeleteModelCommand").f(void 0, void 0).ser(se_DeleteModelCommand).de(de_DeleteModelCommand).build() {
  static {
    __name(this, "DeleteModelCommand");
  }
};

// src/commands/DeleteRequestValidatorCommand.ts



var DeleteRequestValidatorCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "DeleteRequestValidator", {}).n("APIGatewayClient", "DeleteRequestValidatorCommand").f(void 0, void 0).ser(se_DeleteRequestValidatorCommand).de(de_DeleteRequestValidatorCommand).build() {
  static {
    __name(this, "DeleteRequestValidatorCommand");
  }
};

// src/commands/DeleteResourceCommand.ts



var DeleteResourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "DeleteResource", {}).n("APIGatewayClient", "DeleteResourceCommand").f(void 0, void 0).ser(se_DeleteResourceCommand).de(de_DeleteResourceCommand).build() {
  static {
    __name(this, "DeleteResourceCommand");
  }
};

// src/commands/DeleteRestApiCommand.ts



var DeleteRestApiCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "DeleteRestApi", {}).n("APIGatewayClient", "DeleteRestApiCommand").f(void 0, void 0).ser(se_DeleteRestApiCommand).de(de_DeleteRestApiCommand).build() {
  static {
    __name(this, "DeleteRestApiCommand");
  }
};

// src/commands/DeleteStageCommand.ts



var DeleteStageCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "DeleteStage", {}).n("APIGatewayClient", "DeleteStageCommand").f(void 0, void 0).ser(se_DeleteStageCommand).de(de_DeleteStageCommand).build() {
  static {
    __name(this, "DeleteStageCommand");
  }
};

// src/commands/DeleteUsagePlanCommand.ts



var DeleteUsagePlanCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "DeleteUsagePlan", {}).n("APIGatewayClient", "DeleteUsagePlanCommand").f(void 0, void 0).ser(se_DeleteUsagePlanCommand).de(de_DeleteUsagePlanCommand).build() {
  static {
    __name(this, "DeleteUsagePlanCommand");
  }
};

// src/commands/DeleteUsagePlanKeyCommand.ts



var DeleteUsagePlanKeyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "DeleteUsagePlanKey", {}).n("APIGatewayClient", "DeleteUsagePlanKeyCommand").f(void 0, void 0).ser(se_DeleteUsagePlanKeyCommand).de(de_DeleteUsagePlanKeyCommand).build() {
  static {
    __name(this, "DeleteUsagePlanKeyCommand");
  }
};

// src/commands/DeleteVpcLinkCommand.ts



var DeleteVpcLinkCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "DeleteVpcLink", {}).n("APIGatewayClient", "DeleteVpcLinkCommand").f(void 0, void 0).ser(se_DeleteVpcLinkCommand).de(de_DeleteVpcLinkCommand).build() {
  static {
    __name(this, "DeleteVpcLinkCommand");
  }
};

// src/commands/FlushStageAuthorizersCacheCommand.ts



var FlushStageAuthorizersCacheCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "FlushStageAuthorizersCache", {}).n("APIGatewayClient", "FlushStageAuthorizersCacheCommand").f(void 0, void 0).ser(se_FlushStageAuthorizersCacheCommand).de(de_FlushStageAuthorizersCacheCommand).build() {
  static {
    __name(this, "FlushStageAuthorizersCacheCommand");
  }
};

// src/commands/FlushStageCacheCommand.ts



var FlushStageCacheCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "FlushStageCache", {}).n("APIGatewayClient", "FlushStageCacheCommand").f(void 0, void 0).ser(se_FlushStageCacheCommand).de(de_FlushStageCacheCommand).build() {
  static {
    __name(this, "FlushStageCacheCommand");
  }
};

// src/commands/GenerateClientCertificateCommand.ts



var GenerateClientCertificateCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "GenerateClientCertificate", {}).n("APIGatewayClient", "GenerateClientCertificateCommand").f(void 0, void 0).ser(se_GenerateClientCertificateCommand).de(de_GenerateClientCertificateCommand).build() {
  static {
    __name(this, "GenerateClientCertificateCommand");
  }
};

// src/commands/GetAccountCommand.ts



var GetAccountCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "GetAccount", {}).n("APIGatewayClient", "GetAccountCommand").f(void 0, void 0).ser(se_GetAccountCommand).de(de_GetAccountCommand).build() {
  static {
    __name(this, "GetAccountCommand");
  }
};

// src/commands/GetApiKeyCommand.ts



var GetApiKeyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "GetApiKey", {}).n("APIGatewayClient", "GetApiKeyCommand").f(void 0, void 0).ser(se_GetApiKeyCommand).de(de_GetApiKeyCommand).build() {
  static {
    __name(this, "GetApiKeyCommand");
  }
};

// src/commands/GetApiKeysCommand.ts



var GetApiKeysCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "GetApiKeys", {}).n("APIGatewayClient", "GetApiKeysCommand").f(void 0, void 0).ser(se_GetApiKeysCommand).de(de_GetApiKeysCommand).build() {
  static {
    __name(this, "GetApiKeysCommand");
  }
};

// src/commands/GetAuthorizerCommand.ts



var GetAuthorizerCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "GetAuthorizer", {}).n("APIGatewayClient", "GetAuthorizerCommand").f(void 0, void 0).ser(se_GetAuthorizerCommand).de(de_GetAuthorizerCommand).build() {
  static {
    __name(this, "GetAuthorizerCommand");
  }
};

// src/commands/GetAuthorizersCommand.ts



var GetAuthorizersCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "GetAuthorizers", {}).n("APIGatewayClient", "GetAuthorizersCommand").f(void 0, void 0).ser(se_GetAuthorizersCommand).de(de_GetAuthorizersCommand).build() {
  static {
    __name(this, "GetAuthorizersCommand");
  }
};

// src/commands/GetBasePathMappingCommand.ts



var GetBasePathMappingCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "GetBasePathMapping", {}).n("APIGatewayClient", "GetBasePathMappingCommand").f(void 0, void 0).ser(se_GetBasePathMappingCommand).de(de_GetBasePathMappingCommand).build() {
  static {
    __name(this, "GetBasePathMappingCommand");
  }
};

// src/commands/GetBasePathMappingsCommand.ts



var GetBasePathMappingsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "GetBasePathMappings", {}).n("APIGatewayClient", "GetBasePathMappingsCommand").f(void 0, void 0).ser(se_GetBasePathMappingsCommand).de(de_GetBasePathMappingsCommand).build() {
  static {
    __name(this, "GetBasePathMappingsCommand");
  }
};

// src/commands/GetClientCertificateCommand.ts



var GetClientCertificateCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "GetClientCertificate", {}).n("APIGatewayClient", "GetClientCertificateCommand").f(void 0, void 0).ser(se_GetClientCertificateCommand).de(de_GetClientCertificateCommand).build() {
  static {
    __name(this, "GetClientCertificateCommand");
  }
};

// src/commands/GetClientCertificatesCommand.ts



var GetClientCertificatesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "GetClientCertificates", {}).n("APIGatewayClient", "GetClientCertificatesCommand").f(void 0, void 0).ser(se_GetClientCertificatesCommand).de(de_GetClientCertificatesCommand).build() {
  static {
    __name(this, "GetClientCertificatesCommand");
  }
};

// src/commands/GetDeploymentCommand.ts



var GetDeploymentCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "GetDeployment", {}).n("APIGatewayClient", "GetDeploymentCommand").f(void 0, void 0).ser(se_GetDeploymentCommand).de(de_GetDeploymentCommand).build() {
  static {
    __name(this, "GetDeploymentCommand");
  }
};

// src/commands/GetDeploymentsCommand.ts



var GetDeploymentsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "GetDeployments", {}).n("APIGatewayClient", "GetDeploymentsCommand").f(void 0, void 0).ser(se_GetDeploymentsCommand).de(de_GetDeploymentsCommand).build() {
  static {
    __name(this, "GetDeploymentsCommand");
  }
};

// src/commands/GetDocumentationPartCommand.ts



var GetDocumentationPartCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "GetDocumentationPart", {}).n("APIGatewayClient", "GetDocumentationPartCommand").f(void 0, void 0).ser(se_GetDocumentationPartCommand).de(de_GetDocumentationPartCommand).build() {
  static {
    __name(this, "GetDocumentationPartCommand");
  }
};

// src/commands/GetDocumentationPartsCommand.ts



var GetDocumentationPartsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "GetDocumentationParts", {}).n("APIGatewayClient", "GetDocumentationPartsCommand").f(void 0, void 0).ser(se_GetDocumentationPartsCommand).de(de_GetDocumentationPartsCommand).build() {
  static {
    __name(this, "GetDocumentationPartsCommand");
  }
};

// src/commands/GetDocumentationVersionCommand.ts



var GetDocumentationVersionCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "GetDocumentationVersion", {}).n("APIGatewayClient", "GetDocumentationVersionCommand").f(void 0, void 0).ser(se_GetDocumentationVersionCommand).de(de_GetDocumentationVersionCommand).build() {
  static {
    __name(this, "GetDocumentationVersionCommand");
  }
};

// src/commands/GetDocumentationVersionsCommand.ts



var GetDocumentationVersionsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "GetDocumentationVersions", {}).n("APIGatewayClient", "GetDocumentationVersionsCommand").f(void 0, void 0).ser(se_GetDocumentationVersionsCommand).de(de_GetDocumentationVersionsCommand).build() {
  static {
    __name(this, "GetDocumentationVersionsCommand");
  }
};

// src/commands/GetDomainNameAccessAssociationsCommand.ts



var GetDomainNameAccessAssociationsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "GetDomainNameAccessAssociations", {}).n("APIGatewayClient", "GetDomainNameAccessAssociationsCommand").f(void 0, void 0).ser(se_GetDomainNameAccessAssociationsCommand).de(de_GetDomainNameAccessAssociationsCommand).build() {
  static {
    __name(this, "GetDomainNameAccessAssociationsCommand");
  }
};

// src/commands/GetDomainNameCommand.ts



var GetDomainNameCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "GetDomainName", {}).n("APIGatewayClient", "GetDomainNameCommand").f(void 0, void 0).ser(se_GetDomainNameCommand).de(de_GetDomainNameCommand).build() {
  static {
    __name(this, "GetDomainNameCommand");
  }
};

// src/commands/GetDomainNamesCommand.ts



var GetDomainNamesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "GetDomainNames", {}).n("APIGatewayClient", "GetDomainNamesCommand").f(void 0, void 0).ser(se_GetDomainNamesCommand).de(de_GetDomainNamesCommand).build() {
  static {
    __name(this, "GetDomainNamesCommand");
  }
};

// src/commands/GetExportCommand.ts



var GetExportCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "GetExport", {}).n("APIGatewayClient", "GetExportCommand").f(void 0, void 0).ser(se_GetExportCommand).de(de_GetExportCommand).build() {
  static {
    __name(this, "GetExportCommand");
  }
};

// src/commands/GetGatewayResponseCommand.ts



var GetGatewayResponseCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "GetGatewayResponse", {}).n("APIGatewayClient", "GetGatewayResponseCommand").f(void 0, void 0).ser(se_GetGatewayResponseCommand).de(de_GetGatewayResponseCommand).build() {
  static {
    __name(this, "GetGatewayResponseCommand");
  }
};

// src/commands/GetGatewayResponsesCommand.ts



var GetGatewayResponsesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "GetGatewayResponses", {}).n("APIGatewayClient", "GetGatewayResponsesCommand").f(void 0, void 0).ser(se_GetGatewayResponsesCommand).de(de_GetGatewayResponsesCommand).build() {
  static {
    __name(this, "GetGatewayResponsesCommand");
  }
};

// src/commands/GetIntegrationCommand.ts



var GetIntegrationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "GetIntegration", {}).n("APIGatewayClient", "GetIntegrationCommand").f(void 0, void 0).ser(se_GetIntegrationCommand).de(de_GetIntegrationCommand).build() {
  static {
    __name(this, "GetIntegrationCommand");
  }
};

// src/commands/GetIntegrationResponseCommand.ts



var GetIntegrationResponseCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "GetIntegrationResponse", {}).n("APIGatewayClient", "GetIntegrationResponseCommand").f(void 0, void 0).ser(se_GetIntegrationResponseCommand).de(de_GetIntegrationResponseCommand).build() {
  static {
    __name(this, "GetIntegrationResponseCommand");
  }
};

// src/commands/GetMethodCommand.ts



var GetMethodCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "GetMethod", {}).n("APIGatewayClient", "GetMethodCommand").f(void 0, void 0).ser(se_GetMethodCommand).de(de_GetMethodCommand).build() {
  static {
    __name(this, "GetMethodCommand");
  }
};

// src/commands/GetMethodResponseCommand.ts



var GetMethodResponseCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "GetMethodResponse", {}).n("APIGatewayClient", "GetMethodResponseCommand").f(void 0, void 0).ser(se_GetMethodResponseCommand).de(de_GetMethodResponseCommand).build() {
  static {
    __name(this, "GetMethodResponseCommand");
  }
};

// src/commands/GetModelCommand.ts



var GetModelCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "GetModel", {}).n("APIGatewayClient", "GetModelCommand").f(void 0, void 0).ser(se_GetModelCommand).de(de_GetModelCommand).build() {
  static {
    __name(this, "GetModelCommand");
  }
};

// src/commands/GetModelsCommand.ts



var GetModelsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "GetModels", {}).n("APIGatewayClient", "GetModelsCommand").f(void 0, void 0).ser(se_GetModelsCommand).de(de_GetModelsCommand).build() {
  static {
    __name(this, "GetModelsCommand");
  }
};

// src/commands/GetModelTemplateCommand.ts



var GetModelTemplateCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "GetModelTemplate", {}).n("APIGatewayClient", "GetModelTemplateCommand").f(void 0, void 0).ser(se_GetModelTemplateCommand).de(de_GetModelTemplateCommand).build() {
  static {
    __name(this, "GetModelTemplateCommand");
  }
};

// src/commands/GetRequestValidatorCommand.ts



var GetRequestValidatorCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "GetRequestValidator", {}).n("APIGatewayClient", "GetRequestValidatorCommand").f(void 0, void 0).ser(se_GetRequestValidatorCommand).de(de_GetRequestValidatorCommand).build() {
  static {
    __name(this, "GetRequestValidatorCommand");
  }
};

// src/commands/GetRequestValidatorsCommand.ts



var GetRequestValidatorsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "GetRequestValidators", {}).n("APIGatewayClient", "GetRequestValidatorsCommand").f(void 0, void 0).ser(se_GetRequestValidatorsCommand).de(de_GetRequestValidatorsCommand).build() {
  static {
    __name(this, "GetRequestValidatorsCommand");
  }
};

// src/commands/GetResourceCommand.ts



var GetResourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "GetResource", {}).n("APIGatewayClient", "GetResourceCommand").f(void 0, void 0).ser(se_GetResourceCommand).de(de_GetResourceCommand).build() {
  static {
    __name(this, "GetResourceCommand");
  }
};

// src/commands/GetResourcesCommand.ts



var GetResourcesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "GetResources", {}).n("APIGatewayClient", "GetResourcesCommand").f(void 0, void 0).ser(se_GetResourcesCommand).de(de_GetResourcesCommand).build() {
  static {
    __name(this, "GetResourcesCommand");
  }
};

// src/commands/GetRestApiCommand.ts



var GetRestApiCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "GetRestApi", {}).n("APIGatewayClient", "GetRestApiCommand").f(void 0, void 0).ser(se_GetRestApiCommand).de(de_GetRestApiCommand).build() {
  static {
    __name(this, "GetRestApiCommand");
  }
};

// src/commands/GetRestApisCommand.ts



var GetRestApisCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "GetRestApis", {}).n("APIGatewayClient", "GetRestApisCommand").f(void 0, void 0).ser(se_GetRestApisCommand).de(de_GetRestApisCommand).build() {
  static {
    __name(this, "GetRestApisCommand");
  }
};

// src/commands/GetSdkCommand.ts



var GetSdkCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "GetSdk", {}).n("APIGatewayClient", "GetSdkCommand").f(void 0, void 0).ser(se_GetSdkCommand).de(de_GetSdkCommand).build() {
  static {
    __name(this, "GetSdkCommand");
  }
};

// src/commands/GetSdkTypeCommand.ts



var GetSdkTypeCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "GetSdkType", {}).n("APIGatewayClient", "GetSdkTypeCommand").f(void 0, void 0).ser(se_GetSdkTypeCommand).de(de_GetSdkTypeCommand).build() {
  static {
    __name(this, "GetSdkTypeCommand");
  }
};

// src/commands/GetSdkTypesCommand.ts



var GetSdkTypesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "GetSdkTypes", {}).n("APIGatewayClient", "GetSdkTypesCommand").f(void 0, void 0).ser(se_GetSdkTypesCommand).de(de_GetSdkTypesCommand).build() {
  static {
    __name(this, "GetSdkTypesCommand");
  }
};

// src/commands/GetStageCommand.ts



var GetStageCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "GetStage", {}).n("APIGatewayClient", "GetStageCommand").f(void 0, void 0).ser(se_GetStageCommand).de(de_GetStageCommand).build() {
  static {
    __name(this, "GetStageCommand");
  }
};

// src/commands/GetStagesCommand.ts



var GetStagesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "GetStages", {}).n("APIGatewayClient", "GetStagesCommand").f(void 0, void 0).ser(se_GetStagesCommand).de(de_GetStagesCommand).build() {
  static {
    __name(this, "GetStagesCommand");
  }
};

// src/commands/GetTagsCommand.ts



var GetTagsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "GetTags", {}).n("APIGatewayClient", "GetTagsCommand").f(void 0, void 0).ser(se_GetTagsCommand).de(de_GetTagsCommand).build() {
  static {
    __name(this, "GetTagsCommand");
  }
};

// src/commands/GetUsageCommand.ts



var GetUsageCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "GetUsage", {}).n("APIGatewayClient", "GetUsageCommand").f(void 0, void 0).ser(se_GetUsageCommand).de(de_GetUsageCommand).build() {
  static {
    __name(this, "GetUsageCommand");
  }
};

// src/commands/GetUsagePlanCommand.ts



var GetUsagePlanCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "GetUsagePlan", {}).n("APIGatewayClient", "GetUsagePlanCommand").f(void 0, void 0).ser(se_GetUsagePlanCommand).de(de_GetUsagePlanCommand).build() {
  static {
    __name(this, "GetUsagePlanCommand");
  }
};

// src/commands/GetUsagePlanKeyCommand.ts



var GetUsagePlanKeyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "GetUsagePlanKey", {}).n("APIGatewayClient", "GetUsagePlanKeyCommand").f(void 0, void 0).ser(se_GetUsagePlanKeyCommand).de(de_GetUsagePlanKeyCommand).build() {
  static {
    __name(this, "GetUsagePlanKeyCommand");
  }
};

// src/commands/GetUsagePlanKeysCommand.ts



var GetUsagePlanKeysCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "GetUsagePlanKeys", {}).n("APIGatewayClient", "GetUsagePlanKeysCommand").f(void 0, void 0).ser(se_GetUsagePlanKeysCommand).de(de_GetUsagePlanKeysCommand).build() {
  static {
    __name(this, "GetUsagePlanKeysCommand");
  }
};

// src/commands/GetUsagePlansCommand.ts



var GetUsagePlansCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "GetUsagePlans", {}).n("APIGatewayClient", "GetUsagePlansCommand").f(void 0, void 0).ser(se_GetUsagePlansCommand).de(de_GetUsagePlansCommand).build() {
  static {
    __name(this, "GetUsagePlansCommand");
  }
};

// src/commands/GetVpcLinkCommand.ts



var GetVpcLinkCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "GetVpcLink", {}).n("APIGatewayClient", "GetVpcLinkCommand").f(void 0, void 0).ser(se_GetVpcLinkCommand).de(de_GetVpcLinkCommand).build() {
  static {
    __name(this, "GetVpcLinkCommand");
  }
};

// src/commands/GetVpcLinksCommand.ts



var GetVpcLinksCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "GetVpcLinks", {}).n("APIGatewayClient", "GetVpcLinksCommand").f(void 0, void 0).ser(se_GetVpcLinksCommand).de(de_GetVpcLinksCommand).build() {
  static {
    __name(this, "GetVpcLinksCommand");
  }
};

// src/commands/ImportApiKeysCommand.ts



var ImportApiKeysCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "ImportApiKeys", {}).n("APIGatewayClient", "ImportApiKeysCommand").f(void 0, void 0).ser(se_ImportApiKeysCommand).de(de_ImportApiKeysCommand).build() {
  static {
    __name(this, "ImportApiKeysCommand");
  }
};

// src/commands/ImportDocumentationPartsCommand.ts



var ImportDocumentationPartsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "ImportDocumentationParts", {}).n("APIGatewayClient", "ImportDocumentationPartsCommand").f(void 0, void 0).ser(se_ImportDocumentationPartsCommand).de(de_ImportDocumentationPartsCommand).build() {
  static {
    __name(this, "ImportDocumentationPartsCommand");
  }
};

// src/commands/ImportRestApiCommand.ts



var ImportRestApiCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "ImportRestApi", {}).n("APIGatewayClient", "ImportRestApiCommand").f(void 0, void 0).ser(se_ImportRestApiCommand).de(de_ImportRestApiCommand).build() {
  static {
    __name(this, "ImportRestApiCommand");
  }
};

// src/commands/PutGatewayResponseCommand.ts



var PutGatewayResponseCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "PutGatewayResponse", {}).n("APIGatewayClient", "PutGatewayResponseCommand").f(void 0, void 0).ser(se_PutGatewayResponseCommand).de(de_PutGatewayResponseCommand).build() {
  static {
    __name(this, "PutGatewayResponseCommand");
  }
};

// src/commands/PutIntegrationCommand.ts



var PutIntegrationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "PutIntegration", {}).n("APIGatewayClient", "PutIntegrationCommand").f(void 0, void 0).ser(se_PutIntegrationCommand).de(de_PutIntegrationCommand).build() {
  static {
    __name(this, "PutIntegrationCommand");
  }
};

// src/commands/PutIntegrationResponseCommand.ts



var PutIntegrationResponseCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "PutIntegrationResponse", {}).n("APIGatewayClient", "PutIntegrationResponseCommand").f(void 0, void 0).ser(se_PutIntegrationResponseCommand).de(de_PutIntegrationResponseCommand).build() {
  static {
    __name(this, "PutIntegrationResponseCommand");
  }
};

// src/commands/PutMethodCommand.ts



var PutMethodCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "PutMethod", {}).n("APIGatewayClient", "PutMethodCommand").f(void 0, void 0).ser(se_PutMethodCommand).de(de_PutMethodCommand).build() {
  static {
    __name(this, "PutMethodCommand");
  }
};

// src/commands/PutMethodResponseCommand.ts



var PutMethodResponseCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "PutMethodResponse", {}).n("APIGatewayClient", "PutMethodResponseCommand").f(void 0, void 0).ser(se_PutMethodResponseCommand).de(de_PutMethodResponseCommand).build() {
  static {
    __name(this, "PutMethodResponseCommand");
  }
};

// src/commands/PutRestApiCommand.ts



var PutRestApiCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "PutRestApi", {}).n("APIGatewayClient", "PutRestApiCommand").f(void 0, void 0).ser(se_PutRestApiCommand).de(de_PutRestApiCommand).build() {
  static {
    __name(this, "PutRestApiCommand");
  }
};

// src/commands/RejectDomainNameAccessAssociationCommand.ts



var RejectDomainNameAccessAssociationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "RejectDomainNameAccessAssociation", {}).n("APIGatewayClient", "RejectDomainNameAccessAssociationCommand").f(void 0, void 0).ser(se_RejectDomainNameAccessAssociationCommand).de(de_RejectDomainNameAccessAssociationCommand).build() {
  static {
    __name(this, "RejectDomainNameAccessAssociationCommand");
  }
};

// src/commands/TagResourceCommand.ts



var TagResourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "TagResource", {}).n("APIGatewayClient", "TagResourceCommand").f(void 0, void 0).ser(se_TagResourceCommand).de(de_TagResourceCommand).build() {
  static {
    __name(this, "TagResourceCommand");
  }
};

// src/commands/TestInvokeAuthorizerCommand.ts



var TestInvokeAuthorizerCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "TestInvokeAuthorizer", {}).n("APIGatewayClient", "TestInvokeAuthorizerCommand").f(void 0, void 0).ser(se_TestInvokeAuthorizerCommand).de(de_TestInvokeAuthorizerCommand).build() {
  static {
    __name(this, "TestInvokeAuthorizerCommand");
  }
};

// src/commands/TestInvokeMethodCommand.ts



var TestInvokeMethodCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "TestInvokeMethod", {}).n("APIGatewayClient", "TestInvokeMethodCommand").f(void 0, void 0).ser(se_TestInvokeMethodCommand).de(de_TestInvokeMethodCommand).build() {
  static {
    __name(this, "TestInvokeMethodCommand");
  }
};

// src/commands/UntagResourceCommand.ts



var UntagResourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "UntagResource", {}).n("APIGatewayClient", "UntagResourceCommand").f(void 0, void 0).ser(se_UntagResourceCommand).de(de_UntagResourceCommand).build() {
  static {
    __name(this, "UntagResourceCommand");
  }
};

// src/commands/UpdateAccountCommand.ts



var UpdateAccountCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "UpdateAccount", {}).n("APIGatewayClient", "UpdateAccountCommand").f(void 0, void 0).ser(se_UpdateAccountCommand).de(de_UpdateAccountCommand).build() {
  static {
    __name(this, "UpdateAccountCommand");
  }
};

// src/commands/UpdateApiKeyCommand.ts



var UpdateApiKeyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "UpdateApiKey", {}).n("APIGatewayClient", "UpdateApiKeyCommand").f(void 0, void 0).ser(se_UpdateApiKeyCommand).de(de_UpdateApiKeyCommand).build() {
  static {
    __name(this, "UpdateApiKeyCommand");
  }
};

// src/commands/UpdateAuthorizerCommand.ts



var UpdateAuthorizerCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "UpdateAuthorizer", {}).n("APIGatewayClient", "UpdateAuthorizerCommand").f(void 0, void 0).ser(se_UpdateAuthorizerCommand).de(de_UpdateAuthorizerCommand).build() {
  static {
    __name(this, "UpdateAuthorizerCommand");
  }
};

// src/commands/UpdateBasePathMappingCommand.ts



var UpdateBasePathMappingCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "UpdateBasePathMapping", {}).n("APIGatewayClient", "UpdateBasePathMappingCommand").f(void 0, void 0).ser(se_UpdateBasePathMappingCommand).de(de_UpdateBasePathMappingCommand).build() {
  static {
    __name(this, "UpdateBasePathMappingCommand");
  }
};

// src/commands/UpdateClientCertificateCommand.ts



var UpdateClientCertificateCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "UpdateClientCertificate", {}).n("APIGatewayClient", "UpdateClientCertificateCommand").f(void 0, void 0).ser(se_UpdateClientCertificateCommand).de(de_UpdateClientCertificateCommand).build() {
  static {
    __name(this, "UpdateClientCertificateCommand");
  }
};

// src/commands/UpdateDeploymentCommand.ts



var UpdateDeploymentCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "UpdateDeployment", {}).n("APIGatewayClient", "UpdateDeploymentCommand").f(void 0, void 0).ser(se_UpdateDeploymentCommand).de(de_UpdateDeploymentCommand).build() {
  static {
    __name(this, "UpdateDeploymentCommand");
  }
};

// src/commands/UpdateDocumentationPartCommand.ts



var UpdateDocumentationPartCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "UpdateDocumentationPart", {}).n("APIGatewayClient", "UpdateDocumentationPartCommand").f(void 0, void 0).ser(se_UpdateDocumentationPartCommand).de(de_UpdateDocumentationPartCommand).build() {
  static {
    __name(this, "UpdateDocumentationPartCommand");
  }
};

// src/commands/UpdateDocumentationVersionCommand.ts



var UpdateDocumentationVersionCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "UpdateDocumentationVersion", {}).n("APIGatewayClient", "UpdateDocumentationVersionCommand").f(void 0, void 0).ser(se_UpdateDocumentationVersionCommand).de(de_UpdateDocumentationVersionCommand).build() {
  static {
    __name(this, "UpdateDocumentationVersionCommand");
  }
};

// src/commands/UpdateDomainNameCommand.ts



var UpdateDomainNameCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "UpdateDomainName", {}).n("APIGatewayClient", "UpdateDomainNameCommand").f(void 0, void 0).ser(se_UpdateDomainNameCommand).de(de_UpdateDomainNameCommand).build() {
  static {
    __name(this, "UpdateDomainNameCommand");
  }
};

// src/commands/UpdateGatewayResponseCommand.ts



var UpdateGatewayResponseCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "UpdateGatewayResponse", {}).n("APIGatewayClient", "UpdateGatewayResponseCommand").f(void 0, void 0).ser(se_UpdateGatewayResponseCommand).de(de_UpdateGatewayResponseCommand).build() {
  static {
    __name(this, "UpdateGatewayResponseCommand");
  }
};

// src/commands/UpdateIntegrationCommand.ts



var UpdateIntegrationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "UpdateIntegration", {}).n("APIGatewayClient", "UpdateIntegrationCommand").f(void 0, void 0).ser(se_UpdateIntegrationCommand).de(de_UpdateIntegrationCommand).build() {
  static {
    __name(this, "UpdateIntegrationCommand");
  }
};

// src/commands/UpdateIntegrationResponseCommand.ts



var UpdateIntegrationResponseCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "UpdateIntegrationResponse", {}).n("APIGatewayClient", "UpdateIntegrationResponseCommand").f(void 0, void 0).ser(se_UpdateIntegrationResponseCommand).de(de_UpdateIntegrationResponseCommand).build() {
  static {
    __name(this, "UpdateIntegrationResponseCommand");
  }
};

// src/commands/UpdateMethodCommand.ts



var UpdateMethodCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "UpdateMethod", {}).n("APIGatewayClient", "UpdateMethodCommand").f(void 0, void 0).ser(se_UpdateMethodCommand).de(de_UpdateMethodCommand).build() {
  static {
    __name(this, "UpdateMethodCommand");
  }
};

// src/commands/UpdateMethodResponseCommand.ts



var UpdateMethodResponseCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "UpdateMethodResponse", {}).n("APIGatewayClient", "UpdateMethodResponseCommand").f(void 0, void 0).ser(se_UpdateMethodResponseCommand).de(de_UpdateMethodResponseCommand).build() {
  static {
    __name(this, "UpdateMethodResponseCommand");
  }
};

// src/commands/UpdateModelCommand.ts



var UpdateModelCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "UpdateModel", {}).n("APIGatewayClient", "UpdateModelCommand").f(void 0, void 0).ser(se_UpdateModelCommand).de(de_UpdateModelCommand).build() {
  static {
    __name(this, "UpdateModelCommand");
  }
};

// src/commands/UpdateRequestValidatorCommand.ts



var UpdateRequestValidatorCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "UpdateRequestValidator", {}).n("APIGatewayClient", "UpdateRequestValidatorCommand").f(void 0, void 0).ser(se_UpdateRequestValidatorCommand).de(de_UpdateRequestValidatorCommand).build() {
  static {
    __name(this, "UpdateRequestValidatorCommand");
  }
};

// src/commands/UpdateResourceCommand.ts



var UpdateResourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "UpdateResource", {}).n("APIGatewayClient", "UpdateResourceCommand").f(void 0, void 0).ser(se_UpdateResourceCommand).de(de_UpdateResourceCommand).build() {
  static {
    __name(this, "UpdateResourceCommand");
  }
};

// src/commands/UpdateRestApiCommand.ts



var UpdateRestApiCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "UpdateRestApi", {}).n("APIGatewayClient", "UpdateRestApiCommand").f(void 0, void 0).ser(se_UpdateRestApiCommand).de(de_UpdateRestApiCommand).build() {
  static {
    __name(this, "UpdateRestApiCommand");
  }
};

// src/commands/UpdateStageCommand.ts



var UpdateStageCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "UpdateStage", {}).n("APIGatewayClient", "UpdateStageCommand").f(void 0, void 0).ser(se_UpdateStageCommand).de(de_UpdateStageCommand).build() {
  static {
    __name(this, "UpdateStageCommand");
  }
};

// src/commands/UpdateUsageCommand.ts



var UpdateUsageCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "UpdateUsage", {}).n("APIGatewayClient", "UpdateUsageCommand").f(void 0, void 0).ser(se_UpdateUsageCommand).de(de_UpdateUsageCommand).build() {
  static {
    __name(this, "UpdateUsageCommand");
  }
};

// src/commands/UpdateUsagePlanCommand.ts



var UpdateUsagePlanCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "UpdateUsagePlan", {}).n("APIGatewayClient", "UpdateUsagePlanCommand").f(void 0, void 0).ser(se_UpdateUsagePlanCommand).de(de_UpdateUsagePlanCommand).build() {
  static {
    __name(this, "UpdateUsagePlanCommand");
  }
};

// src/commands/UpdateVpcLinkCommand.ts



var UpdateVpcLinkCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackplaneControlService", "UpdateVpcLink", {}).n("APIGatewayClient", "UpdateVpcLinkCommand").f(void 0, void 0).ser(se_UpdateVpcLinkCommand).de(de_UpdateVpcLinkCommand).build() {
  static {
    __name(this, "UpdateVpcLinkCommand");
  }
};

// src/APIGateway.ts
var commands = {
  CreateApiKeyCommand,
  CreateAuthorizerCommand,
  CreateBasePathMappingCommand,
  CreateDeploymentCommand,
  CreateDocumentationPartCommand,
  CreateDocumentationVersionCommand,
  CreateDomainNameCommand,
  CreateDomainNameAccessAssociationCommand,
  CreateModelCommand,
  CreateRequestValidatorCommand,
  CreateResourceCommand,
  CreateRestApiCommand,
  CreateStageCommand,
  CreateUsagePlanCommand,
  CreateUsagePlanKeyCommand,
  CreateVpcLinkCommand,
  DeleteApiKeyCommand,
  DeleteAuthorizerCommand,
  DeleteBasePathMappingCommand,
  DeleteClientCertificateCommand,
  DeleteDeploymentCommand,
  DeleteDocumentationPartCommand,
  DeleteDocumentationVersionCommand,
  DeleteDomainNameCommand,
  DeleteDomainNameAccessAssociationCommand,
  DeleteGatewayResponseCommand,
  DeleteIntegrationCommand,
  DeleteIntegrationResponseCommand,
  DeleteMethodCommand,
  DeleteMethodResponseCommand,
  DeleteModelCommand,
  DeleteRequestValidatorCommand,
  DeleteResourceCommand,
  DeleteRestApiCommand,
  DeleteStageCommand,
  DeleteUsagePlanCommand,
  DeleteUsagePlanKeyCommand,
  DeleteVpcLinkCommand,
  FlushStageAuthorizersCacheCommand,
  FlushStageCacheCommand,
  GenerateClientCertificateCommand,
  GetAccountCommand,
  GetApiKeyCommand,
  GetApiKeysCommand,
  GetAuthorizerCommand,
  GetAuthorizersCommand,
  GetBasePathMappingCommand,
  GetBasePathMappingsCommand,
  GetClientCertificateCommand,
  GetClientCertificatesCommand,
  GetDeploymentCommand,
  GetDeploymentsCommand,
  GetDocumentationPartCommand,
  GetDocumentationPartsCommand,
  GetDocumentationVersionCommand,
  GetDocumentationVersionsCommand,
  GetDomainNameCommand,
  GetDomainNameAccessAssociationsCommand,
  GetDomainNamesCommand,
  GetExportCommand,
  GetGatewayResponseCommand,
  GetGatewayResponsesCommand,
  GetIntegrationCommand,
  GetIntegrationResponseCommand,
  GetMethodCommand,
  GetMethodResponseCommand,
  GetModelCommand,
  GetModelsCommand,
  GetModelTemplateCommand,
  GetRequestValidatorCommand,
  GetRequestValidatorsCommand,
  GetResourceCommand,
  GetResourcesCommand,
  GetRestApiCommand,
  GetRestApisCommand,
  GetSdkCommand,
  GetSdkTypeCommand,
  GetSdkTypesCommand,
  GetStageCommand,
  GetStagesCommand,
  GetTagsCommand,
  GetUsageCommand,
  GetUsagePlanCommand,
  GetUsagePlanKeyCommand,
  GetUsagePlanKeysCommand,
  GetUsagePlansCommand,
  GetVpcLinkCommand,
  GetVpcLinksCommand,
  ImportApiKeysCommand,
  ImportDocumentationPartsCommand,
  ImportRestApiCommand,
  PutGatewayResponseCommand,
  PutIntegrationCommand,
  PutIntegrationResponseCommand,
  PutMethodCommand,
  PutMethodResponseCommand,
  PutRestApiCommand,
  RejectDomainNameAccessAssociationCommand,
  TagResourceCommand,
  TestInvokeAuthorizerCommand,
  TestInvokeMethodCommand,
  UntagResourceCommand,
  UpdateAccountCommand,
  UpdateApiKeyCommand,
  UpdateAuthorizerCommand,
  UpdateBasePathMappingCommand,
  UpdateClientCertificateCommand,
  UpdateDeploymentCommand,
  UpdateDocumentationPartCommand,
  UpdateDocumentationVersionCommand,
  UpdateDomainNameCommand,
  UpdateGatewayResponseCommand,
  UpdateIntegrationCommand,
  UpdateIntegrationResponseCommand,
  UpdateMethodCommand,
  UpdateMethodResponseCommand,
  UpdateModelCommand,
  UpdateRequestValidatorCommand,
  UpdateResourceCommand,
  UpdateRestApiCommand,
  UpdateStageCommand,
  UpdateUsageCommand,
  UpdateUsagePlanCommand,
  UpdateVpcLinkCommand
};
var APIGateway = class extends APIGatewayClient {
  static {
    __name(this, "APIGateway");
  }
};
(0, import_smithy_client.createAggregatedClient)(commands, APIGateway);

// src/pagination/GetApiKeysPaginator.ts

var paginateGetApiKeys = (0, import_core.createPaginator)(APIGatewayClient, GetApiKeysCommand, "position", "position", "limit");

// src/pagination/GetBasePathMappingsPaginator.ts

var paginateGetBasePathMappings = (0, import_core.createPaginator)(APIGatewayClient, GetBasePathMappingsCommand, "position", "position", "limit");

// src/pagination/GetClientCertificatesPaginator.ts

var paginateGetClientCertificates = (0, import_core.createPaginator)(APIGatewayClient, GetClientCertificatesCommand, "position", "position", "limit");

// src/pagination/GetDeploymentsPaginator.ts

var paginateGetDeployments = (0, import_core.createPaginator)(APIGatewayClient, GetDeploymentsCommand, "position", "position", "limit");

// src/pagination/GetDomainNamesPaginator.ts

var paginateGetDomainNames = (0, import_core.createPaginator)(APIGatewayClient, GetDomainNamesCommand, "position", "position", "limit");

// src/pagination/GetModelsPaginator.ts

var paginateGetModels = (0, import_core.createPaginator)(APIGatewayClient, GetModelsCommand, "position", "position", "limit");

// src/pagination/GetResourcesPaginator.ts

var paginateGetResources = (0, import_core.createPaginator)(APIGatewayClient, GetResourcesCommand, "position", "position", "limit");

// src/pagination/GetRestApisPaginator.ts

var paginateGetRestApis = (0, import_core.createPaginator)(APIGatewayClient, GetRestApisCommand, "position", "position", "limit");

// src/pagination/GetUsagePaginator.ts

var paginateGetUsage = (0, import_core.createPaginator)(APIGatewayClient, GetUsageCommand, "position", "position", "limit");

// src/pagination/GetUsagePlanKeysPaginator.ts

var paginateGetUsagePlanKeys = (0, import_core.createPaginator)(APIGatewayClient, GetUsagePlanKeysCommand, "position", "position", "limit");

// src/pagination/GetUsagePlansPaginator.ts

var paginateGetUsagePlans = (0, import_core.createPaginator)(APIGatewayClient, GetUsagePlansCommand, "position", "position", "limit");

// src/pagination/GetVpcLinksPaginator.ts

var paginateGetVpcLinks = (0, import_core.createPaginator)(APIGatewayClient, GetVpcLinksCommand, "position", "position", "limit");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  APIGatewayServiceException,
  __Client,
  APIGatewayClient,
  APIGateway,
  $Command,
  CreateApiKeyCommand,
  CreateAuthorizerCommand,
  CreateBasePathMappingCommand,
  CreateDeploymentCommand,
  CreateDocumentationPartCommand,
  CreateDocumentationVersionCommand,
  CreateDomainNameAccessAssociationCommand,
  CreateDomainNameCommand,
  CreateModelCommand,
  CreateRequestValidatorCommand,
  CreateResourceCommand,
  CreateRestApiCommand,
  CreateStageCommand,
  CreateUsagePlanCommand,
  CreateUsagePlanKeyCommand,
  CreateVpcLinkCommand,
  DeleteApiKeyCommand,
  DeleteAuthorizerCommand,
  DeleteBasePathMappingCommand,
  DeleteClientCertificateCommand,
  DeleteDeploymentCommand,
  DeleteDocumentationPartCommand,
  DeleteDocumentationVersionCommand,
  DeleteDomainNameAccessAssociationCommand,
  DeleteDomainNameCommand,
  DeleteGatewayResponseCommand,
  DeleteIntegrationCommand,
  DeleteIntegrationResponseCommand,
  DeleteMethodCommand,
  DeleteMethodResponseCommand,
  DeleteModelCommand,
  DeleteRequestValidatorCommand,
  DeleteResourceCommand,
  DeleteRestApiCommand,
  DeleteStageCommand,
  DeleteUsagePlanCommand,
  DeleteUsagePlanKeyCommand,
  DeleteVpcLinkCommand,
  FlushStageAuthorizersCacheCommand,
  FlushStageCacheCommand,
  GenerateClientCertificateCommand,
  GetAccountCommand,
  GetApiKeyCommand,
  GetApiKeysCommand,
  GetAuthorizerCommand,
  GetAuthorizersCommand,
  GetBasePathMappingCommand,
  GetBasePathMappingsCommand,
  GetClientCertificateCommand,
  GetClientCertificatesCommand,
  GetDeploymentCommand,
  GetDeploymentsCommand,
  GetDocumentationPartCommand,
  GetDocumentationPartsCommand,
  GetDocumentationVersionCommand,
  GetDocumentationVersionsCommand,
  GetDomainNameAccessAssociationsCommand,
  GetDomainNameCommand,
  GetDomainNamesCommand,
  GetExportCommand,
  GetGatewayResponseCommand,
  GetGatewayResponsesCommand,
  GetIntegrationCommand,
  GetIntegrationResponseCommand,
  GetMethodCommand,
  GetMethodResponseCommand,
  GetModelCommand,
  GetModelTemplateCommand,
  GetModelsCommand,
  GetRequestValidatorCommand,
  GetRequestValidatorsCommand,
  GetResourceCommand,
  GetResourcesCommand,
  GetRestApiCommand,
  GetRestApisCommand,
  GetSdkCommand,
  GetSdkTypeCommand,
  GetSdkTypesCommand,
  GetStageCommand,
  GetStagesCommand,
  GetTagsCommand,
  GetUsageCommand,
  GetUsagePlanCommand,
  GetUsagePlanKeyCommand,
  GetUsagePlanKeysCommand,
  GetUsagePlansCommand,
  GetVpcLinkCommand,
  GetVpcLinksCommand,
  ImportApiKeysCommand,
  ImportDocumentationPartsCommand,
  ImportRestApiCommand,
  PutGatewayResponseCommand,
  PutIntegrationCommand,
  PutIntegrationResponseCommand,
  PutMethodCommand,
  PutMethodResponseCommand,
  PutRestApiCommand,
  RejectDomainNameAccessAssociationCommand,
  TagResourceCommand,
  TestInvokeAuthorizerCommand,
  TestInvokeMethodCommand,
  UntagResourceCommand,
  UpdateAccountCommand,
  UpdateApiKeyCommand,
  UpdateAuthorizerCommand,
  UpdateBasePathMappingCommand,
  UpdateClientCertificateCommand,
  UpdateDeploymentCommand,
  UpdateDocumentationPartCommand,
  UpdateDocumentationVersionCommand,
  UpdateDomainNameCommand,
  UpdateGatewayResponseCommand,
  UpdateIntegrationCommand,
  UpdateIntegrationResponseCommand,
  UpdateMethodCommand,
  UpdateMethodResponseCommand,
  UpdateModelCommand,
  UpdateRequestValidatorCommand,
  UpdateResourceCommand,
  UpdateRestApiCommand,
  UpdateStageCommand,
  UpdateUsageCommand,
  UpdateUsagePlanCommand,
  UpdateVpcLinkCommand,
  paginateGetApiKeys,
  paginateGetBasePathMappings,
  paginateGetClientCertificates,
  paginateGetDeployments,
  paginateGetDomainNames,
  paginateGetModels,
  paginateGetResources,
  paginateGetRestApis,
  paginateGetUsage,
  paginateGetUsagePlanKeys,
  paginateGetUsagePlans,
  paginateGetVpcLinks,
  AccessAssociationSourceType,
  ApiKeysFormat,
  ApiKeySourceType,
  AuthorizerType,
  BadRequestException,
  ConflictException,
  LimitExceededException,
  NotFoundException,
  TooManyRequestsException,
  UnauthorizedException,
  CacheClusterSize,
  ServiceUnavailableException,
  DocumentationPartType,
  EndpointType,
  SecurityPolicy,
  DomainNameStatus,
  ConnectionType,
  ContentHandlingStrategy,
  IntegrationType,
  CacheClusterStatus,
  UnauthorizedCacheControlHeaderStrategy,
  QuotaPeriodType,
  VpcLinkStatus,
  GatewayResponseType,
  LocationStatusType,
  ResourceOwner,
  PutMode,
  Op
});

