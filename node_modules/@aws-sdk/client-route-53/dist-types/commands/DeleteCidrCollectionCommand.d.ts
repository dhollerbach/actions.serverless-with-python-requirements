import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import { DeleteCidrCollectionRequest, DeleteCidrCollectionResponse } from "../models/models_0";
import { Route53ClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../Route53Client";
/**
 * @public
 */
export type { __MetadataBearer };
export { $Command };
/**
 * @public
 *
 * The input for {@link DeleteCidrCollectionCommand}.
 */
export interface DeleteCidrCollectionCommandInput extends DeleteCidrCollectionRequest {
}
/**
 * @public
 *
 * The output of {@link DeleteCidrCollectionCommand}.
 */
export interface DeleteCidrCollectionCommandOutput extends DeleteCidrCollectionResponse, __MetadataBearer {
}
declare const DeleteCidrCollectionCommand_base: {
    new (input: DeleteCidrCollectionCommandInput): import("@smithy/smithy-client").CommandImpl<DeleteCidrCollectionCommandInput, DeleteCidrCollectionCommandOutput, Route53ClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    new (__0_0: DeleteCidrCollectionCommandInput): import("@smithy/smithy-client").CommandImpl<DeleteCidrCollectionCommandInput, DeleteCidrCollectionCommandOutput, Route53ClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
/**
 * <p>Deletes a CIDR collection in the current Amazon Web Services account. The collection
 * 			must be empty before it can be deleted.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { Route53Client, DeleteCidrCollectionCommand } from "@aws-sdk/client-route-53"; // ES Modules import
 * // const { Route53Client, DeleteCidrCollectionCommand } = require("@aws-sdk/client-route-53"); // CommonJS import
 * const client = new Route53Client(config);
 * const input = { // DeleteCidrCollectionRequest
 *   Id: "STRING_VALUE", // required
 * };
 * const command = new DeleteCidrCollectionCommand(input);
 * const response = await client.send(command);
 * // {};
 *
 * ```
 *
 * @param DeleteCidrCollectionCommandInput - {@link DeleteCidrCollectionCommandInput}
 * @returns {@link DeleteCidrCollectionCommandOutput}
 * @see {@link DeleteCidrCollectionCommandInput} for command's `input` shape.
 * @see {@link DeleteCidrCollectionCommandOutput} for command's `response` shape.
 * @see {@link Route53ClientResolvedConfig | config} for Route53Client's `config` shape.
 *
 * @throws {@link CidrCollectionInUseException} (client fault)
 *  <p>This CIDR collection is in use, and isn't empty.</p>
 *
 * @throws {@link ConcurrentModification} (client fault)
 *  <p>Another user submitted a request to create, update, or delete the object at the same
 * 			time that you did. Retry the request. </p>
 *
 * @throws {@link InvalidInput} (client fault)
 *  <p>The input is not valid.</p>
 *
 * @throws {@link NoSuchCidrCollectionException} (client fault)
 *  <p>The CIDR collection you specified, doesn't exist.</p>
 *
 * @throws {@link Route53ServiceException}
 * <p>Base exception class for all service exceptions from Route53 service.</p>
 *
 * @public
 */
export declare class DeleteCidrCollectionCommand extends DeleteCidrCollectionCommand_base {
    /** @internal type navigation helper, not in runtime. */
    protected static __types: {
        api: {
            input: DeleteCidrCollectionRequest;
            output: {};
        };
        sdk: {
            input: DeleteCidrCollectionCommandInput;
            output: DeleteCidrCollectionCommandOutput;
        };
    };
}
