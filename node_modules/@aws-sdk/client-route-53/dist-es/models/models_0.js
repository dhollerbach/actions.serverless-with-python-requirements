import { Route53ServiceException as __BaseException } from "./Route53ServiceException";
export const AccountLimitType = {
    MAX_HEALTH_CHECKS_BY_OWNER: "MAX_HEALTH_CHECKS_BY_OWNER",
    MAX_HOSTED_ZONES_BY_OWNER: "MAX_HOSTED_ZONES_BY_OWNER",
    MAX_REUSABLE_DELEGATION_SETS_BY_OWNER: "MAX_REUSABLE_DELEGATION_SETS_BY_OWNER",
    MAX_TRAFFIC_POLICIES_BY_OWNER: "MAX_TRAFFIC_POLICIES_BY_OWNER",
    MAX_TRAFFIC_POLICY_INSTANCES_BY_OWNER: "MAX_TRAFFIC_POLICY_INSTANCES_BY_OWNER",
};
export const ChangeStatus = {
    INSYNC: "INSYNC",
    PENDING: "PENDING",
};
export class ConcurrentModification extends __BaseException {
    name = "ConcurrentModification";
    $fault = "client";
    constructor(opts) {
        super({
            name: "ConcurrentModification",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ConcurrentModification.prototype);
    }
}
export class InvalidInput extends __BaseException {
    name = "InvalidInput";
    $fault = "client";
    constructor(opts) {
        super({
            name: "InvalidInput",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InvalidInput.prototype);
    }
}
export class InvalidKeySigningKeyStatus extends __BaseException {
    name = "InvalidKeySigningKeyStatus";
    $fault = "client";
    constructor(opts) {
        super({
            name: "InvalidKeySigningKeyStatus",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InvalidKeySigningKeyStatus.prototype);
    }
}
export class InvalidKMSArn extends __BaseException {
    name = "InvalidKMSArn";
    $fault = "client";
    constructor(opts) {
        super({
            name: "InvalidKMSArn",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InvalidKMSArn.prototype);
    }
}
export class InvalidSigningStatus extends __BaseException {
    name = "InvalidSigningStatus";
    $fault = "client";
    constructor(opts) {
        super({
            name: "InvalidSigningStatus",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InvalidSigningStatus.prototype);
    }
}
export class NoSuchKeySigningKey extends __BaseException {
    name = "NoSuchKeySigningKey";
    $fault = "client";
    constructor(opts) {
        super({
            name: "NoSuchKeySigningKey",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, NoSuchKeySigningKey.prototype);
    }
}
export const CloudWatchRegion = {
    af_south_1: "af-south-1",
    ap_east_1: "ap-east-1",
    ap_northeast_1: "ap-northeast-1",
    ap_northeast_2: "ap-northeast-2",
    ap_northeast_3: "ap-northeast-3",
    ap_south_1: "ap-south-1",
    ap_south_2: "ap-south-2",
    ap_southeast_1: "ap-southeast-1",
    ap_southeast_2: "ap-southeast-2",
    ap_southeast_3: "ap-southeast-3",
    ap_southeast_4: "ap-southeast-4",
    ap_southeast_5: "ap-southeast-5",
    ap_southeast_7: "ap-southeast-7",
    ca_central_1: "ca-central-1",
    ca_west_1: "ca-west-1",
    cn_north_1: "cn-north-1",
    cn_northwest_1: "cn-northwest-1",
    eu_central_1: "eu-central-1",
    eu_central_2: "eu-central-2",
    eu_north_1: "eu-north-1",
    eu_south_1: "eu-south-1",
    eu_south_2: "eu-south-2",
    eu_west_1: "eu-west-1",
    eu_west_2: "eu-west-2",
    eu_west_3: "eu-west-3",
    il_central_1: "il-central-1",
    me_central_1: "me-central-1",
    me_south_1: "me-south-1",
    mx_central_1: "mx-central-1",
    sa_east_1: "sa-east-1",
    us_east_1: "us-east-1",
    us_east_2: "us-east-2",
    us_gov_east_1: "us-gov-east-1",
    us_gov_west_1: "us-gov-west-1",
    us_iso_east_1: "us-iso-east-1",
    us_iso_west_1: "us-iso-west-1",
    us_isob_east_1: "us-isob-east-1",
    us_west_1: "us-west-1",
    us_west_2: "us-west-2",
};
export const VPCRegion = {
    af_south_1: "af-south-1",
    ap_east_1: "ap-east-1",
    ap_northeast_1: "ap-northeast-1",
    ap_northeast_2: "ap-northeast-2",
    ap_northeast_3: "ap-northeast-3",
    ap_south_1: "ap-south-1",
    ap_south_2: "ap-south-2",
    ap_southeast_1: "ap-southeast-1",
    ap_southeast_2: "ap-southeast-2",
    ap_southeast_3: "ap-southeast-3",
    ap_southeast_4: "ap-southeast-4",
    ap_southeast_5: "ap-southeast-5",
    ap_southeast_7: "ap-southeast-7",
    ca_central_1: "ca-central-1",
    ca_west_1: "ca-west-1",
    cn_north_1: "cn-north-1",
    cn_northwest_1: "cn-northwest-1",
    eu_central_1: "eu-central-1",
    eu_central_2: "eu-central-2",
    eu_north_1: "eu-north-1",
    eu_south_1: "eu-south-1",
    eu_south_2: "eu-south-2",
    eu_west_1: "eu-west-1",
    eu_west_2: "eu-west-2",
    eu_west_3: "eu-west-3",
    il_central_1: "il-central-1",
    me_central_1: "me-central-1",
    me_south_1: "me-south-1",
    mx_central_1: "mx-central-1",
    sa_east_1: "sa-east-1",
    us_east_1: "us-east-1",
    us_east_2: "us-east-2",
    us_gov_east_1: "us-gov-east-1",
    us_gov_west_1: "us-gov-west-1",
    us_iso_east_1: "us-iso-east-1",
    us_iso_west_1: "us-iso-west-1",
    us_isob_east_1: "us-isob-east-1",
    us_west_1: "us-west-1",
    us_west_2: "us-west-2",
};
export class ConflictingDomainExists extends __BaseException {
    name = "ConflictingDomainExists";
    $fault = "client";
    constructor(opts) {
        super({
            name: "ConflictingDomainExists",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ConflictingDomainExists.prototype);
    }
}
export class InvalidVPCId extends __BaseException {
    name = "InvalidVPCId";
    $fault = "client";
    constructor(opts) {
        super({
            name: "InvalidVPCId",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InvalidVPCId.prototype);
    }
}
export class LimitsExceeded extends __BaseException {
    name = "LimitsExceeded";
    $fault = "client";
    constructor(opts) {
        super({
            name: "LimitsExceeded",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, LimitsExceeded.prototype);
    }
}
export class NoSuchHostedZone extends __BaseException {
    name = "NoSuchHostedZone";
    $fault = "client";
    constructor(opts) {
        super({
            name: "NoSuchHostedZone",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, NoSuchHostedZone.prototype);
    }
}
export class NotAuthorizedException extends __BaseException {
    name = "NotAuthorizedException";
    $fault = "client";
    constructor(opts) {
        super({
            name: "NotAuthorizedException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, NotAuthorizedException.prototype);
    }
}
export class PriorRequestNotComplete extends __BaseException {
    name = "PriorRequestNotComplete";
    $fault = "client";
    constructor(opts) {
        super({
            name: "PriorRequestNotComplete",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, PriorRequestNotComplete.prototype);
    }
}
export class PublicZoneVPCAssociation extends __BaseException {
    name = "PublicZoneVPCAssociation";
    $fault = "client";
    constructor(opts) {
        super({
            name: "PublicZoneVPCAssociation",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, PublicZoneVPCAssociation.prototype);
    }
}
export const CidrCollectionChangeAction = {
    DELETE_IF_EXISTS: "DELETE_IF_EXISTS",
    PUT: "PUT",
};
export class CidrBlockInUseException extends __BaseException {
    name = "CidrBlockInUseException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "CidrBlockInUseException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, CidrBlockInUseException.prototype);
        this.Message = opts.Message;
    }
}
export class CidrCollectionVersionMismatchException extends __BaseException {
    name = "CidrCollectionVersionMismatchException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "CidrCollectionVersionMismatchException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, CidrCollectionVersionMismatchException.prototype);
        this.Message = opts.Message;
    }
}
export class NoSuchCidrCollectionException extends __BaseException {
    name = "NoSuchCidrCollectionException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "NoSuchCidrCollectionException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, NoSuchCidrCollectionException.prototype);
        this.Message = opts.Message;
    }
}
export const ChangeAction = {
    CREATE: "CREATE",
    DELETE: "DELETE",
    UPSERT: "UPSERT",
};
export const ResourceRecordSetFailover = {
    PRIMARY: "PRIMARY",
    SECONDARY: "SECONDARY",
};
export const ResourceRecordSetRegion = {
    af_south_1: "af-south-1",
    ap_east_1: "ap-east-1",
    ap_northeast_1: "ap-northeast-1",
    ap_northeast_2: "ap-northeast-2",
    ap_northeast_3: "ap-northeast-3",
    ap_south_1: "ap-south-1",
    ap_south_2: "ap-south-2",
    ap_southeast_1: "ap-southeast-1",
    ap_southeast_2: "ap-southeast-2",
    ap_southeast_3: "ap-southeast-3",
    ap_southeast_4: "ap-southeast-4",
    ap_southeast_5: "ap-southeast-5",
    ap_southeast_7: "ap-southeast-7",
    ca_central_1: "ca-central-1",
    ca_west_1: "ca-west-1",
    cn_north_1: "cn-north-1",
    cn_northwest_1: "cn-northwest-1",
    eu_central_1: "eu-central-1",
    eu_central_2: "eu-central-2",
    eu_north_1: "eu-north-1",
    eu_south_1: "eu-south-1",
    eu_south_2: "eu-south-2",
    eu_west_1: "eu-west-1",
    eu_west_2: "eu-west-2",
    eu_west_3: "eu-west-3",
    il_central_1: "il-central-1",
    me_central_1: "me-central-1",
    me_south_1: "me-south-1",
    mx_central_1: "mx-central-1",
    sa_east_1: "sa-east-1",
    us_east_1: "us-east-1",
    us_east_2: "us-east-2",
    us_west_1: "us-west-1",
    us_west_2: "us-west-2",
};
export const RRType = {
    A: "A",
    AAAA: "AAAA",
    CAA: "CAA",
    CNAME: "CNAME",
    DS: "DS",
    HTTPS: "HTTPS",
    MX: "MX",
    NAPTR: "NAPTR",
    NS: "NS",
    PTR: "PTR",
    SOA: "SOA",
    SPF: "SPF",
    SRV: "SRV",
    SSHFP: "SSHFP",
    SVCB: "SVCB",
    TLSA: "TLSA",
    TXT: "TXT",
};
export class InvalidChangeBatch extends __BaseException {
    name = "InvalidChangeBatch";
    $fault = "client";
    messages;
    constructor(opts) {
        super({
            name: "InvalidChangeBatch",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InvalidChangeBatch.prototype);
        this.messages = opts.messages;
    }
}
export class NoSuchHealthCheck extends __BaseException {
    name = "NoSuchHealthCheck";
    $fault = "client";
    constructor(opts) {
        super({
            name: "NoSuchHealthCheck",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, NoSuchHealthCheck.prototype);
    }
}
export const TagResourceType = {
    healthcheck: "healthcheck",
    hostedzone: "hostedzone",
};
export class ThrottlingException extends __BaseException {
    name = "ThrottlingException";
    $fault = "client";
    constructor(opts) {
        super({
            name: "ThrottlingException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ThrottlingException.prototype);
    }
}
export class CidrCollectionAlreadyExistsException extends __BaseException {
    name = "CidrCollectionAlreadyExistsException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "CidrCollectionAlreadyExistsException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, CidrCollectionAlreadyExistsException.prototype);
        this.Message = opts.Message;
    }
}
export const InsufficientDataHealthStatus = {
    Healthy: "Healthy",
    LastKnownStatus: "LastKnownStatus",
    Unhealthy: "Unhealthy",
};
export const HealthCheckRegion = {
    ap_northeast_1: "ap-northeast-1",
    ap_southeast_1: "ap-southeast-1",
    ap_southeast_2: "ap-southeast-2",
    eu_west_1: "eu-west-1",
    sa_east_1: "sa-east-1",
    us_east_1: "us-east-1",
    us_west_1: "us-west-1",
    us_west_2: "us-west-2",
};
export const HealthCheckType = {
    CALCULATED: "CALCULATED",
    CLOUDWATCH_METRIC: "CLOUDWATCH_METRIC",
    HTTP: "HTTP",
    HTTPS: "HTTPS",
    HTTPS_STR_MATCH: "HTTPS_STR_MATCH",
    HTTP_STR_MATCH: "HTTP_STR_MATCH",
    RECOVERY_CONTROL: "RECOVERY_CONTROL",
    TCP: "TCP",
};
export const ComparisonOperator = {
    GreaterThanOrEqualToThreshold: "GreaterThanOrEqualToThreshold",
    GreaterThanThreshold: "GreaterThanThreshold",
    LessThanOrEqualToThreshold: "LessThanOrEqualToThreshold",
    LessThanThreshold: "LessThanThreshold",
};
export const Statistic = {
    Average: "Average",
    Maximum: "Maximum",
    Minimum: "Minimum",
    SampleCount: "SampleCount",
    Sum: "Sum",
};
export class HealthCheckAlreadyExists extends __BaseException {
    name = "HealthCheckAlreadyExists";
    $fault = "client";
    constructor(opts) {
        super({
            name: "HealthCheckAlreadyExists",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, HealthCheckAlreadyExists.prototype);
    }
}
export class TooManyHealthChecks extends __BaseException {
    name = "TooManyHealthChecks";
    $fault = "client";
    constructor(opts) {
        super({
            name: "TooManyHealthChecks",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, TooManyHealthChecks.prototype);
    }
}
export class DelegationSetNotAvailable extends __BaseException {
    name = "DelegationSetNotAvailable";
    $fault = "client";
    constructor(opts) {
        super({
            name: "DelegationSetNotAvailable",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, DelegationSetNotAvailable.prototype);
    }
}
export class DelegationSetNotReusable extends __BaseException {
    name = "DelegationSetNotReusable";
    $fault = "client";
    constructor(opts) {
        super({
            name: "DelegationSetNotReusable",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, DelegationSetNotReusable.prototype);
    }
}
export class HostedZoneAlreadyExists extends __BaseException {
    name = "HostedZoneAlreadyExists";
    $fault = "client";
    constructor(opts) {
        super({
            name: "HostedZoneAlreadyExists",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, HostedZoneAlreadyExists.prototype);
    }
}
export class InvalidDomainName extends __BaseException {
    name = "InvalidDomainName";
    $fault = "client";
    constructor(opts) {
        super({
            name: "InvalidDomainName",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InvalidDomainName.prototype);
    }
}
export class NoSuchDelegationSet extends __BaseException {
    name = "NoSuchDelegationSet";
    $fault = "client";
    constructor(opts) {
        super({
            name: "NoSuchDelegationSet",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, NoSuchDelegationSet.prototype);
    }
}
export class TooManyHostedZones extends __BaseException {
    name = "TooManyHostedZones";
    $fault = "client";
    constructor(opts) {
        super({
            name: "TooManyHostedZones",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, TooManyHostedZones.prototype);
    }
}
export class InvalidArgument extends __BaseException {
    name = "InvalidArgument";
    $fault = "client";
    constructor(opts) {
        super({
            name: "InvalidArgument",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InvalidArgument.prototype);
    }
}
export class InvalidKeySigningKeyName extends __BaseException {
    name = "InvalidKeySigningKeyName";
    $fault = "client";
    constructor(opts) {
        super({
            name: "InvalidKeySigningKeyName",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InvalidKeySigningKeyName.prototype);
    }
}
export class KeySigningKeyAlreadyExists extends __BaseException {
    name = "KeySigningKeyAlreadyExists";
    $fault = "client";
    constructor(opts) {
        super({
            name: "KeySigningKeyAlreadyExists",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, KeySigningKeyAlreadyExists.prototype);
    }
}
export class TooManyKeySigningKeys extends __BaseException {
    name = "TooManyKeySigningKeys";
    $fault = "client";
    constructor(opts) {
        super({
            name: "TooManyKeySigningKeys",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, TooManyKeySigningKeys.prototype);
    }
}
export class InsufficientCloudWatchLogsResourcePolicy extends __BaseException {
    name = "InsufficientCloudWatchLogsResourcePolicy";
    $fault = "client";
    constructor(opts) {
        super({
            name: "InsufficientCloudWatchLogsResourcePolicy",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InsufficientCloudWatchLogsResourcePolicy.prototype);
    }
}
export class NoSuchCloudWatchLogsLogGroup extends __BaseException {
    name = "NoSuchCloudWatchLogsLogGroup";
    $fault = "client";
    constructor(opts) {
        super({
            name: "NoSuchCloudWatchLogsLogGroup",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, NoSuchCloudWatchLogsLogGroup.prototype);
    }
}
export class QueryLoggingConfigAlreadyExists extends __BaseException {
    name = "QueryLoggingConfigAlreadyExists";
    $fault = "client";
    constructor(opts) {
        super({
            name: "QueryLoggingConfigAlreadyExists",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, QueryLoggingConfigAlreadyExists.prototype);
    }
}
export class DelegationSetAlreadyCreated extends __BaseException {
    name = "DelegationSetAlreadyCreated";
    $fault = "client";
    constructor(opts) {
        super({
            name: "DelegationSetAlreadyCreated",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, DelegationSetAlreadyCreated.prototype);
    }
}
export class DelegationSetAlreadyReusable extends __BaseException {
    name = "DelegationSetAlreadyReusable";
    $fault = "client";
    constructor(opts) {
        super({
            name: "DelegationSetAlreadyReusable",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, DelegationSetAlreadyReusable.prototype);
    }
}
export class HostedZoneNotFound extends __BaseException {
    name = "HostedZoneNotFound";
    $fault = "client";
    constructor(opts) {
        super({
            name: "HostedZoneNotFound",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, HostedZoneNotFound.prototype);
    }
}
export class InvalidTrafficPolicyDocument extends __BaseException {
    name = "InvalidTrafficPolicyDocument";
    $fault = "client";
    constructor(opts) {
        super({
            name: "InvalidTrafficPolicyDocument",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InvalidTrafficPolicyDocument.prototype);
    }
}
export class TooManyTrafficPolicies extends __BaseException {
    name = "TooManyTrafficPolicies";
    $fault = "client";
    constructor(opts) {
        super({
            name: "TooManyTrafficPolicies",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, TooManyTrafficPolicies.prototype);
    }
}
export class TrafficPolicyAlreadyExists extends __BaseException {
    name = "TrafficPolicyAlreadyExists";
    $fault = "client";
    constructor(opts) {
        super({
            name: "TrafficPolicyAlreadyExists",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, TrafficPolicyAlreadyExists.prototype);
    }
}
export class NoSuchTrafficPolicy extends __BaseException {
    name = "NoSuchTrafficPolicy";
    $fault = "client";
    constructor(opts) {
        super({
            name: "NoSuchTrafficPolicy",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, NoSuchTrafficPolicy.prototype);
    }
}
export class TooManyTrafficPolicyInstances extends __BaseException {
    name = "TooManyTrafficPolicyInstances";
    $fault = "client";
    constructor(opts) {
        super({
            name: "TooManyTrafficPolicyInstances",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, TooManyTrafficPolicyInstances.prototype);
    }
}
export class TrafficPolicyInstanceAlreadyExists extends __BaseException {
    name = "TrafficPolicyInstanceAlreadyExists";
    $fault = "client";
    constructor(opts) {
        super({
            name: "TrafficPolicyInstanceAlreadyExists",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, TrafficPolicyInstanceAlreadyExists.prototype);
    }
}
export class TooManyTrafficPolicyVersionsForCurrentPolicy extends __BaseException {
    name = "TooManyTrafficPolicyVersionsForCurrentPolicy";
    $fault = "client";
    constructor(opts) {
        super({
            name: "TooManyTrafficPolicyVersionsForCurrentPolicy",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, TooManyTrafficPolicyVersionsForCurrentPolicy.prototype);
    }
}
export class TooManyVPCAssociationAuthorizations extends __BaseException {
    name = "TooManyVPCAssociationAuthorizations";
    $fault = "client";
    constructor(opts) {
        super({
            name: "TooManyVPCAssociationAuthorizations",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, TooManyVPCAssociationAuthorizations.prototype);
    }
}
export class KeySigningKeyInParentDSRecord extends __BaseException {
    name = "KeySigningKeyInParentDSRecord";
    $fault = "client";
    constructor(opts) {
        super({
            name: "KeySigningKeyInParentDSRecord",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, KeySigningKeyInParentDSRecord.prototype);
    }
}
export class KeySigningKeyInUse extends __BaseException {
    name = "KeySigningKeyInUse";
    $fault = "client";
    constructor(opts) {
        super({
            name: "KeySigningKeyInUse",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, KeySigningKeyInUse.prototype);
    }
}
export class CidrCollectionInUseException extends __BaseException {
    name = "CidrCollectionInUseException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "CidrCollectionInUseException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, CidrCollectionInUseException.prototype);
        this.Message = opts.Message;
    }
}
export class HealthCheckInUse extends __BaseException {
    name = "HealthCheckInUse";
    $fault = "client";
    constructor(opts) {
        super({
            name: "HealthCheckInUse",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, HealthCheckInUse.prototype);
    }
}
export class HostedZoneNotEmpty extends __BaseException {
    name = "HostedZoneNotEmpty";
    $fault = "client";
    constructor(opts) {
        super({
            name: "HostedZoneNotEmpty",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, HostedZoneNotEmpty.prototype);
    }
}
export class NoSuchQueryLoggingConfig extends __BaseException {
    name = "NoSuchQueryLoggingConfig";
    $fault = "client";
    constructor(opts) {
        super({
            name: "NoSuchQueryLoggingConfig",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, NoSuchQueryLoggingConfig.prototype);
    }
}
export class DelegationSetInUse extends __BaseException {
    name = "DelegationSetInUse";
    $fault = "client";
    constructor(opts) {
        super({
            name: "DelegationSetInUse",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, DelegationSetInUse.prototype);
    }
}
export class TrafficPolicyInUse extends __BaseException {
    name = "TrafficPolicyInUse";
    $fault = "client";
    constructor(opts) {
        super({
            name: "TrafficPolicyInUse",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, TrafficPolicyInUse.prototype);
    }
}
export class NoSuchTrafficPolicyInstance extends __BaseException {
    name = "NoSuchTrafficPolicyInstance";
    $fault = "client";
    constructor(opts) {
        super({
            name: "NoSuchTrafficPolicyInstance",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, NoSuchTrafficPolicyInstance.prototype);
    }
}
export class VPCAssociationAuthorizationNotFound extends __BaseException {
    name = "VPCAssociationAuthorizationNotFound";
    $fault = "client";
    constructor(opts) {
        super({
            name: "VPCAssociationAuthorizationNotFound",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, VPCAssociationAuthorizationNotFound.prototype);
    }
}
export class DNSSECNotFound extends __BaseException {
    name = "DNSSECNotFound";
    $fault = "client";
    constructor(opts) {
        super({
            name: "DNSSECNotFound",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, DNSSECNotFound.prototype);
    }
}
export class LastVPCAssociation extends __BaseException {
    name = "LastVPCAssociation";
    $fault = "client";
    constructor(opts) {
        super({
            name: "LastVPCAssociation",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, LastVPCAssociation.prototype);
    }
}
export class VPCAssociationNotFound extends __BaseException {
    name = "VPCAssociationNotFound";
    $fault = "client";
    constructor(opts) {
        super({
            name: "VPCAssociationNotFound",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, VPCAssociationNotFound.prototype);
    }
}
export class HostedZonePartiallyDelegated extends __BaseException {
    name = "HostedZonePartiallyDelegated";
    $fault = "client";
    constructor(opts) {
        super({
            name: "HostedZonePartiallyDelegated",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, HostedZonePartiallyDelegated.prototype);
    }
}
export class KeySigningKeyWithActiveStatusNotFound extends __BaseException {
    name = "KeySigningKeyWithActiveStatusNotFound";
    $fault = "client";
    constructor(opts) {
        super({
            name: "KeySigningKeyWithActiveStatusNotFound",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, KeySigningKeyWithActiveStatusNotFound.prototype);
    }
}
export class NoSuchChange extends __BaseException {
    name = "NoSuchChange";
    $fault = "client";
    constructor(opts) {
        super({
            name: "NoSuchChange",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, NoSuchChange.prototype);
    }
}
export class NoSuchGeoLocation extends __BaseException {
    name = "NoSuchGeoLocation";
    $fault = "client";
    constructor(opts) {
        super({
            name: "NoSuchGeoLocation",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, NoSuchGeoLocation.prototype);
    }
}
export class IncompatibleVersion extends __BaseException {
    name = "IncompatibleVersion";
    $fault = "client";
    constructor(opts) {
        super({
            name: "IncompatibleVersion",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, IncompatibleVersion.prototype);
    }
}
export const HostedZoneLimitType = {
    MAX_RRSETS_BY_ZONE: "MAX_RRSETS_BY_ZONE",
    MAX_VPCS_ASSOCIATED_BY_ZONE: "MAX_VPCS_ASSOCIATED_BY_ZONE",
};
export class HostedZoneNotPrivate extends __BaseException {
    name = "HostedZoneNotPrivate";
    $fault = "client";
    constructor(opts) {
        super({
            name: "HostedZoneNotPrivate",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, HostedZoneNotPrivate.prototype);
    }
}
export const ReusableDelegationSetLimitType = {
    MAX_ZONES_BY_REUSABLE_DELEGATION_SET: "MAX_ZONES_BY_REUSABLE_DELEGATION_SET",
};
export class NoSuchCidrLocationException extends __BaseException {
    name = "NoSuchCidrLocationException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "NoSuchCidrLocationException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, NoSuchCidrLocationException.prototype);
        this.Message = opts.Message;
    }
}
export const HostedZoneType = {
    PRIVATE_HOSTED_ZONE: "PrivateHostedZone",
};
export class InvalidPaginationToken extends __BaseException {
    name = "InvalidPaginationToken";
    $fault = "client";
    constructor(opts) {
        super({
            name: "InvalidPaginationToken",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InvalidPaginationToken.prototype);
    }
}
export class HealthCheckVersionMismatch extends __BaseException {
    name = "HealthCheckVersionMismatch";
    $fault = "client";
    constructor(opts) {
        super({
            name: "HealthCheckVersionMismatch",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, HealthCheckVersionMismatch.prototype);
    }
}
export const ResettableElementName = {
    ChildHealthChecks: "ChildHealthChecks",
    FullyQualifiedDomainName: "FullyQualifiedDomainName",
    Regions: "Regions",
    ResourcePath: "ResourcePath",
};
export class ConflictingTypes extends __BaseException {
    name = "ConflictingTypes";
    $fault = "client";
    constructor(opts) {
        super({
            name: "ConflictingTypes",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ConflictingTypes.prototype);
    }
}
