import { SENSITIVE_STRING } from "@smithy/smithy-client";
import { EventBridgeServiceException as __BaseException } from "./EventBridgeServiceException";
export class AccessDeniedException extends __BaseException {
    name = "AccessDeniedException";
    $fault = "client";
    constructor(opts) {
        super({
            name: "AccessDeniedException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, AccessDeniedException.prototype);
    }
}
export class ConcurrentModificationException extends __BaseException {
    name = "ConcurrentModificationException";
    $fault = "client";
    constructor(opts) {
        super({
            name: "ConcurrentModificationException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ConcurrentModificationException.prototype);
    }
}
export class InternalException extends __BaseException {
    name = "InternalException";
    $fault = "server";
    constructor(opts) {
        super({
            name: "InternalException",
            $fault: "server",
            ...opts,
        });
        Object.setPrototypeOf(this, InternalException.prototype);
    }
}
export class InvalidStateException extends __BaseException {
    name = "InvalidStateException";
    $fault = "client";
    constructor(opts) {
        super({
            name: "InvalidStateException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InvalidStateException.prototype);
    }
}
export class OperationDisabledException extends __BaseException {
    name = "OperationDisabledException";
    $fault = "client";
    constructor(opts) {
        super({
            name: "OperationDisabledException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, OperationDisabledException.prototype);
    }
}
export class ResourceNotFoundException extends __BaseException {
    name = "ResourceNotFoundException";
    $fault = "client";
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
    }
}
export const ApiDestinationState = {
    ACTIVE: "ACTIVE",
    INACTIVE: "INACTIVE",
};
export const ApiDestinationHttpMethod = {
    DELETE: "DELETE",
    GET: "GET",
    HEAD: "HEAD",
    OPTIONS: "OPTIONS",
    PATCH: "PATCH",
    POST: "POST",
    PUT: "PUT",
};
export const ArchiveState = {
    CREATE_FAILED: "CREATE_FAILED",
    CREATING: "CREATING",
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
    UPDATE_FAILED: "UPDATE_FAILED",
    UPDATING: "UPDATING",
};
export const AssignPublicIp = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
};
export const ReplayState = {
    CANCELLED: "CANCELLED",
    CANCELLING: "CANCELLING",
    COMPLETED: "COMPLETED",
    FAILED: "FAILED",
    RUNNING: "RUNNING",
    STARTING: "STARTING",
};
export class IllegalStatusException extends __BaseException {
    name = "IllegalStatusException";
    $fault = "client";
    constructor(opts) {
        super({
            name: "IllegalStatusException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, IllegalStatusException.prototype);
    }
}
export class LimitExceededException extends __BaseException {
    name = "LimitExceededException";
    $fault = "client";
    constructor(opts) {
        super({
            name: "LimitExceededException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, LimitExceededException.prototype);
    }
}
export class ResourceAlreadyExistsException extends __BaseException {
    name = "ResourceAlreadyExistsException";
    $fault = "client";
    constructor(opts) {
        super({
            name: "ResourceAlreadyExistsException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ResourceAlreadyExistsException.prototype);
    }
}
export class InvalidEventPatternException extends __BaseException {
    name = "InvalidEventPatternException";
    $fault = "client";
    constructor(opts) {
        super({
            name: "InvalidEventPatternException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InvalidEventPatternException.prototype);
    }
}
export const ConnectionAuthorizationType = {
    API_KEY: "API_KEY",
    BASIC: "BASIC",
    OAUTH_CLIENT_CREDENTIALS: "OAUTH_CLIENT_CREDENTIALS",
};
export const ConnectionOAuthHttpMethod = {
    GET: "GET",
    POST: "POST",
    PUT: "PUT",
};
export const ConnectionState = {
    ACTIVE: "ACTIVE",
    AUTHORIZED: "AUTHORIZED",
    AUTHORIZING: "AUTHORIZING",
    CREATING: "CREATING",
    DEAUTHORIZED: "DEAUTHORIZED",
    DEAUTHORIZING: "DEAUTHORIZING",
    DELETING: "DELETING",
    FAILED_CONNECTIVITY: "FAILED_CONNECTIVITY",
    UPDATING: "UPDATING",
};
export class ThrottlingException extends __BaseException {
    name = "ThrottlingException";
    $fault = "client";
    constructor(opts) {
        super({
            name: "ThrottlingException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ThrottlingException.prototype);
    }
}
export const ReplicationState = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
};
export const EndpointState = {
    ACTIVE: "ACTIVE",
    CREATE_FAILED: "CREATE_FAILED",
    CREATING: "CREATING",
    DELETE_FAILED: "DELETE_FAILED",
    DELETING: "DELETING",
    UPDATE_FAILED: "UPDATE_FAILED",
    UPDATING: "UPDATING",
};
export class ManagedRuleException extends __BaseException {
    name = "ManagedRuleException";
    $fault = "client";
    constructor(opts) {
        super({
            name: "ManagedRuleException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ManagedRuleException.prototype);
    }
}
export const EventSourceState = {
    ACTIVE: "ACTIVE",
    DELETED: "DELETED",
    PENDING: "PENDING",
};
export const RuleState = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
    ENABLED_WITH_ALL_CLOUDTRAIL_MANAGEMENT_EVENTS: "ENABLED_WITH_ALL_CLOUDTRAIL_MANAGEMENT_EVENTS",
};
export const LaunchType = {
    EC2: "EC2",
    EXTERNAL: "EXTERNAL",
    FARGATE: "FARGATE",
};
export const PlacementConstraintType = {
    DISTINCT_INSTANCE: "distinctInstance",
    MEMBER_OF: "memberOf",
};
export const PlacementStrategyType = {
    BINPACK: "binpack",
    RANDOM: "random",
    SPREAD: "spread",
};
export const PropagateTags = {
    TASK_DEFINITION: "TASK_DEFINITION",
};
export class PolicyLengthExceededException extends __BaseException {
    name = "PolicyLengthExceededException";
    $fault = "client";
    constructor(opts) {
        super({
            name: "PolicyLengthExceededException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, PolicyLengthExceededException.prototype);
    }
}
export const AppSyncParametersFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.GraphQLOperation && { GraphQLOperation: SENSITIVE_STRING }),
});
export const CreateConnectionApiKeyAuthRequestParametersFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ApiKeyValue && { ApiKeyValue: SENSITIVE_STRING }),
});
export const CreateConnectionBasicAuthRequestParametersFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Password && { Password: SENSITIVE_STRING }),
});
export const ConnectionBodyParameterFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Value && { Value: SENSITIVE_STRING }),
});
export const ConnectionHeaderParameterFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Value && { Value: SENSITIVE_STRING }),
});
export const ConnectionQueryStringParameterFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Value && { Value: SENSITIVE_STRING }),
});
export const ConnectionHttpParametersFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.HeaderParameters && {
        HeaderParameters: obj.HeaderParameters.map((item) => ConnectionHeaderParameterFilterSensitiveLog(item)),
    }),
    ...(obj.QueryStringParameters && {
        QueryStringParameters: obj.QueryStringParameters.map((item) => ConnectionQueryStringParameterFilterSensitiveLog(item)),
    }),
    ...(obj.BodyParameters && {
        BodyParameters: obj.BodyParameters.map((item) => ConnectionBodyParameterFilterSensitiveLog(item)),
    }),
});
export const CreateConnectionOAuthClientRequestParametersFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ClientSecret && { ClientSecret: SENSITIVE_STRING }),
});
export const CreateConnectionOAuthRequestParametersFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ClientParameters && {
        ClientParameters: CreateConnectionOAuthClientRequestParametersFilterSensitiveLog(obj.ClientParameters),
    }),
    ...(obj.OAuthHttpParameters && {
        OAuthHttpParameters: ConnectionHttpParametersFilterSensitiveLog(obj.OAuthHttpParameters),
    }),
});
export const CreateConnectionAuthRequestParametersFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.BasicAuthParameters && {
        BasicAuthParameters: CreateConnectionBasicAuthRequestParametersFilterSensitiveLog(obj.BasicAuthParameters),
    }),
    ...(obj.OAuthParameters && {
        OAuthParameters: CreateConnectionOAuthRequestParametersFilterSensitiveLog(obj.OAuthParameters),
    }),
    ...(obj.ApiKeyAuthParameters && {
        ApiKeyAuthParameters: CreateConnectionApiKeyAuthRequestParametersFilterSensitiveLog(obj.ApiKeyAuthParameters),
    }),
    ...(obj.InvocationHttpParameters && {
        InvocationHttpParameters: ConnectionHttpParametersFilterSensitiveLog(obj.InvocationHttpParameters),
    }),
});
export const CreateConnectionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.AuthParameters && {
        AuthParameters: CreateConnectionAuthRequestParametersFilterSensitiveLog(obj.AuthParameters),
    }),
});
export const ConnectionOAuthResponseParametersFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.OAuthHttpParameters && {
        OAuthHttpParameters: ConnectionHttpParametersFilterSensitiveLog(obj.OAuthHttpParameters),
    }),
});
export const ConnectionAuthResponseParametersFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.OAuthParameters && {
        OAuthParameters: ConnectionOAuthResponseParametersFilterSensitiveLog(obj.OAuthParameters),
    }),
    ...(obj.InvocationHttpParameters && {
        InvocationHttpParameters: ConnectionHttpParametersFilterSensitiveLog(obj.InvocationHttpParameters),
    }),
});
export const DescribeConnectionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.AuthParameters && { AuthParameters: ConnectionAuthResponseParametersFilterSensitiveLog(obj.AuthParameters) }),
});
export const RedshiftDataParametersFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Sql && { Sql: SENSITIVE_STRING }),
    ...(obj.Sqls && { Sqls: SENSITIVE_STRING }),
});
export const TargetFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.RedshiftDataParameters && {
        RedshiftDataParameters: RedshiftDataParametersFilterSensitiveLog(obj.RedshiftDataParameters),
    }),
    ...(obj.AppSyncParameters && { AppSyncParameters: AppSyncParametersFilterSensitiveLog(obj.AppSyncParameters) }),
});
export const ListTargetsByRuleResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Targets && { Targets: obj.Targets.map((item) => TargetFilterSensitiveLog(item)) }),
});
export const PutTargetsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Targets && { Targets: obj.Targets.map((item) => TargetFilterSensitiveLog(item)) }),
});
export const UpdateConnectionApiKeyAuthRequestParametersFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ApiKeyValue && { ApiKeyValue: SENSITIVE_STRING }),
});
export const UpdateConnectionBasicAuthRequestParametersFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Password && { Password: SENSITIVE_STRING }),
});
export const UpdateConnectionOAuthClientRequestParametersFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ClientSecret && { ClientSecret: SENSITIVE_STRING }),
});
export const UpdateConnectionOAuthRequestParametersFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ClientParameters && {
        ClientParameters: UpdateConnectionOAuthClientRequestParametersFilterSensitiveLog(obj.ClientParameters),
    }),
    ...(obj.OAuthHttpParameters && {
        OAuthHttpParameters: ConnectionHttpParametersFilterSensitiveLog(obj.OAuthHttpParameters),
    }),
});
export const UpdateConnectionAuthRequestParametersFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.BasicAuthParameters && {
        BasicAuthParameters: UpdateConnectionBasicAuthRequestParametersFilterSensitiveLog(obj.BasicAuthParameters),
    }),
    ...(obj.OAuthParameters && {
        OAuthParameters: UpdateConnectionOAuthRequestParametersFilterSensitiveLog(obj.OAuthParameters),
    }),
    ...(obj.ApiKeyAuthParameters && {
        ApiKeyAuthParameters: UpdateConnectionApiKeyAuthRequestParametersFilterSensitiveLog(obj.ApiKeyAuthParameters),
    }),
    ...(obj.InvocationHttpParameters && {
        InvocationHttpParameters: ConnectionHttpParametersFilterSensitiveLog(obj.InvocationHttpParameters),
    }),
});
export const UpdateConnectionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.AuthParameters && {
        AuthParameters: UpdateConnectionAuthRequestParametersFilterSensitiveLog(obj.AuthParameters),
    }),
});
