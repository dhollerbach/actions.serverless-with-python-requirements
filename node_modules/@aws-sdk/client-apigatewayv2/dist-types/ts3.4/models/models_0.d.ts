import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { ApiGatewayV2ServiceException as __BaseException } from "./ApiGatewayV2ServiceException";
export interface Cors {
  AllowCredentials?: boolean | undefined;
  AllowHeaders?: string[] | undefined;
  AllowMethods?: string[] | undefined;
  AllowOrigins?: string[] | undefined;
  ExposeHeaders?: string[] | undefined;
  MaxAge?: number | undefined;
}
export declare const ProtocolType: {
  readonly HTTP: "HTTP";
  readonly WEBSOCKET: "WEBSOCKET";
};
export type ProtocolType = (typeof ProtocolType)[keyof typeof ProtocolType];
export interface Api {
  ApiEndpoint?: string | undefined;
  ApiGatewayManaged?: boolean | undefined;
  ApiId?: string | undefined;
  ApiKeySelectionExpression?: string | undefined;
  CorsConfiguration?: Cors | undefined;
  CreatedDate?: Date | undefined;
  Description?: string | undefined;
  DisableSchemaValidation?: boolean | undefined;
  DisableExecuteApiEndpoint?: boolean | undefined;
  ImportInfo?: string[] | undefined;
  Name: string | undefined;
  ProtocolType: ProtocolType | undefined;
  RouteSelectionExpression: string | undefined;
  Tags?: Record<string, string> | undefined;
  Version?: string | undefined;
  Warnings?: string[] | undefined;
}
export interface ApiMapping {
  ApiId: string | undefined;
  ApiMappingId?: string | undefined;
  ApiMappingKey?: string | undefined;
  Stage: string | undefined;
}
export declare const AuthorizerType: {
  readonly JWT: "JWT";
  readonly REQUEST: "REQUEST";
};
export type AuthorizerType =
  (typeof AuthorizerType)[keyof typeof AuthorizerType];
export interface JWTConfiguration {
  Audience?: string[] | undefined;
  Issuer?: string | undefined;
}
export interface Authorizer {
  AuthorizerCredentialsArn?: string | undefined;
  AuthorizerId?: string | undefined;
  AuthorizerPayloadFormatVersion?: string | undefined;
  AuthorizerResultTtlInSeconds?: number | undefined;
  AuthorizerType?: AuthorizerType | undefined;
  AuthorizerUri?: string | undefined;
  EnableSimpleResponses?: boolean | undefined;
  IdentitySource?: string[] | undefined;
  IdentityValidationExpression?: string | undefined;
  JwtConfiguration?: JWTConfiguration | undefined;
  Name: string | undefined;
}
export declare const DeploymentStatus: {
  readonly DEPLOYED: "DEPLOYED";
  readonly FAILED: "FAILED";
  readonly PENDING: "PENDING";
};
export type DeploymentStatus =
  (typeof DeploymentStatus)[keyof typeof DeploymentStatus];
export interface Deployment {
  AutoDeployed?: boolean | undefined;
  CreatedDate?: Date | undefined;
  DeploymentId?: string | undefined;
  DeploymentStatus?: DeploymentStatus | undefined;
  DeploymentStatusMessage?: string | undefined;
  Description?: string | undefined;
}
export declare const DomainNameStatus: {
  readonly AVAILABLE: "AVAILABLE";
  readonly PENDING_CERTIFICATE_REIMPORT: "PENDING_CERTIFICATE_REIMPORT";
  readonly PENDING_OWNERSHIP_VERIFICATION: "PENDING_OWNERSHIP_VERIFICATION";
  readonly UPDATING: "UPDATING";
};
export type DomainNameStatus =
  (typeof DomainNameStatus)[keyof typeof DomainNameStatus];
export declare const EndpointType: {
  readonly EDGE: "EDGE";
  readonly REGIONAL: "REGIONAL";
};
export type EndpointType = (typeof EndpointType)[keyof typeof EndpointType];
export declare const SecurityPolicy: {
  readonly TLS_1_0: "TLS_1_0";
  readonly TLS_1_2: "TLS_1_2";
};
export type SecurityPolicy =
  (typeof SecurityPolicy)[keyof typeof SecurityPolicy];
export interface DomainNameConfiguration {
  ApiGatewayDomainName?: string | undefined;
  CertificateArn?: string | undefined;
  CertificateName?: string | undefined;
  CertificateUploadDate?: Date | undefined;
  DomainNameStatus?: DomainNameStatus | undefined;
  DomainNameStatusMessage?: string | undefined;
  EndpointType?: EndpointType | undefined;
  HostedZoneId?: string | undefined;
  SecurityPolicy?: SecurityPolicy | undefined;
  OwnershipVerificationCertificateArn?: string | undefined;
}
export interface MutualTlsAuthentication {
  TruststoreUri?: string | undefined;
  TruststoreVersion?: string | undefined;
  TruststoreWarnings?: string[] | undefined;
}
export interface DomainName {
  ApiMappingSelectionExpression?: string | undefined;
  DomainName: string | undefined;
  DomainNameConfigurations?: DomainNameConfiguration[] | undefined;
  MutualTlsAuthentication?: MutualTlsAuthentication | undefined;
  Tags?: Record<string, string> | undefined;
}
export declare const ConnectionType: {
  readonly INTERNET: "INTERNET";
  readonly VPC_LINK: "VPC_LINK";
};
export type ConnectionType =
  (typeof ConnectionType)[keyof typeof ConnectionType];
export declare const ContentHandlingStrategy: {
  readonly CONVERT_TO_BINARY: "CONVERT_TO_BINARY";
  readonly CONVERT_TO_TEXT: "CONVERT_TO_TEXT";
};
export type ContentHandlingStrategy =
  (typeof ContentHandlingStrategy)[keyof typeof ContentHandlingStrategy];
export declare const IntegrationType: {
  readonly AWS: "AWS";
  readonly AWS_PROXY: "AWS_PROXY";
  readonly HTTP: "HTTP";
  readonly HTTP_PROXY: "HTTP_PROXY";
  readonly MOCK: "MOCK";
};
export type IntegrationType =
  (typeof IntegrationType)[keyof typeof IntegrationType];
export declare const PassthroughBehavior: {
  readonly NEVER: "NEVER";
  readonly WHEN_NO_MATCH: "WHEN_NO_MATCH";
  readonly WHEN_NO_TEMPLATES: "WHEN_NO_TEMPLATES";
};
export type PassthroughBehavior =
  (typeof PassthroughBehavior)[keyof typeof PassthroughBehavior];
export interface TlsConfig {
  ServerNameToVerify?: string | undefined;
}
export interface Integration {
  ApiGatewayManaged?: boolean | undefined;
  ConnectionId?: string | undefined;
  ConnectionType?: ConnectionType | undefined;
  ContentHandlingStrategy?: ContentHandlingStrategy | undefined;
  CredentialsArn?: string | undefined;
  Description?: string | undefined;
  IntegrationId?: string | undefined;
  IntegrationMethod?: string | undefined;
  IntegrationResponseSelectionExpression?: string | undefined;
  IntegrationSubtype?: string | undefined;
  IntegrationType?: IntegrationType | undefined;
  IntegrationUri?: string | undefined;
  PassthroughBehavior?: PassthroughBehavior | undefined;
  PayloadFormatVersion?: string | undefined;
  RequestParameters?: Record<string, string> | undefined;
  RequestTemplates?: Record<string, string> | undefined;
  ResponseParameters?: Record<string, Record<string, string>> | undefined;
  TemplateSelectionExpression?: string | undefined;
  TimeoutInMillis?: number | undefined;
  TlsConfig?: TlsConfig | undefined;
}
export interface IntegrationResponse {
  ContentHandlingStrategy?: ContentHandlingStrategy | undefined;
  IntegrationResponseId?: string | undefined;
  IntegrationResponseKey: string | undefined;
  ResponseParameters?: Record<string, string> | undefined;
  ResponseTemplates?: Record<string, string> | undefined;
  TemplateSelectionExpression?: string | undefined;
}
export interface Model {
  ContentType?: string | undefined;
  Description?: string | undefined;
  ModelId?: string | undefined;
  Name: string | undefined;
  Schema?: string | undefined;
}
export declare const AuthorizationType: {
  readonly AWS_IAM: "AWS_IAM";
  readonly CUSTOM: "CUSTOM";
  readonly JWT: "JWT";
  readonly NONE: "NONE";
};
export type AuthorizationType =
  (typeof AuthorizationType)[keyof typeof AuthorizationType];
export interface ParameterConstraints {
  Required?: boolean | undefined;
}
export interface Route {
  ApiGatewayManaged?: boolean | undefined;
  ApiKeyRequired?: boolean | undefined;
  AuthorizationScopes?: string[] | undefined;
  AuthorizationType?: AuthorizationType | undefined;
  AuthorizerId?: string | undefined;
  ModelSelectionExpression?: string | undefined;
  OperationName?: string | undefined;
  RequestModels?: Record<string, string> | undefined;
  RequestParameters?: Record<string, ParameterConstraints> | undefined;
  RouteId?: string | undefined;
  RouteKey: string | undefined;
  RouteResponseSelectionExpression?: string | undefined;
  Target?: string | undefined;
}
export interface RouteResponse {
  ModelSelectionExpression?: string | undefined;
  ResponseModels?: Record<string, string> | undefined;
  ResponseParameters?: Record<string, ParameterConstraints> | undefined;
  RouteResponseId?: string | undefined;
  RouteResponseKey: string | undefined;
}
export interface AccessLogSettings {
  DestinationArn?: string | undefined;
  Format?: string | undefined;
}
export declare const LoggingLevel: {
  readonly ERROR: "ERROR";
  readonly INFO: "INFO";
  readonly OFF: "OFF";
};
export type LoggingLevel = (typeof LoggingLevel)[keyof typeof LoggingLevel];
export interface RouteSettings {
  DataTraceEnabled?: boolean | undefined;
  DetailedMetricsEnabled?: boolean | undefined;
  LoggingLevel?: LoggingLevel | undefined;
  ThrottlingBurstLimit?: number | undefined;
  ThrottlingRateLimit?: number | undefined;
}
export interface Stage {
  AccessLogSettings?: AccessLogSettings | undefined;
  ApiGatewayManaged?: boolean | undefined;
  AutoDeploy?: boolean | undefined;
  ClientCertificateId?: string | undefined;
  CreatedDate?: Date | undefined;
  DefaultRouteSettings?: RouteSettings | undefined;
  DeploymentId?: string | undefined;
  Description?: string | undefined;
  LastDeploymentStatusMessage?: string | undefined;
  LastUpdatedDate?: Date | undefined;
  RouteSettings?: Record<string, RouteSettings> | undefined;
  StageName: string | undefined;
  StageVariables?: Record<string, string> | undefined;
  Tags?: Record<string, string> | undefined;
}
export declare const VpcLinkStatus: {
  readonly AVAILABLE: "AVAILABLE";
  readonly DELETING: "DELETING";
  readonly FAILED: "FAILED";
  readonly INACTIVE: "INACTIVE";
  readonly PENDING: "PENDING";
};
export type VpcLinkStatus = (typeof VpcLinkStatus)[keyof typeof VpcLinkStatus];
export declare const VpcLinkVersion: {
  readonly V2: "V2";
};
export type VpcLinkVersion =
  (typeof VpcLinkVersion)[keyof typeof VpcLinkVersion];
export interface VpcLink {
  CreatedDate?: Date | undefined;
  Name: string | undefined;
  SecurityGroupIds: string[] | undefined;
  SubnetIds: string[] | undefined;
  Tags?: Record<string, string> | undefined;
  VpcLinkId: string | undefined;
  VpcLinkStatus?: VpcLinkStatus | undefined;
  VpcLinkStatusMessage?: string | undefined;
  VpcLinkVersion?: VpcLinkVersion | undefined;
}
export declare class AccessDeniedException extends __BaseException {
  readonly name: "AccessDeniedException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<AccessDeniedException, __BaseException>
  );
}
export declare class BadRequestException extends __BaseException {
  readonly name: "BadRequestException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<BadRequestException, __BaseException>
  );
}
export declare class ConflictException extends __BaseException {
  readonly name: "ConflictException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
}
export interface CreateApiRequest {
  ApiKeySelectionExpression?: string | undefined;
  CorsConfiguration?: Cors | undefined;
  CredentialsArn?: string | undefined;
  Description?: string | undefined;
  DisableSchemaValidation?: boolean | undefined;
  DisableExecuteApiEndpoint?: boolean | undefined;
  Name: string | undefined;
  ProtocolType: ProtocolType | undefined;
  RouteKey?: string | undefined;
  RouteSelectionExpression?: string | undefined;
  Tags?: Record<string, string> | undefined;
  Target?: string | undefined;
  Version?: string | undefined;
}
export interface CreateApiResponse {
  ApiEndpoint?: string | undefined;
  ApiGatewayManaged?: boolean | undefined;
  ApiId?: string | undefined;
  ApiKeySelectionExpression?: string | undefined;
  CorsConfiguration?: Cors | undefined;
  CreatedDate?: Date | undefined;
  Description?: string | undefined;
  DisableSchemaValidation?: boolean | undefined;
  DisableExecuteApiEndpoint?: boolean | undefined;
  ImportInfo?: string[] | undefined;
  Name?: string | undefined;
  ProtocolType?: ProtocolType | undefined;
  RouteSelectionExpression?: string | undefined;
  Tags?: Record<string, string> | undefined;
  Version?: string | undefined;
  Warnings?: string[] | undefined;
}
export declare class NotFoundException extends __BaseException {
  readonly name: "NotFoundException";
  readonly $fault: "client";
  Message?: string | undefined;
  ResourceType?: string | undefined;
  constructor(opts: __ExceptionOptionType<NotFoundException, __BaseException>);
}
export declare class TooManyRequestsException extends __BaseException {
  readonly name: "TooManyRequestsException";
  readonly $fault: "client";
  LimitType?: string | undefined;
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<TooManyRequestsException, __BaseException>
  );
}
export interface CreateApiMappingRequest {
  ApiId: string | undefined;
  ApiMappingKey?: string | undefined;
  DomainName: string | undefined;
  Stage: string | undefined;
}
export interface CreateApiMappingResponse {
  ApiId?: string | undefined;
  ApiMappingId?: string | undefined;
  ApiMappingKey?: string | undefined;
  Stage?: string | undefined;
}
export interface CreateAuthorizerRequest {
  ApiId: string | undefined;
  AuthorizerCredentialsArn?: string | undefined;
  AuthorizerPayloadFormatVersion?: string | undefined;
  AuthorizerResultTtlInSeconds?: number | undefined;
  AuthorizerType: AuthorizerType | undefined;
  AuthorizerUri?: string | undefined;
  EnableSimpleResponses?: boolean | undefined;
  IdentitySource: string[] | undefined;
  IdentityValidationExpression?: string | undefined;
  JwtConfiguration?: JWTConfiguration | undefined;
  Name: string | undefined;
}
export interface CreateAuthorizerResponse {
  AuthorizerCredentialsArn?: string | undefined;
  AuthorizerId?: string | undefined;
  AuthorizerPayloadFormatVersion?: string | undefined;
  AuthorizerResultTtlInSeconds?: number | undefined;
  AuthorizerType?: AuthorizerType | undefined;
  AuthorizerUri?: string | undefined;
  EnableSimpleResponses?: boolean | undefined;
  IdentitySource?: string[] | undefined;
  IdentityValidationExpression?: string | undefined;
  JwtConfiguration?: JWTConfiguration | undefined;
  Name?: string | undefined;
}
export interface CreateDeploymentRequest {
  ApiId: string | undefined;
  Description?: string | undefined;
  StageName?: string | undefined;
}
export interface CreateDeploymentResponse {
  AutoDeployed?: boolean | undefined;
  CreatedDate?: Date | undefined;
  DeploymentId?: string | undefined;
  DeploymentStatus?: DeploymentStatus | undefined;
  DeploymentStatusMessage?: string | undefined;
  Description?: string | undefined;
}
export interface MutualTlsAuthenticationInput {
  TruststoreUri?: string | undefined;
  TruststoreVersion?: string | undefined;
}
export interface CreateDomainNameRequest {
  DomainName: string | undefined;
  DomainNameConfigurations?: DomainNameConfiguration[] | undefined;
  MutualTlsAuthentication?: MutualTlsAuthenticationInput | undefined;
  Tags?: Record<string, string> | undefined;
}
export interface CreateDomainNameResponse {
  ApiMappingSelectionExpression?: string | undefined;
  DomainName?: string | undefined;
  DomainNameConfigurations?: DomainNameConfiguration[] | undefined;
  MutualTlsAuthentication?: MutualTlsAuthentication | undefined;
  Tags?: Record<string, string> | undefined;
}
export interface TlsConfigInput {
  ServerNameToVerify?: string | undefined;
}
export interface CreateIntegrationRequest {
  ApiId: string | undefined;
  ConnectionId?: string | undefined;
  ConnectionType?: ConnectionType | undefined;
  ContentHandlingStrategy?: ContentHandlingStrategy | undefined;
  CredentialsArn?: string | undefined;
  Description?: string | undefined;
  IntegrationMethod?: string | undefined;
  IntegrationSubtype?: string | undefined;
  IntegrationType: IntegrationType | undefined;
  IntegrationUri?: string | undefined;
  PassthroughBehavior?: PassthroughBehavior | undefined;
  PayloadFormatVersion?: string | undefined;
  RequestParameters?: Record<string, string> | undefined;
  RequestTemplates?: Record<string, string> | undefined;
  ResponseParameters?: Record<string, Record<string, string>> | undefined;
  TemplateSelectionExpression?: string | undefined;
  TimeoutInMillis?: number | undefined;
  TlsConfig?: TlsConfigInput | undefined;
}
export interface CreateIntegrationResult {
  ApiGatewayManaged?: boolean | undefined;
  ConnectionId?: string | undefined;
  ConnectionType?: ConnectionType | undefined;
  ContentHandlingStrategy?: ContentHandlingStrategy | undefined;
  CredentialsArn?: string | undefined;
  Description?: string | undefined;
  IntegrationId?: string | undefined;
  IntegrationMethod?: string | undefined;
  IntegrationResponseSelectionExpression?: string | undefined;
  IntegrationSubtype?: string | undefined;
  IntegrationType?: IntegrationType | undefined;
  IntegrationUri?: string | undefined;
  PassthroughBehavior?: PassthroughBehavior | undefined;
  PayloadFormatVersion?: string | undefined;
  RequestParameters?: Record<string, string> | undefined;
  RequestTemplates?: Record<string, string> | undefined;
  ResponseParameters?: Record<string, Record<string, string>> | undefined;
  TemplateSelectionExpression?: string | undefined;
  TimeoutInMillis?: number | undefined;
  TlsConfig?: TlsConfig | undefined;
}
export interface CreateIntegrationResponseRequest {
  ApiId: string | undefined;
  ContentHandlingStrategy?: ContentHandlingStrategy | undefined;
  IntegrationId: string | undefined;
  IntegrationResponseKey: string | undefined;
  ResponseParameters?: Record<string, string> | undefined;
  ResponseTemplates?: Record<string, string> | undefined;
  TemplateSelectionExpression?: string | undefined;
}
export interface CreateIntegrationResponseResponse {
  ContentHandlingStrategy?: ContentHandlingStrategy | undefined;
  IntegrationResponseId?: string | undefined;
  IntegrationResponseKey?: string | undefined;
  ResponseParameters?: Record<string, string> | undefined;
  ResponseTemplates?: Record<string, string> | undefined;
  TemplateSelectionExpression?: string | undefined;
}
export interface CreateModelRequest {
  ApiId: string | undefined;
  ContentType?: string | undefined;
  Description?: string | undefined;
  Name: string | undefined;
  Schema: string | undefined;
}
export interface CreateModelResponse {
  ContentType?: string | undefined;
  Description?: string | undefined;
  ModelId?: string | undefined;
  Name?: string | undefined;
  Schema?: string | undefined;
}
export interface CreateRouteRequest {
  ApiId: string | undefined;
  ApiKeyRequired?: boolean | undefined;
  AuthorizationScopes?: string[] | undefined;
  AuthorizationType?: AuthorizationType | undefined;
  AuthorizerId?: string | undefined;
  ModelSelectionExpression?: string | undefined;
  OperationName?: string | undefined;
  RequestModels?: Record<string, string> | undefined;
  RequestParameters?: Record<string, ParameterConstraints> | undefined;
  RouteKey: string | undefined;
  RouteResponseSelectionExpression?: string | undefined;
  Target?: string | undefined;
}
export interface CreateRouteResult {
  ApiGatewayManaged?: boolean | undefined;
  ApiKeyRequired?: boolean | undefined;
  AuthorizationScopes?: string[] | undefined;
  AuthorizationType?: AuthorizationType | undefined;
  AuthorizerId?: string | undefined;
  ModelSelectionExpression?: string | undefined;
  OperationName?: string | undefined;
  RequestModels?: Record<string, string> | undefined;
  RequestParameters?: Record<string, ParameterConstraints> | undefined;
  RouteId?: string | undefined;
  RouteKey?: string | undefined;
  RouteResponseSelectionExpression?: string | undefined;
  Target?: string | undefined;
}
export interface CreateRouteResponseRequest {
  ApiId: string | undefined;
  ModelSelectionExpression?: string | undefined;
  ResponseModels?: Record<string, string> | undefined;
  ResponseParameters?: Record<string, ParameterConstraints> | undefined;
  RouteId: string | undefined;
  RouteResponseKey: string | undefined;
}
export interface CreateRouteResponseResponse {
  ModelSelectionExpression?: string | undefined;
  ResponseModels?: Record<string, string> | undefined;
  ResponseParameters?: Record<string, ParameterConstraints> | undefined;
  RouteResponseId?: string | undefined;
  RouteResponseKey?: string | undefined;
}
export interface CreateStageRequest {
  AccessLogSettings?: AccessLogSettings | undefined;
  ApiId: string | undefined;
  AutoDeploy?: boolean | undefined;
  ClientCertificateId?: string | undefined;
  DefaultRouteSettings?: RouteSettings | undefined;
  DeploymentId?: string | undefined;
  Description?: string | undefined;
  RouteSettings?: Record<string, RouteSettings> | undefined;
  StageName: string | undefined;
  StageVariables?: Record<string, string> | undefined;
  Tags?: Record<string, string> | undefined;
}
export interface CreateStageResponse {
  AccessLogSettings?: AccessLogSettings | undefined;
  ApiGatewayManaged?: boolean | undefined;
  AutoDeploy?: boolean | undefined;
  ClientCertificateId?: string | undefined;
  CreatedDate?: Date | undefined;
  DefaultRouteSettings?: RouteSettings | undefined;
  DeploymentId?: string | undefined;
  Description?: string | undefined;
  LastDeploymentStatusMessage?: string | undefined;
  LastUpdatedDate?: Date | undefined;
  RouteSettings?: Record<string, RouteSettings> | undefined;
  StageName?: string | undefined;
  StageVariables?: Record<string, string> | undefined;
  Tags?: Record<string, string> | undefined;
}
export interface CreateVpcLinkRequest {
  Name: string | undefined;
  SecurityGroupIds?: string[] | undefined;
  SubnetIds: string[] | undefined;
  Tags?: Record<string, string> | undefined;
}
export interface CreateVpcLinkResponse {
  CreatedDate?: Date | undefined;
  Name?: string | undefined;
  SecurityGroupIds?: string[] | undefined;
  SubnetIds?: string[] | undefined;
  Tags?: Record<string, string> | undefined;
  VpcLinkId?: string | undefined;
  VpcLinkStatus?: VpcLinkStatus | undefined;
  VpcLinkStatusMessage?: string | undefined;
  VpcLinkVersion?: VpcLinkVersion | undefined;
}
export interface DeleteAccessLogSettingsRequest {
  ApiId: string | undefined;
  StageName: string | undefined;
}
export interface DeleteApiRequest {
  ApiId: string | undefined;
}
export interface DeleteApiMappingRequest {
  ApiMappingId: string | undefined;
  DomainName: string | undefined;
}
export interface DeleteAuthorizerRequest {
  ApiId: string | undefined;
  AuthorizerId: string | undefined;
}
export interface DeleteCorsConfigurationRequest {
  ApiId: string | undefined;
}
export interface DeleteDeploymentRequest {
  ApiId: string | undefined;
  DeploymentId: string | undefined;
}
export interface DeleteDomainNameRequest {
  DomainName: string | undefined;
}
export interface DeleteIntegrationRequest {
  ApiId: string | undefined;
  IntegrationId: string | undefined;
}
export interface DeleteIntegrationResponseRequest {
  ApiId: string | undefined;
  IntegrationId: string | undefined;
  IntegrationResponseId: string | undefined;
}
export interface DeleteModelRequest {
  ApiId: string | undefined;
  ModelId: string | undefined;
}
export interface DeleteRouteRequest {
  ApiId: string | undefined;
  RouteId: string | undefined;
}
export interface DeleteRouteRequestParameterRequest {
  ApiId: string | undefined;
  RequestParameterKey: string | undefined;
  RouteId: string | undefined;
}
export interface DeleteRouteResponseRequest {
  ApiId: string | undefined;
  RouteId: string | undefined;
  RouteResponseId: string | undefined;
}
export interface DeleteRouteSettingsRequest {
  ApiId: string | undefined;
  RouteKey: string | undefined;
  StageName: string | undefined;
}
export interface DeleteStageRequest {
  ApiId: string | undefined;
  StageName: string | undefined;
}
export interface DeleteVpcLinkRequest {
  VpcLinkId: string | undefined;
}
export interface DeleteVpcLinkResponse {}
export interface ExportApiRequest {
  ApiId: string | undefined;
  ExportVersion?: string | undefined;
  IncludeExtensions?: boolean | undefined;
  OutputType: string | undefined;
  Specification: string | undefined;
  StageName?: string | undefined;
}
export interface ExportApiResponse {
  body?: Uint8Array | undefined;
}
export interface GetApiRequest {
  ApiId: string | undefined;
}
export interface GetApiResponse {
  ApiEndpoint?: string | undefined;
  ApiGatewayManaged?: boolean | undefined;
  ApiId?: string | undefined;
  ApiKeySelectionExpression?: string | undefined;
  CorsConfiguration?: Cors | undefined;
  CreatedDate?: Date | undefined;
  Description?: string | undefined;
  DisableSchemaValidation?: boolean | undefined;
  DisableExecuteApiEndpoint?: boolean | undefined;
  ImportInfo?: string[] | undefined;
  Name?: string | undefined;
  ProtocolType?: ProtocolType | undefined;
  RouteSelectionExpression?: string | undefined;
  Tags?: Record<string, string> | undefined;
  Version?: string | undefined;
  Warnings?: string[] | undefined;
}
export interface GetApiMappingRequest {
  ApiMappingId: string | undefined;
  DomainName: string | undefined;
}
export interface GetApiMappingResponse {
  ApiId?: string | undefined;
  ApiMappingId?: string | undefined;
  ApiMappingKey?: string | undefined;
  Stage?: string | undefined;
}
export interface GetApiMappingsRequest {
  DomainName: string | undefined;
  MaxResults?: string | undefined;
  NextToken?: string | undefined;
}
export interface GetApiMappingsResponse {
  Items?: ApiMapping[] | undefined;
  NextToken?: string | undefined;
}
export interface GetApisRequest {
  MaxResults?: string | undefined;
  NextToken?: string | undefined;
}
export interface GetApisResponse {
  Items?: Api[] | undefined;
  NextToken?: string | undefined;
}
export interface GetAuthorizerRequest {
  ApiId: string | undefined;
  AuthorizerId: string | undefined;
}
export interface GetAuthorizerResponse {
  AuthorizerCredentialsArn?: string | undefined;
  AuthorizerId?: string | undefined;
  AuthorizerPayloadFormatVersion?: string | undefined;
  AuthorizerResultTtlInSeconds?: number | undefined;
  AuthorizerType?: AuthorizerType | undefined;
  AuthorizerUri?: string | undefined;
  EnableSimpleResponses?: boolean | undefined;
  IdentitySource?: string[] | undefined;
  IdentityValidationExpression?: string | undefined;
  JwtConfiguration?: JWTConfiguration | undefined;
  Name?: string | undefined;
}
export interface GetAuthorizersRequest {
  ApiId: string | undefined;
  MaxResults?: string | undefined;
  NextToken?: string | undefined;
}
export interface GetAuthorizersResponse {
  Items?: Authorizer[] | undefined;
  NextToken?: string | undefined;
}
export interface GetDeploymentRequest {
  ApiId: string | undefined;
  DeploymentId: string | undefined;
}
export interface GetDeploymentResponse {
  AutoDeployed?: boolean | undefined;
  CreatedDate?: Date | undefined;
  DeploymentId?: string | undefined;
  DeploymentStatus?: DeploymentStatus | undefined;
  DeploymentStatusMessage?: string | undefined;
  Description?: string | undefined;
}
export interface GetDeploymentsRequest {
  ApiId: string | undefined;
  MaxResults?: string | undefined;
  NextToken?: string | undefined;
}
export interface GetDeploymentsResponse {
  Items?: Deployment[] | undefined;
  NextToken?: string | undefined;
}
export interface GetDomainNameRequest {
  DomainName: string | undefined;
}
export interface GetDomainNameResponse {
  ApiMappingSelectionExpression?: string | undefined;
  DomainName?: string | undefined;
  DomainNameConfigurations?: DomainNameConfiguration[] | undefined;
  MutualTlsAuthentication?: MutualTlsAuthentication | undefined;
  Tags?: Record<string, string> | undefined;
}
export interface GetDomainNamesRequest {
  MaxResults?: string | undefined;
  NextToken?: string | undefined;
}
export interface GetDomainNamesResponse {
  Items?: DomainName[] | undefined;
  NextToken?: string | undefined;
}
export interface GetIntegrationRequest {
  ApiId: string | undefined;
  IntegrationId: string | undefined;
}
export interface GetIntegrationResult {
  ApiGatewayManaged?: boolean | undefined;
  ConnectionId?: string | undefined;
  ConnectionType?: ConnectionType | undefined;
  ContentHandlingStrategy?: ContentHandlingStrategy | undefined;
  CredentialsArn?: string | undefined;
  Description?: string | undefined;
  IntegrationId?: string | undefined;
  IntegrationMethod?: string | undefined;
  IntegrationResponseSelectionExpression?: string | undefined;
  IntegrationSubtype?: string | undefined;
  IntegrationType?: IntegrationType | undefined;
  IntegrationUri?: string | undefined;
  PassthroughBehavior?: PassthroughBehavior | undefined;
  PayloadFormatVersion?: string | undefined;
  RequestParameters?: Record<string, string> | undefined;
  RequestTemplates?: Record<string, string> | undefined;
  ResponseParameters?: Record<string, Record<string, string>> | undefined;
  TemplateSelectionExpression?: string | undefined;
  TimeoutInMillis?: number | undefined;
  TlsConfig?: TlsConfig | undefined;
}
export interface GetIntegrationResponseRequest {
  ApiId: string | undefined;
  IntegrationId: string | undefined;
  IntegrationResponseId: string | undefined;
}
export interface GetIntegrationResponseResponse {
  ContentHandlingStrategy?: ContentHandlingStrategy | undefined;
  IntegrationResponseId?: string | undefined;
  IntegrationResponseKey?: string | undefined;
  ResponseParameters?: Record<string, string> | undefined;
  ResponseTemplates?: Record<string, string> | undefined;
  TemplateSelectionExpression?: string | undefined;
}
export interface GetIntegrationResponsesRequest {
  ApiId: string | undefined;
  IntegrationId: string | undefined;
  MaxResults?: string | undefined;
  NextToken?: string | undefined;
}
export interface GetIntegrationResponsesResponse {
  Items?: IntegrationResponse[] | undefined;
  NextToken?: string | undefined;
}
export interface GetIntegrationsRequest {
  ApiId: string | undefined;
  MaxResults?: string | undefined;
  NextToken?: string | undefined;
}
export interface GetIntegrationsResponse {
  Items?: Integration[] | undefined;
  NextToken?: string | undefined;
}
export interface GetModelRequest {
  ApiId: string | undefined;
  ModelId: string | undefined;
}
export interface GetModelResponse {
  ContentType?: string | undefined;
  Description?: string | undefined;
  ModelId?: string | undefined;
  Name?: string | undefined;
  Schema?: string | undefined;
}
export interface GetModelsRequest {
  ApiId: string | undefined;
  MaxResults?: string | undefined;
  NextToken?: string | undefined;
}
export interface GetModelsResponse {
  Items?: Model[] | undefined;
  NextToken?: string | undefined;
}
export interface GetModelTemplateRequest {
  ApiId: string | undefined;
  ModelId: string | undefined;
}
export interface GetModelTemplateResponse {
  Value?: string | undefined;
}
export interface GetRouteRequest {
  ApiId: string | undefined;
  RouteId: string | undefined;
}
export interface GetRouteResult {
  ApiGatewayManaged?: boolean | undefined;
  ApiKeyRequired?: boolean | undefined;
  AuthorizationScopes?: string[] | undefined;
  AuthorizationType?: AuthorizationType | undefined;
  AuthorizerId?: string | undefined;
  ModelSelectionExpression?: string | undefined;
  OperationName?: string | undefined;
  RequestModels?: Record<string, string> | undefined;
  RequestParameters?: Record<string, ParameterConstraints> | undefined;
  RouteId?: string | undefined;
  RouteKey?: string | undefined;
  RouteResponseSelectionExpression?: string | undefined;
  Target?: string | undefined;
}
export interface GetRouteResponseRequest {
  ApiId: string | undefined;
  RouteId: string | undefined;
  RouteResponseId: string | undefined;
}
export interface GetRouteResponseResponse {
  ModelSelectionExpression?: string | undefined;
  ResponseModels?: Record<string, string> | undefined;
  ResponseParameters?: Record<string, ParameterConstraints> | undefined;
  RouteResponseId?: string | undefined;
  RouteResponseKey?: string | undefined;
}
export interface GetRouteResponsesRequest {
  ApiId: string | undefined;
  MaxResults?: string | undefined;
  NextToken?: string | undefined;
  RouteId: string | undefined;
}
export interface GetRouteResponsesResponse {
  Items?: RouteResponse[] | undefined;
  NextToken?: string | undefined;
}
export interface GetRoutesRequest {
  ApiId: string | undefined;
  MaxResults?: string | undefined;
  NextToken?: string | undefined;
}
export interface GetRoutesResponse {
  Items?: Route[] | undefined;
  NextToken?: string | undefined;
}
export interface GetStageRequest {
  ApiId: string | undefined;
  StageName: string | undefined;
}
export interface GetStageResponse {
  AccessLogSettings?: AccessLogSettings | undefined;
  ApiGatewayManaged?: boolean | undefined;
  AutoDeploy?: boolean | undefined;
  ClientCertificateId?: string | undefined;
  CreatedDate?: Date | undefined;
  DefaultRouteSettings?: RouteSettings | undefined;
  DeploymentId?: string | undefined;
  Description?: string | undefined;
  LastDeploymentStatusMessage?: string | undefined;
  LastUpdatedDate?: Date | undefined;
  RouteSettings?: Record<string, RouteSettings> | undefined;
  StageName?: string | undefined;
  StageVariables?: Record<string, string> | undefined;
  Tags?: Record<string, string> | undefined;
}
export interface GetStagesRequest {
  ApiId: string | undefined;
  MaxResults?: string | undefined;
  NextToken?: string | undefined;
}
export interface GetStagesResponse {
  Items?: Stage[] | undefined;
  NextToken?: string | undefined;
}
export interface GetTagsRequest {
  ResourceArn: string | undefined;
}
export interface GetTagsResponse {
  Tags?: Record<string, string> | undefined;
}
export interface GetVpcLinkRequest {
  VpcLinkId: string | undefined;
}
export interface GetVpcLinkResponse {
  CreatedDate?: Date | undefined;
  Name?: string | undefined;
  SecurityGroupIds?: string[] | undefined;
  SubnetIds?: string[] | undefined;
  Tags?: Record<string, string> | undefined;
  VpcLinkId?: string | undefined;
  VpcLinkStatus?: VpcLinkStatus | undefined;
  VpcLinkStatusMessage?: string | undefined;
  VpcLinkVersion?: VpcLinkVersion | undefined;
}
export interface GetVpcLinksRequest {
  MaxResults?: string | undefined;
  NextToken?: string | undefined;
}
export interface GetVpcLinksResponse {
  Items?: VpcLink[] | undefined;
  NextToken?: string | undefined;
}
export interface ImportApiRequest {
  Basepath?: string | undefined;
  Body: string | undefined;
  FailOnWarnings?: boolean | undefined;
}
export interface ImportApiResponse {
  ApiEndpoint?: string | undefined;
  ApiGatewayManaged?: boolean | undefined;
  ApiId?: string | undefined;
  ApiKeySelectionExpression?: string | undefined;
  CorsConfiguration?: Cors | undefined;
  CreatedDate?: Date | undefined;
  Description?: string | undefined;
  DisableSchemaValidation?: boolean | undefined;
  DisableExecuteApiEndpoint?: boolean | undefined;
  ImportInfo?: string[] | undefined;
  Name?: string | undefined;
  ProtocolType?: ProtocolType | undefined;
  RouteSelectionExpression?: string | undefined;
  Tags?: Record<string, string> | undefined;
  Version?: string | undefined;
  Warnings?: string[] | undefined;
}
export interface ReimportApiRequest {
  ApiId: string | undefined;
  Basepath?: string | undefined;
  Body: string | undefined;
  FailOnWarnings?: boolean | undefined;
}
export interface ReimportApiResponse {
  ApiEndpoint?: string | undefined;
  ApiGatewayManaged?: boolean | undefined;
  ApiId?: string | undefined;
  ApiKeySelectionExpression?: string | undefined;
  CorsConfiguration?: Cors | undefined;
  CreatedDate?: Date | undefined;
  Description?: string | undefined;
  DisableSchemaValidation?: boolean | undefined;
  DisableExecuteApiEndpoint?: boolean | undefined;
  ImportInfo?: string[] | undefined;
  Name?: string | undefined;
  ProtocolType?: ProtocolType | undefined;
  RouteSelectionExpression?: string | undefined;
  Tags?: Record<string, string> | undefined;
  Version?: string | undefined;
  Warnings?: string[] | undefined;
}
export interface ResetAuthorizersCacheRequest {
  ApiId: string | undefined;
  StageName: string | undefined;
}
export interface TagResourceRequest {
  ResourceArn: string | undefined;
  Tags?: Record<string, string> | undefined;
}
export interface TagResourceResponse {}
export interface UntagResourceRequest {
  ResourceArn: string | undefined;
  TagKeys: string[] | undefined;
}
export interface UpdateApiRequest {
  ApiId: string | undefined;
  ApiKeySelectionExpression?: string | undefined;
  CorsConfiguration?: Cors | undefined;
  CredentialsArn?: string | undefined;
  Description?: string | undefined;
  DisableSchemaValidation?: boolean | undefined;
  DisableExecuteApiEndpoint?: boolean | undefined;
  Name?: string | undefined;
  RouteKey?: string | undefined;
  RouteSelectionExpression?: string | undefined;
  Target?: string | undefined;
  Version?: string | undefined;
}
export interface UpdateApiResponse {
  ApiEndpoint?: string | undefined;
  ApiGatewayManaged?: boolean | undefined;
  ApiId?: string | undefined;
  ApiKeySelectionExpression?: string | undefined;
  CorsConfiguration?: Cors | undefined;
  CreatedDate?: Date | undefined;
  Description?: string | undefined;
  DisableSchemaValidation?: boolean | undefined;
  DisableExecuteApiEndpoint?: boolean | undefined;
  ImportInfo?: string[] | undefined;
  Name?: string | undefined;
  ProtocolType?: ProtocolType | undefined;
  RouteSelectionExpression?: string | undefined;
  Tags?: Record<string, string> | undefined;
  Version?: string | undefined;
  Warnings?: string[] | undefined;
}
export interface UpdateApiMappingRequest {
  ApiId: string | undefined;
  ApiMappingId: string | undefined;
  ApiMappingKey?: string | undefined;
  DomainName: string | undefined;
  Stage?: string | undefined;
}
export interface UpdateApiMappingResponse {
  ApiId?: string | undefined;
  ApiMappingId?: string | undefined;
  ApiMappingKey?: string | undefined;
  Stage?: string | undefined;
}
export interface UpdateAuthorizerRequest {
  ApiId: string | undefined;
  AuthorizerCredentialsArn?: string | undefined;
  AuthorizerId: string | undefined;
  AuthorizerPayloadFormatVersion?: string | undefined;
  AuthorizerResultTtlInSeconds?: number | undefined;
  AuthorizerType?: AuthorizerType | undefined;
  AuthorizerUri?: string | undefined;
  EnableSimpleResponses?: boolean | undefined;
  IdentitySource?: string[] | undefined;
  IdentityValidationExpression?: string | undefined;
  JwtConfiguration?: JWTConfiguration | undefined;
  Name?: string | undefined;
}
export interface UpdateAuthorizerResponse {
  AuthorizerCredentialsArn?: string | undefined;
  AuthorizerId?: string | undefined;
  AuthorizerPayloadFormatVersion?: string | undefined;
  AuthorizerResultTtlInSeconds?: number | undefined;
  AuthorizerType?: AuthorizerType | undefined;
  AuthorizerUri?: string | undefined;
  EnableSimpleResponses?: boolean | undefined;
  IdentitySource?: string[] | undefined;
  IdentityValidationExpression?: string | undefined;
  JwtConfiguration?: JWTConfiguration | undefined;
  Name?: string | undefined;
}
export interface UpdateDeploymentRequest {
  ApiId: string | undefined;
  DeploymentId: string | undefined;
  Description?: string | undefined;
}
export interface UpdateDeploymentResponse {
  AutoDeployed?: boolean | undefined;
  CreatedDate?: Date | undefined;
  DeploymentId?: string | undefined;
  DeploymentStatus?: DeploymentStatus | undefined;
  DeploymentStatusMessage?: string | undefined;
  Description?: string | undefined;
}
export interface UpdateDomainNameRequest {
  DomainName: string | undefined;
  DomainNameConfigurations?: DomainNameConfiguration[] | undefined;
  MutualTlsAuthentication?: MutualTlsAuthenticationInput | undefined;
}
export interface UpdateDomainNameResponse {
  ApiMappingSelectionExpression?: string | undefined;
  DomainName?: string | undefined;
  DomainNameConfigurations?: DomainNameConfiguration[] | undefined;
  MutualTlsAuthentication?: MutualTlsAuthentication | undefined;
  Tags?: Record<string, string> | undefined;
}
export interface UpdateIntegrationRequest {
  ApiId: string | undefined;
  ConnectionId?: string | undefined;
  ConnectionType?: ConnectionType | undefined;
  ContentHandlingStrategy?: ContentHandlingStrategy | undefined;
  CredentialsArn?: string | undefined;
  Description?: string | undefined;
  IntegrationId: string | undefined;
  IntegrationMethod?: string | undefined;
  IntegrationSubtype?: string | undefined;
  IntegrationType?: IntegrationType | undefined;
  IntegrationUri?: string | undefined;
  PassthroughBehavior?: PassthroughBehavior | undefined;
  PayloadFormatVersion?: string | undefined;
  RequestParameters?: Record<string, string> | undefined;
  RequestTemplates?: Record<string, string> | undefined;
  ResponseParameters?: Record<string, Record<string, string>> | undefined;
  TemplateSelectionExpression?: string | undefined;
  TimeoutInMillis?: number | undefined;
  TlsConfig?: TlsConfigInput | undefined;
}
export interface UpdateIntegrationResult {
  ApiGatewayManaged?: boolean | undefined;
  ConnectionId?: string | undefined;
  ConnectionType?: ConnectionType | undefined;
  ContentHandlingStrategy?: ContentHandlingStrategy | undefined;
  CredentialsArn?: string | undefined;
  Description?: string | undefined;
  IntegrationId?: string | undefined;
  IntegrationMethod?: string | undefined;
  IntegrationResponseSelectionExpression?: string | undefined;
  IntegrationSubtype?: string | undefined;
  IntegrationType?: IntegrationType | undefined;
  IntegrationUri?: string | undefined;
  PassthroughBehavior?: PassthroughBehavior | undefined;
  PayloadFormatVersion?: string | undefined;
  RequestParameters?: Record<string, string> | undefined;
  RequestTemplates?: Record<string, string> | undefined;
  ResponseParameters?: Record<string, Record<string, string>> | undefined;
  TemplateSelectionExpression?: string | undefined;
  TimeoutInMillis?: number | undefined;
  TlsConfig?: TlsConfig | undefined;
}
export interface UpdateIntegrationResponseRequest {
  ApiId: string | undefined;
  ContentHandlingStrategy?: ContentHandlingStrategy | undefined;
  IntegrationId: string | undefined;
  IntegrationResponseId: string | undefined;
  IntegrationResponseKey?: string | undefined;
  ResponseParameters?: Record<string, string> | undefined;
  ResponseTemplates?: Record<string, string> | undefined;
  TemplateSelectionExpression?: string | undefined;
}
export interface UpdateIntegrationResponseResponse {
  ContentHandlingStrategy?: ContentHandlingStrategy | undefined;
  IntegrationResponseId?: string | undefined;
  IntegrationResponseKey?: string | undefined;
  ResponseParameters?: Record<string, string> | undefined;
  ResponseTemplates?: Record<string, string> | undefined;
  TemplateSelectionExpression?: string | undefined;
}
export interface UpdateModelRequest {
  ApiId: string | undefined;
  ContentType?: string | undefined;
  Description?: string | undefined;
  ModelId: string | undefined;
  Name?: string | undefined;
  Schema?: string | undefined;
}
export interface UpdateModelResponse {
  ContentType?: string | undefined;
  Description?: string | undefined;
  ModelId?: string | undefined;
  Name?: string | undefined;
  Schema?: string | undefined;
}
export interface UpdateRouteRequest {
  ApiId: string | undefined;
  ApiKeyRequired?: boolean | undefined;
  AuthorizationScopes?: string[] | undefined;
  AuthorizationType?: AuthorizationType | undefined;
  AuthorizerId?: string | undefined;
  ModelSelectionExpression?: string | undefined;
  OperationName?: string | undefined;
  RequestModels?: Record<string, string> | undefined;
  RequestParameters?: Record<string, ParameterConstraints> | undefined;
  RouteId: string | undefined;
  RouteKey?: string | undefined;
  RouteResponseSelectionExpression?: string | undefined;
  Target?: string | undefined;
}
export interface UpdateRouteResult {
  ApiGatewayManaged?: boolean | undefined;
  ApiKeyRequired?: boolean | undefined;
  AuthorizationScopes?: string[] | undefined;
  AuthorizationType?: AuthorizationType | undefined;
  AuthorizerId?: string | undefined;
  ModelSelectionExpression?: string | undefined;
  OperationName?: string | undefined;
  RequestModels?: Record<string, string> | undefined;
  RequestParameters?: Record<string, ParameterConstraints> | undefined;
  RouteId?: string | undefined;
  RouteKey?: string | undefined;
  RouteResponseSelectionExpression?: string | undefined;
  Target?: string | undefined;
}
export interface UpdateRouteResponseRequest {
  ApiId: string | undefined;
  ModelSelectionExpression?: string | undefined;
  ResponseModels?: Record<string, string> | undefined;
  ResponseParameters?: Record<string, ParameterConstraints> | undefined;
  RouteId: string | undefined;
  RouteResponseId: string | undefined;
  RouteResponseKey?: string | undefined;
}
export interface UpdateRouteResponseResponse {
  ModelSelectionExpression?: string | undefined;
  ResponseModels?: Record<string, string> | undefined;
  ResponseParameters?: Record<string, ParameterConstraints> | undefined;
  RouteResponseId?: string | undefined;
  RouteResponseKey?: string | undefined;
}
export interface UpdateStageRequest {
  AccessLogSettings?: AccessLogSettings | undefined;
  ApiId: string | undefined;
  AutoDeploy?: boolean | undefined;
  ClientCertificateId?: string | undefined;
  DefaultRouteSettings?: RouteSettings | undefined;
  DeploymentId?: string | undefined;
  Description?: string | undefined;
  RouteSettings?: Record<string, RouteSettings> | undefined;
  StageName: string | undefined;
  StageVariables?: Record<string, string> | undefined;
}
export interface UpdateStageResponse {
  AccessLogSettings?: AccessLogSettings | undefined;
  ApiGatewayManaged?: boolean | undefined;
  AutoDeploy?: boolean | undefined;
  ClientCertificateId?: string | undefined;
  CreatedDate?: Date | undefined;
  DefaultRouteSettings?: RouteSettings | undefined;
  DeploymentId?: string | undefined;
  Description?: string | undefined;
  LastDeploymentStatusMessage?: string | undefined;
  LastUpdatedDate?: Date | undefined;
  RouteSettings?: Record<string, RouteSettings> | undefined;
  StageName?: string | undefined;
  StageVariables?: Record<string, string> | undefined;
  Tags?: Record<string, string> | undefined;
}
export interface UpdateVpcLinkRequest {
  Name?: string | undefined;
  VpcLinkId: string | undefined;
}
export interface UpdateVpcLinkResponse {
  CreatedDate?: Date | undefined;
  Name?: string | undefined;
  SecurityGroupIds?: string[] | undefined;
  SubnetIds?: string[] | undefined;
  Tags?: Record<string, string> | undefined;
  VpcLinkId?: string | undefined;
  VpcLinkStatus?: VpcLinkStatus | undefined;
  VpcLinkStatusMessage?: string | undefined;
  VpcLinkVersion?: VpcLinkVersion | undefined;
}
