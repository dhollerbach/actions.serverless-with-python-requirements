"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  AccessAdvisorUsageGranularityType: () => AccessAdvisorUsageGranularityType,
  AccessKeyFilterSensitiveLog: () => AccessKeyFilterSensitiveLog,
  AccountNotManagementOrDelegatedAdministratorException: () => AccountNotManagementOrDelegatedAdministratorException,
  AddClientIDToOpenIDConnectProviderCommand: () => AddClientIDToOpenIDConnectProviderCommand,
  AddRoleToInstanceProfileCommand: () => AddRoleToInstanceProfileCommand,
  AddUserToGroupCommand: () => AddUserToGroupCommand,
  AssertionEncryptionModeType: () => AssertionEncryptionModeType,
  AssignmentStatusType: () => AssignmentStatusType,
  AttachGroupPolicyCommand: () => AttachGroupPolicyCommand,
  AttachRolePolicyCommand: () => AttachRolePolicyCommand,
  AttachUserPolicyCommand: () => AttachUserPolicyCommand,
  CallerIsNotManagementAccountException: () => CallerIsNotManagementAccountException,
  ChangePasswordCommand: () => ChangePasswordCommand,
  ChangePasswordRequestFilterSensitiveLog: () => ChangePasswordRequestFilterSensitiveLog,
  ConcurrentModificationException: () => ConcurrentModificationException,
  ContextKeyTypeEnum: () => ContextKeyTypeEnum,
  CreateAccessKeyCommand: () => CreateAccessKeyCommand,
  CreateAccessKeyResponseFilterSensitiveLog: () => CreateAccessKeyResponseFilterSensitiveLog,
  CreateAccountAliasCommand: () => CreateAccountAliasCommand,
  CreateGroupCommand: () => CreateGroupCommand,
  CreateInstanceProfileCommand: () => CreateInstanceProfileCommand,
  CreateLoginProfileCommand: () => CreateLoginProfileCommand,
  CreateLoginProfileRequestFilterSensitiveLog: () => CreateLoginProfileRequestFilterSensitiveLog,
  CreateOpenIDConnectProviderCommand: () => CreateOpenIDConnectProviderCommand,
  CreatePolicyCommand: () => CreatePolicyCommand,
  CreatePolicyVersionCommand: () => CreatePolicyVersionCommand,
  CreateRoleCommand: () => CreateRoleCommand,
  CreateSAMLProviderCommand: () => CreateSAMLProviderCommand,
  CreateSAMLProviderRequestFilterSensitiveLog: () => CreateSAMLProviderRequestFilterSensitiveLog,
  CreateServiceLinkedRoleCommand: () => CreateServiceLinkedRoleCommand,
  CreateServiceSpecificCredentialCommand: () => CreateServiceSpecificCredentialCommand,
  CreateServiceSpecificCredentialResponseFilterSensitiveLog: () => CreateServiceSpecificCredentialResponseFilterSensitiveLog,
  CreateUserCommand: () => CreateUserCommand,
  CreateVirtualMFADeviceCommand: () => CreateVirtualMFADeviceCommand,
  CreateVirtualMFADeviceResponseFilterSensitiveLog: () => CreateVirtualMFADeviceResponseFilterSensitiveLog,
  CredentialReportExpiredException: () => CredentialReportExpiredException,
  CredentialReportNotPresentException: () => CredentialReportNotPresentException,
  CredentialReportNotReadyException: () => CredentialReportNotReadyException,
  DeactivateMFADeviceCommand: () => DeactivateMFADeviceCommand,
  DeleteAccessKeyCommand: () => DeleteAccessKeyCommand,
  DeleteAccountAliasCommand: () => DeleteAccountAliasCommand,
  DeleteAccountPasswordPolicyCommand: () => DeleteAccountPasswordPolicyCommand,
  DeleteConflictException: () => DeleteConflictException,
  DeleteGroupCommand: () => DeleteGroupCommand,
  DeleteGroupPolicyCommand: () => DeleteGroupPolicyCommand,
  DeleteInstanceProfileCommand: () => DeleteInstanceProfileCommand,
  DeleteLoginProfileCommand: () => DeleteLoginProfileCommand,
  DeleteOpenIDConnectProviderCommand: () => DeleteOpenIDConnectProviderCommand,
  DeletePolicyCommand: () => DeletePolicyCommand,
  DeletePolicyVersionCommand: () => DeletePolicyVersionCommand,
  DeleteRoleCommand: () => DeleteRoleCommand,
  DeleteRolePermissionsBoundaryCommand: () => DeleteRolePermissionsBoundaryCommand,
  DeleteRolePolicyCommand: () => DeleteRolePolicyCommand,
  DeleteSAMLProviderCommand: () => DeleteSAMLProviderCommand,
  DeleteSSHPublicKeyCommand: () => DeleteSSHPublicKeyCommand,
  DeleteServerCertificateCommand: () => DeleteServerCertificateCommand,
  DeleteServiceLinkedRoleCommand: () => DeleteServiceLinkedRoleCommand,
  DeleteServiceSpecificCredentialCommand: () => DeleteServiceSpecificCredentialCommand,
  DeleteSigningCertificateCommand: () => DeleteSigningCertificateCommand,
  DeleteUserCommand: () => DeleteUserCommand,
  DeleteUserPermissionsBoundaryCommand: () => DeleteUserPermissionsBoundaryCommand,
  DeleteUserPolicyCommand: () => DeleteUserPolicyCommand,
  DeleteVirtualMFADeviceCommand: () => DeleteVirtualMFADeviceCommand,
  DeletionTaskStatusType: () => DeletionTaskStatusType,
  DetachGroupPolicyCommand: () => DetachGroupPolicyCommand,
  DetachRolePolicyCommand: () => DetachRolePolicyCommand,
  DetachUserPolicyCommand: () => DetachUserPolicyCommand,
  DisableOrganizationsRootCredentialsManagementCommand: () => DisableOrganizationsRootCredentialsManagementCommand,
  DisableOrganizationsRootSessionsCommand: () => DisableOrganizationsRootSessionsCommand,
  DuplicateCertificateException: () => DuplicateCertificateException,
  DuplicateSSHPublicKeyException: () => DuplicateSSHPublicKeyException,
  EnableMFADeviceCommand: () => EnableMFADeviceCommand,
  EnableOrganizationsRootCredentialsManagementCommand: () => EnableOrganizationsRootCredentialsManagementCommand,
  EnableOrganizationsRootSessionsCommand: () => EnableOrganizationsRootSessionsCommand,
  EncodingType: () => EncodingType,
  EntityAlreadyExistsException: () => EntityAlreadyExistsException,
  EntityTemporarilyUnmodifiableException: () => EntityTemporarilyUnmodifiableException,
  EntityType: () => EntityType,
  FeatureType: () => FeatureType,
  GenerateCredentialReportCommand: () => GenerateCredentialReportCommand,
  GenerateOrganizationsAccessReportCommand: () => GenerateOrganizationsAccessReportCommand,
  GenerateServiceLastAccessedDetailsCommand: () => GenerateServiceLastAccessedDetailsCommand,
  GetAccessKeyLastUsedCommand: () => GetAccessKeyLastUsedCommand,
  GetAccountAuthorizationDetailsCommand: () => GetAccountAuthorizationDetailsCommand,
  GetAccountPasswordPolicyCommand: () => GetAccountPasswordPolicyCommand,
  GetAccountSummaryCommand: () => GetAccountSummaryCommand,
  GetContextKeysForCustomPolicyCommand: () => GetContextKeysForCustomPolicyCommand,
  GetContextKeysForPrincipalPolicyCommand: () => GetContextKeysForPrincipalPolicyCommand,
  GetCredentialReportCommand: () => GetCredentialReportCommand,
  GetGroupCommand: () => GetGroupCommand,
  GetGroupPolicyCommand: () => GetGroupPolicyCommand,
  GetInstanceProfileCommand: () => GetInstanceProfileCommand,
  GetLoginProfileCommand: () => GetLoginProfileCommand,
  GetMFADeviceCommand: () => GetMFADeviceCommand,
  GetOpenIDConnectProviderCommand: () => GetOpenIDConnectProviderCommand,
  GetOrganizationsAccessReportCommand: () => GetOrganizationsAccessReportCommand,
  GetPolicyCommand: () => GetPolicyCommand,
  GetPolicyVersionCommand: () => GetPolicyVersionCommand,
  GetRoleCommand: () => GetRoleCommand,
  GetRolePolicyCommand: () => GetRolePolicyCommand,
  GetSAMLProviderCommand: () => GetSAMLProviderCommand,
  GetSSHPublicKeyCommand: () => GetSSHPublicKeyCommand,
  GetServerCertificateCommand: () => GetServerCertificateCommand,
  GetServiceLastAccessedDetailsCommand: () => GetServiceLastAccessedDetailsCommand,
  GetServiceLastAccessedDetailsWithEntitiesCommand: () => GetServiceLastAccessedDetailsWithEntitiesCommand,
  GetServiceLinkedRoleDeletionStatusCommand: () => GetServiceLinkedRoleDeletionStatusCommand,
  GetUserCommand: () => GetUserCommand,
  GetUserPolicyCommand: () => GetUserPolicyCommand,
  GlobalEndpointTokenVersion: () => GlobalEndpointTokenVersion,
  IAM: () => IAM,
  IAMClient: () => IAMClient,
  IAMServiceException: () => IAMServiceException,
  InvalidAuthenticationCodeException: () => InvalidAuthenticationCodeException,
  InvalidCertificateException: () => InvalidCertificateException,
  InvalidInputException: () => InvalidInputException,
  InvalidPublicKeyException: () => InvalidPublicKeyException,
  InvalidUserTypeException: () => InvalidUserTypeException,
  JobStatusType: () => JobStatusType,
  KeyPairMismatchException: () => KeyPairMismatchException,
  LimitExceededException: () => LimitExceededException,
  ListAccessKeysCommand: () => ListAccessKeysCommand,
  ListAccountAliasesCommand: () => ListAccountAliasesCommand,
  ListAttachedGroupPoliciesCommand: () => ListAttachedGroupPoliciesCommand,
  ListAttachedRolePoliciesCommand: () => ListAttachedRolePoliciesCommand,
  ListAttachedUserPoliciesCommand: () => ListAttachedUserPoliciesCommand,
  ListEntitiesForPolicyCommand: () => ListEntitiesForPolicyCommand,
  ListGroupPoliciesCommand: () => ListGroupPoliciesCommand,
  ListGroupsCommand: () => ListGroupsCommand,
  ListGroupsForUserCommand: () => ListGroupsForUserCommand,
  ListInstanceProfileTagsCommand: () => ListInstanceProfileTagsCommand,
  ListInstanceProfilesCommand: () => ListInstanceProfilesCommand,
  ListInstanceProfilesForRoleCommand: () => ListInstanceProfilesForRoleCommand,
  ListMFADeviceTagsCommand: () => ListMFADeviceTagsCommand,
  ListMFADevicesCommand: () => ListMFADevicesCommand,
  ListOpenIDConnectProviderTagsCommand: () => ListOpenIDConnectProviderTagsCommand,
  ListOpenIDConnectProvidersCommand: () => ListOpenIDConnectProvidersCommand,
  ListOrganizationsFeaturesCommand: () => ListOrganizationsFeaturesCommand,
  ListPoliciesCommand: () => ListPoliciesCommand,
  ListPoliciesGrantingServiceAccessCommand: () => ListPoliciesGrantingServiceAccessCommand,
  ListPolicyTagsCommand: () => ListPolicyTagsCommand,
  ListPolicyVersionsCommand: () => ListPolicyVersionsCommand,
  ListRolePoliciesCommand: () => ListRolePoliciesCommand,
  ListRoleTagsCommand: () => ListRoleTagsCommand,
  ListRolesCommand: () => ListRolesCommand,
  ListSAMLProviderTagsCommand: () => ListSAMLProviderTagsCommand,
  ListSAMLProvidersCommand: () => ListSAMLProvidersCommand,
  ListSSHPublicKeysCommand: () => ListSSHPublicKeysCommand,
  ListServerCertificateTagsCommand: () => ListServerCertificateTagsCommand,
  ListServerCertificatesCommand: () => ListServerCertificatesCommand,
  ListServiceSpecificCredentialsCommand: () => ListServiceSpecificCredentialsCommand,
  ListSigningCertificatesCommand: () => ListSigningCertificatesCommand,
  ListUserPoliciesCommand: () => ListUserPoliciesCommand,
  ListUserTagsCommand: () => ListUserTagsCommand,
  ListUsersCommand: () => ListUsersCommand,
  ListVirtualMFADevicesCommand: () => ListVirtualMFADevicesCommand,
  ListVirtualMFADevicesResponseFilterSensitiveLog: () => ListVirtualMFADevicesResponseFilterSensitiveLog,
  MalformedCertificateException: () => MalformedCertificateException,
  MalformedPolicyDocumentException: () => MalformedPolicyDocumentException,
  NoSuchEntityException: () => NoSuchEntityException,
  OpenIdIdpCommunicationErrorException: () => OpenIdIdpCommunicationErrorException,
  OrganizationNotFoundException: () => OrganizationNotFoundException,
  OrganizationNotInAllFeaturesModeException: () => OrganizationNotInAllFeaturesModeException,
  PasswordPolicyViolationException: () => PasswordPolicyViolationException,
  PermissionsBoundaryAttachmentType: () => PermissionsBoundaryAttachmentType,
  PolicyEvaluationDecisionType: () => PolicyEvaluationDecisionType,
  PolicyEvaluationException: () => PolicyEvaluationException,
  PolicyNotAttachableException: () => PolicyNotAttachableException,
  PolicyOwnerEntityType: () => PolicyOwnerEntityType,
  PolicyScopeType: () => PolicyScopeType,
  PolicySourceType: () => PolicySourceType,
  PolicyType: () => PolicyType,
  PolicyUsageType: () => PolicyUsageType,
  PutGroupPolicyCommand: () => PutGroupPolicyCommand,
  PutRolePermissionsBoundaryCommand: () => PutRolePermissionsBoundaryCommand,
  PutRolePolicyCommand: () => PutRolePolicyCommand,
  PutUserPermissionsBoundaryCommand: () => PutUserPermissionsBoundaryCommand,
  PutUserPolicyCommand: () => PutUserPolicyCommand,
  RemoveClientIDFromOpenIDConnectProviderCommand: () => RemoveClientIDFromOpenIDConnectProviderCommand,
  RemoveRoleFromInstanceProfileCommand: () => RemoveRoleFromInstanceProfileCommand,
  RemoveUserFromGroupCommand: () => RemoveUserFromGroupCommand,
  ReportFormatType: () => ReportFormatType,
  ReportGenerationLimitExceededException: () => ReportGenerationLimitExceededException,
  ReportStateType: () => ReportStateType,
  ResetServiceSpecificCredentialCommand: () => ResetServiceSpecificCredentialCommand,
  ResetServiceSpecificCredentialResponseFilterSensitiveLog: () => ResetServiceSpecificCredentialResponseFilterSensitiveLog,
  ResyncMFADeviceCommand: () => ResyncMFADeviceCommand,
  ServiceAccessNotEnabledException: () => ServiceAccessNotEnabledException,
  ServiceFailureException: () => ServiceFailureException,
  ServiceNotSupportedException: () => ServiceNotSupportedException,
  ServiceSpecificCredentialFilterSensitiveLog: () => ServiceSpecificCredentialFilterSensitiveLog,
  SetDefaultPolicyVersionCommand: () => SetDefaultPolicyVersionCommand,
  SetSecurityTokenServicePreferencesCommand: () => SetSecurityTokenServicePreferencesCommand,
  SimulateCustomPolicyCommand: () => SimulateCustomPolicyCommand,
  SimulatePrincipalPolicyCommand: () => SimulatePrincipalPolicyCommand,
  SortKeyType: () => SortKeyType,
  StatusType: () => StatusType,
  SummaryKeyType: () => SummaryKeyType,
  TagInstanceProfileCommand: () => TagInstanceProfileCommand,
  TagMFADeviceCommand: () => TagMFADeviceCommand,
  TagOpenIDConnectProviderCommand: () => TagOpenIDConnectProviderCommand,
  TagPolicyCommand: () => TagPolicyCommand,
  TagRoleCommand: () => TagRoleCommand,
  TagSAMLProviderCommand: () => TagSAMLProviderCommand,
  TagServerCertificateCommand: () => TagServerCertificateCommand,
  TagUserCommand: () => TagUserCommand,
  UnmodifiableEntityException: () => UnmodifiableEntityException,
  UnrecognizedPublicKeyEncodingException: () => UnrecognizedPublicKeyEncodingException,
  UntagInstanceProfileCommand: () => UntagInstanceProfileCommand,
  UntagMFADeviceCommand: () => UntagMFADeviceCommand,
  UntagOpenIDConnectProviderCommand: () => UntagOpenIDConnectProviderCommand,
  UntagPolicyCommand: () => UntagPolicyCommand,
  UntagRoleCommand: () => UntagRoleCommand,
  UntagSAMLProviderCommand: () => UntagSAMLProviderCommand,
  UntagServerCertificateCommand: () => UntagServerCertificateCommand,
  UntagUserCommand: () => UntagUserCommand,
  UpdateAccessKeyCommand: () => UpdateAccessKeyCommand,
  UpdateAccountPasswordPolicyCommand: () => UpdateAccountPasswordPolicyCommand,
  UpdateAssumeRolePolicyCommand: () => UpdateAssumeRolePolicyCommand,
  UpdateGroupCommand: () => UpdateGroupCommand,
  UpdateLoginProfileCommand: () => UpdateLoginProfileCommand,
  UpdateLoginProfileRequestFilterSensitiveLog: () => UpdateLoginProfileRequestFilterSensitiveLog,
  UpdateOpenIDConnectProviderThumbprintCommand: () => UpdateOpenIDConnectProviderThumbprintCommand,
  UpdateRoleCommand: () => UpdateRoleCommand,
  UpdateRoleDescriptionCommand: () => UpdateRoleDescriptionCommand,
  UpdateSAMLProviderCommand: () => UpdateSAMLProviderCommand,
  UpdateSAMLProviderRequestFilterSensitiveLog: () => UpdateSAMLProviderRequestFilterSensitiveLog,
  UpdateSSHPublicKeyCommand: () => UpdateSSHPublicKeyCommand,
  UpdateServerCertificateCommand: () => UpdateServerCertificateCommand,
  UpdateServiceSpecificCredentialCommand: () => UpdateServiceSpecificCredentialCommand,
  UpdateSigningCertificateCommand: () => UpdateSigningCertificateCommand,
  UpdateUserCommand: () => UpdateUserCommand,
  UploadSSHPublicKeyCommand: () => UploadSSHPublicKeyCommand,
  UploadServerCertificateCommand: () => UploadServerCertificateCommand,
  UploadServerCertificateRequestFilterSensitiveLog: () => UploadServerCertificateRequestFilterSensitiveLog,
  UploadSigningCertificateCommand: () => UploadSigningCertificateCommand,
  VirtualMFADeviceFilterSensitiveLog: () => VirtualMFADeviceFilterSensitiveLog,
  __Client: () => import_smithy_client.Client,
  paginateGetAccountAuthorizationDetails: () => paginateGetAccountAuthorizationDetails,
  paginateGetGroup: () => paginateGetGroup,
  paginateListAccessKeys: () => paginateListAccessKeys,
  paginateListAccountAliases: () => paginateListAccountAliases,
  paginateListAttachedGroupPolicies: () => paginateListAttachedGroupPolicies,
  paginateListAttachedRolePolicies: () => paginateListAttachedRolePolicies,
  paginateListAttachedUserPolicies: () => paginateListAttachedUserPolicies,
  paginateListEntitiesForPolicy: () => paginateListEntitiesForPolicy,
  paginateListGroupPolicies: () => paginateListGroupPolicies,
  paginateListGroups: () => paginateListGroups,
  paginateListGroupsForUser: () => paginateListGroupsForUser,
  paginateListInstanceProfileTags: () => paginateListInstanceProfileTags,
  paginateListInstanceProfiles: () => paginateListInstanceProfiles,
  paginateListInstanceProfilesForRole: () => paginateListInstanceProfilesForRole,
  paginateListMFADeviceTags: () => paginateListMFADeviceTags,
  paginateListMFADevices: () => paginateListMFADevices,
  paginateListOpenIDConnectProviderTags: () => paginateListOpenIDConnectProviderTags,
  paginateListPolicies: () => paginateListPolicies,
  paginateListPolicyTags: () => paginateListPolicyTags,
  paginateListPolicyVersions: () => paginateListPolicyVersions,
  paginateListRolePolicies: () => paginateListRolePolicies,
  paginateListRoleTags: () => paginateListRoleTags,
  paginateListRoles: () => paginateListRoles,
  paginateListSAMLProviderTags: () => paginateListSAMLProviderTags,
  paginateListSSHPublicKeys: () => paginateListSSHPublicKeys,
  paginateListServerCertificateTags: () => paginateListServerCertificateTags,
  paginateListServerCertificates: () => paginateListServerCertificates,
  paginateListSigningCertificates: () => paginateListSigningCertificates,
  paginateListUserPolicies: () => paginateListUserPolicies,
  paginateListUserTags: () => paginateListUserTags,
  paginateListUsers: () => paginateListUsers,
  paginateListVirtualMFADevices: () => paginateListVirtualMFADevices,
  paginateSimulateCustomPolicy: () => paginateSimulateCustomPolicy,
  paginateSimulatePrincipalPolicy: () => paginateSimulatePrincipalPolicy,
  waitForInstanceProfileExists: () => waitForInstanceProfileExists,
  waitForPolicyExists: () => waitForPolicyExists,
  waitForRoleExists: () => waitForRoleExists,
  waitForUserExists: () => waitForUserExists,
  waitUntilInstanceProfileExists: () => waitUntilInstanceProfileExists,
  waitUntilPolicyExists: () => waitUntilPolicyExists,
  waitUntilRoleExists: () => waitUntilRoleExists,
  waitUntilUserExists: () => waitUntilUserExists
});
module.exports = __toCommonJS(src_exports);

// src/IAMClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "iam"
  };
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/IAMClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var asPartial = /* @__PURE__ */ __name((t) => t, "asPartial");
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
}, "resolveRuntimeExtensions");

// src/IAMClient.ts
var IAMClient = class extends import_smithy_client.Client {
  static {
    __name(this, "IAMClient");
  }
  /**
   * The resolved configuration of IAMClient class. This is resolved and normalized from the {@link IAMClientConfig | constructor configuration interface}.
   */
  config;
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_1);
    const _config_3 = (0, import_middleware_retry.resolveRetryConfig)(_config_2);
    const _config_4 = (0, import_config_resolver.resolveRegionConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, configuration?.extensions || []);
    super(_config_8);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: import_httpAuthSchemeProvider.defaultIAMHttpAuthSchemeParametersProvider,
        identityProviderConfigProvider: async (config) => new import_core.DefaultIdentityProviderConfig({
          "aws.auth#sigv4": config.credentials
        })
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
};

// src/IAM.ts


// src/commands/AddClientIDToOpenIDConnectProviderCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");


// src/protocols/Aws_query.ts
var import_core2 = require("@aws-sdk/core");



// src/models/IAMServiceException.ts

var IAMServiceException = class _IAMServiceException extends import_smithy_client.ServiceException {
  static {
    __name(this, "IAMServiceException");
  }
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _IAMServiceException.prototype);
  }
};

// src/models/models_0.ts

var AccessAdvisorUsageGranularityType = {
  ACTION_LEVEL: "ACTION_LEVEL",
  SERVICE_LEVEL: "SERVICE_LEVEL"
};
var StatusType = {
  Active: "Active",
  Inactive: "Inactive"
};
var AccountNotManagementOrDelegatedAdministratorException = class _AccountNotManagementOrDelegatedAdministratorException extends IAMServiceException {
  static {
    __name(this, "AccountNotManagementOrDelegatedAdministratorException");
  }
  name = "AccountNotManagementOrDelegatedAdministratorException";
  $fault = "client";
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "AccountNotManagementOrDelegatedAdministratorException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _AccountNotManagementOrDelegatedAdministratorException.prototype);
    this.Message = opts.Message;
  }
};
var InvalidInputException = class _InvalidInputException extends IAMServiceException {
  static {
    __name(this, "InvalidInputException");
  }
  name = "InvalidInputException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidInputException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _InvalidInputException.prototype);
  }
};
var LimitExceededException = class _LimitExceededException extends IAMServiceException {
  static {
    __name(this, "LimitExceededException");
  }
  name = "LimitExceededException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "LimitExceededException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _LimitExceededException.prototype);
  }
};
var NoSuchEntityException = class _NoSuchEntityException extends IAMServiceException {
  static {
    __name(this, "NoSuchEntityException");
  }
  name = "NoSuchEntityException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "NoSuchEntityException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _NoSuchEntityException.prototype);
  }
};
var ServiceFailureException = class _ServiceFailureException extends IAMServiceException {
  static {
    __name(this, "ServiceFailureException");
  }
  name = "ServiceFailureException";
  $fault = "server";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ServiceFailureException",
      $fault: "server",
      ...opts
    });
    Object.setPrototypeOf(this, _ServiceFailureException.prototype);
  }
};
var EntityAlreadyExistsException = class _EntityAlreadyExistsException extends IAMServiceException {
  static {
    __name(this, "EntityAlreadyExistsException");
  }
  name = "EntityAlreadyExistsException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "EntityAlreadyExistsException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _EntityAlreadyExistsException.prototype);
  }
};
var UnmodifiableEntityException = class _UnmodifiableEntityException extends IAMServiceException {
  static {
    __name(this, "UnmodifiableEntityException");
  }
  name = "UnmodifiableEntityException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "UnmodifiableEntityException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _UnmodifiableEntityException.prototype);
  }
};
var AssertionEncryptionModeType = {
  Allowed: "Allowed",
  Required: "Required"
};
var AssignmentStatusType = {
  Any: "Any",
  Assigned: "Assigned",
  Unassigned: "Unassigned"
};
var PermissionsBoundaryAttachmentType = {
  Policy: "PermissionsBoundaryPolicy"
};
var PolicyNotAttachableException = class _PolicyNotAttachableException extends IAMServiceException {
  static {
    __name(this, "PolicyNotAttachableException");
  }
  name = "PolicyNotAttachableException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "PolicyNotAttachableException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _PolicyNotAttachableException.prototype);
  }
};
var EntityTemporarilyUnmodifiableException = class _EntityTemporarilyUnmodifiableException extends IAMServiceException {
  static {
    __name(this, "EntityTemporarilyUnmodifiableException");
  }
  name = "EntityTemporarilyUnmodifiableException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "EntityTemporarilyUnmodifiableException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _EntityTemporarilyUnmodifiableException.prototype);
  }
};
var InvalidUserTypeException = class _InvalidUserTypeException extends IAMServiceException {
  static {
    __name(this, "InvalidUserTypeException");
  }
  name = "InvalidUserTypeException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidUserTypeException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _InvalidUserTypeException.prototype);
  }
};
var PasswordPolicyViolationException = class _PasswordPolicyViolationException extends IAMServiceException {
  static {
    __name(this, "PasswordPolicyViolationException");
  }
  name = "PasswordPolicyViolationException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "PasswordPolicyViolationException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _PasswordPolicyViolationException.prototype);
  }
};
var ConcurrentModificationException = class _ConcurrentModificationException extends IAMServiceException {
  static {
    __name(this, "ConcurrentModificationException");
  }
  name = "ConcurrentModificationException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ConcurrentModificationException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ConcurrentModificationException.prototype);
  }
};
var OpenIdIdpCommunicationErrorException = class _OpenIdIdpCommunicationErrorException extends IAMServiceException {
  static {
    __name(this, "OpenIdIdpCommunicationErrorException");
  }
  name = "OpenIdIdpCommunicationErrorException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "OpenIdIdpCommunicationErrorException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _OpenIdIdpCommunicationErrorException.prototype);
  }
};
var MalformedPolicyDocumentException = class _MalformedPolicyDocumentException extends IAMServiceException {
  static {
    __name(this, "MalformedPolicyDocumentException");
  }
  name = "MalformedPolicyDocumentException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "MalformedPolicyDocumentException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _MalformedPolicyDocumentException.prototype);
  }
};
var ServiceNotSupportedException = class _ServiceNotSupportedException extends IAMServiceException {
  static {
    __name(this, "ServiceNotSupportedException");
  }
  name = "ServiceNotSupportedException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ServiceNotSupportedException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ServiceNotSupportedException.prototype);
  }
};
var DeleteConflictException = class _DeleteConflictException extends IAMServiceException {
  static {
    __name(this, "DeleteConflictException");
  }
  name = "DeleteConflictException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "DeleteConflictException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _DeleteConflictException.prototype);
  }
};
var FeatureType = {
  ROOT_CREDENTIALS_MANAGEMENT: "RootCredentialsManagement",
  ROOT_SESSIONS: "RootSessions"
};
var OrganizationNotFoundException = class _OrganizationNotFoundException extends IAMServiceException {
  static {
    __name(this, "OrganizationNotFoundException");
  }
  name = "OrganizationNotFoundException";
  $fault = "client";
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "OrganizationNotFoundException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _OrganizationNotFoundException.prototype);
    this.Message = opts.Message;
  }
};
var OrganizationNotInAllFeaturesModeException = class _OrganizationNotInAllFeaturesModeException extends IAMServiceException {
  static {
    __name(this, "OrganizationNotInAllFeaturesModeException");
  }
  name = "OrganizationNotInAllFeaturesModeException";
  $fault = "client";
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "OrganizationNotInAllFeaturesModeException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _OrganizationNotInAllFeaturesModeException.prototype);
    this.Message = opts.Message;
  }
};
var ServiceAccessNotEnabledException = class _ServiceAccessNotEnabledException extends IAMServiceException {
  static {
    __name(this, "ServiceAccessNotEnabledException");
  }
  name = "ServiceAccessNotEnabledException";
  $fault = "client";
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ServiceAccessNotEnabledException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ServiceAccessNotEnabledException.prototype);
    this.Message = opts.Message;
  }
};
var InvalidAuthenticationCodeException = class _InvalidAuthenticationCodeException extends IAMServiceException {
  static {
    __name(this, "InvalidAuthenticationCodeException");
  }
  name = "InvalidAuthenticationCodeException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidAuthenticationCodeException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _InvalidAuthenticationCodeException.prototype);
  }
};
var CallerIsNotManagementAccountException = class _CallerIsNotManagementAccountException extends IAMServiceException {
  static {
    __name(this, "CallerIsNotManagementAccountException");
  }
  name = "CallerIsNotManagementAccountException";
  $fault = "client";
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "CallerIsNotManagementAccountException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _CallerIsNotManagementAccountException.prototype);
    this.Message = opts.Message;
  }
};
var ReportStateType = {
  COMPLETE: "COMPLETE",
  INPROGRESS: "INPROGRESS",
  STARTED: "STARTED"
};
var ReportGenerationLimitExceededException = class _ReportGenerationLimitExceededException extends IAMServiceException {
  static {
    __name(this, "ReportGenerationLimitExceededException");
  }
  name = "ReportGenerationLimitExceededException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ReportGenerationLimitExceededException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ReportGenerationLimitExceededException.prototype);
  }
};
var EntityType = {
  AWSManagedPolicy: "AWSManagedPolicy",
  Group: "Group",
  LocalManagedPolicy: "LocalManagedPolicy",
  Role: "Role",
  User: "User"
};
var SummaryKeyType = {
  AccessKeysPerUserQuota: "AccessKeysPerUserQuota",
  AccountAccessKeysPresent: "AccountAccessKeysPresent",
  AccountMFAEnabled: "AccountMFAEnabled",
  AccountPasswordPresent: "AccountPasswordPresent",
  AccountSigningCertificatesPresent: "AccountSigningCertificatesPresent",
  AttachedPoliciesPerGroupQuota: "AttachedPoliciesPerGroupQuota",
  AttachedPoliciesPerRoleQuota: "AttachedPoliciesPerRoleQuota",
  AttachedPoliciesPerUserQuota: "AttachedPoliciesPerUserQuota",
  GlobalEndpointTokenVersion: "GlobalEndpointTokenVersion",
  GroupPolicySizeQuota: "GroupPolicySizeQuota",
  Groups: "Groups",
  GroupsPerUserQuota: "GroupsPerUserQuota",
  GroupsQuota: "GroupsQuota",
  MFADevices: "MFADevices",
  MFADevicesInUse: "MFADevicesInUse",
  Policies: "Policies",
  PoliciesQuota: "PoliciesQuota",
  PolicySizeQuota: "PolicySizeQuota",
  PolicyVersionsInUse: "PolicyVersionsInUse",
  PolicyVersionsInUseQuota: "PolicyVersionsInUseQuota",
  ServerCertificates: "ServerCertificates",
  ServerCertificatesQuota: "ServerCertificatesQuota",
  SigningCertificatesPerUserQuota: "SigningCertificatesPerUserQuota",
  UserPolicySizeQuota: "UserPolicySizeQuota",
  Users: "Users",
  UsersQuota: "UsersQuota",
  VersionsPerPolicyQuota: "VersionsPerPolicyQuota"
};
var CredentialReportExpiredException = class _CredentialReportExpiredException extends IAMServiceException {
  static {
    __name(this, "CredentialReportExpiredException");
  }
  name = "CredentialReportExpiredException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "CredentialReportExpiredException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _CredentialReportExpiredException.prototype);
  }
};
var CredentialReportNotPresentException = class _CredentialReportNotPresentException extends IAMServiceException {
  static {
    __name(this, "CredentialReportNotPresentException");
  }
  name = "CredentialReportNotPresentException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "CredentialReportNotPresentException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _CredentialReportNotPresentException.prototype);
  }
};
var CredentialReportNotReadyException = class _CredentialReportNotReadyException extends IAMServiceException {
  static {
    __name(this, "CredentialReportNotReadyException");
  }
  name = "CredentialReportNotReadyException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "CredentialReportNotReadyException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _CredentialReportNotReadyException.prototype);
  }
};
var ReportFormatType = {
  text_csv: "text/csv"
};
var SortKeyType = {
  LAST_AUTHENTICATED_TIME_ASCENDING: "LAST_AUTHENTICATED_TIME_ASCENDING",
  LAST_AUTHENTICATED_TIME_DESCENDING: "LAST_AUTHENTICATED_TIME_DESCENDING",
  SERVICE_NAMESPACE_ASCENDING: "SERVICE_NAMESPACE_ASCENDING",
  SERVICE_NAMESPACE_DESCENDING: "SERVICE_NAMESPACE_DESCENDING"
};
var JobStatusType = {
  COMPLETED: "COMPLETED",
  FAILED: "FAILED",
  IN_PROGRESS: "IN_PROGRESS"
};
var PolicyOwnerEntityType = {
  GROUP: "GROUP",
  ROLE: "ROLE",
  USER: "USER"
};
var DeletionTaskStatusType = {
  FAILED: "FAILED",
  IN_PROGRESS: "IN_PROGRESS",
  NOT_STARTED: "NOT_STARTED",
  SUCCEEDED: "SUCCEEDED"
};
var EncodingType = {
  PEM: "PEM",
  SSH: "SSH"
};
var UnrecognizedPublicKeyEncodingException = class _UnrecognizedPublicKeyEncodingException extends IAMServiceException {
  static {
    __name(this, "UnrecognizedPublicKeyEncodingException");
  }
  name = "UnrecognizedPublicKeyEncodingException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "UnrecognizedPublicKeyEncodingException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _UnrecognizedPublicKeyEncodingException.prototype);
  }
};
var PolicyUsageType = {
  PermissionsBoundary: "PermissionsBoundary",
  PermissionsPolicy: "PermissionsPolicy"
};
var PolicyScopeType = {
  AWS: "AWS",
  All: "All",
  Local: "Local"
};
var PolicyType = {
  INLINE: "INLINE",
  MANAGED: "MANAGED"
};
var GlobalEndpointTokenVersion = {
  v1Token: "v1Token",
  v2Token: "v2Token"
};
var PolicyEvaluationException = class _PolicyEvaluationException extends IAMServiceException {
  static {
    __name(this, "PolicyEvaluationException");
  }
  name = "PolicyEvaluationException";
  $fault = "server";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "PolicyEvaluationException",
      $fault: "server",
      ...opts
    });
    Object.setPrototypeOf(this, _PolicyEvaluationException.prototype);
  }
};
var ContextKeyTypeEnum = {
  BINARY: "binary",
  BINARY_LIST: "binaryList",
  BOOLEAN: "boolean",
  BOOLEAN_LIST: "booleanList",
  DATE: "date",
  DATE_LIST: "dateList",
  IP: "ip",
  IP_LIST: "ipList",
  NUMERIC: "numeric",
  NUMERIC_LIST: "numericList",
  STRING: "string",
  STRING_LIST: "stringList"
};
var AccessKeyFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.SecretAccessKey && { SecretAccessKey: import_smithy_client.SENSITIVE_STRING }
}), "AccessKeyFilterSensitiveLog");
var ChangePasswordRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.OldPassword && { OldPassword: import_smithy_client.SENSITIVE_STRING },
  ...obj.NewPassword && { NewPassword: import_smithy_client.SENSITIVE_STRING }
}), "ChangePasswordRequestFilterSensitiveLog");
var CreateAccessKeyResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.AccessKey && { AccessKey: AccessKeyFilterSensitiveLog(obj.AccessKey) }
}), "CreateAccessKeyResponseFilterSensitiveLog");
var CreateLoginProfileRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Password && { Password: import_smithy_client.SENSITIVE_STRING }
}), "CreateLoginProfileRequestFilterSensitiveLog");
var CreateSAMLProviderRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.AddPrivateKey && { AddPrivateKey: import_smithy_client.SENSITIVE_STRING }
}), "CreateSAMLProviderRequestFilterSensitiveLog");
var ServiceSpecificCredentialFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.ServicePassword && { ServicePassword: import_smithy_client.SENSITIVE_STRING }
}), "ServiceSpecificCredentialFilterSensitiveLog");
var CreateServiceSpecificCredentialResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.ServiceSpecificCredential && {
    ServiceSpecificCredential: ServiceSpecificCredentialFilterSensitiveLog(obj.ServiceSpecificCredential)
  }
}), "CreateServiceSpecificCredentialResponseFilterSensitiveLog");
var VirtualMFADeviceFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Base32StringSeed && { Base32StringSeed: import_smithy_client.SENSITIVE_STRING },
  ...obj.QRCodePNG && { QRCodePNG: import_smithy_client.SENSITIVE_STRING }
}), "VirtualMFADeviceFilterSensitiveLog");
var CreateVirtualMFADeviceResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.VirtualMFADevice && { VirtualMFADevice: VirtualMFADeviceFilterSensitiveLog(obj.VirtualMFADevice) }
}), "CreateVirtualMFADeviceResponseFilterSensitiveLog");
var ListVirtualMFADevicesResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.VirtualMFADevices && {
    VirtualMFADevices: obj.VirtualMFADevices.map((item) => VirtualMFADeviceFilterSensitiveLog(item))
  }
}), "ListVirtualMFADevicesResponseFilterSensitiveLog");
var ResetServiceSpecificCredentialResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.ServiceSpecificCredential && {
    ServiceSpecificCredential: ServiceSpecificCredentialFilterSensitiveLog(obj.ServiceSpecificCredential)
  }
}), "ResetServiceSpecificCredentialResponseFilterSensitiveLog");

// src/models/models_1.ts

var PolicyEvaluationDecisionType = {
  ALLOWED: "allowed",
  EXPLICIT_DENY: "explicitDeny",
  IMPLICIT_DENY: "implicitDeny"
};
var PolicySourceType = {
  AWS_MANAGED: "aws-managed",
  GROUP: "group",
  NONE: "none",
  RESOURCE: "resource",
  ROLE: "role",
  USER: "user",
  USER_MANAGED: "user-managed"
};
var KeyPairMismatchException = class _KeyPairMismatchException extends IAMServiceException {
  static {
    __name(this, "KeyPairMismatchException");
  }
  name = "KeyPairMismatchException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "KeyPairMismatchException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _KeyPairMismatchException.prototype);
  }
};
var MalformedCertificateException = class _MalformedCertificateException extends IAMServiceException {
  static {
    __name(this, "MalformedCertificateException");
  }
  name = "MalformedCertificateException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "MalformedCertificateException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _MalformedCertificateException.prototype);
  }
};
var DuplicateCertificateException = class _DuplicateCertificateException extends IAMServiceException {
  static {
    __name(this, "DuplicateCertificateException");
  }
  name = "DuplicateCertificateException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "DuplicateCertificateException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _DuplicateCertificateException.prototype);
  }
};
var InvalidCertificateException = class _InvalidCertificateException extends IAMServiceException {
  static {
    __name(this, "InvalidCertificateException");
  }
  name = "InvalidCertificateException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidCertificateException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _InvalidCertificateException.prototype);
  }
};
var DuplicateSSHPublicKeyException = class _DuplicateSSHPublicKeyException extends IAMServiceException {
  static {
    __name(this, "DuplicateSSHPublicKeyException");
  }
  name = "DuplicateSSHPublicKeyException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "DuplicateSSHPublicKeyException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _DuplicateSSHPublicKeyException.prototype);
  }
};
var InvalidPublicKeyException = class _InvalidPublicKeyException extends IAMServiceException {
  static {
    __name(this, "InvalidPublicKeyException");
  }
  name = "InvalidPublicKeyException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidPublicKeyException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _InvalidPublicKeyException.prototype);
  }
};
var UpdateLoginProfileRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Password && { Password: import_smithy_client.SENSITIVE_STRING }
}), "UpdateLoginProfileRequestFilterSensitiveLog");
var UpdateSAMLProviderRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.AddPrivateKey && { AddPrivateKey: import_smithy_client.SENSITIVE_STRING }
}), "UpdateSAMLProviderRequestFilterSensitiveLog");
var UploadServerCertificateRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.PrivateKey && { PrivateKey: import_smithy_client.SENSITIVE_STRING }
}), "UploadServerCertificateRequestFilterSensitiveLog");

// src/protocols/Aws_query.ts
var se_AddClientIDToOpenIDConnectProviderCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_AddClientIDToOpenIDConnectProviderRequest(input, context),
    [_A]: _ACIDTOIDCP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_AddClientIDToOpenIDConnectProviderCommand");
var se_AddRoleToInstanceProfileCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_AddRoleToInstanceProfileRequest(input, context),
    [_A]: _ARTIP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_AddRoleToInstanceProfileCommand");
var se_AddUserToGroupCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_AddUserToGroupRequest(input, context),
    [_A]: _AUTG,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_AddUserToGroupCommand");
var se_AttachGroupPolicyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_AttachGroupPolicyRequest(input, context),
    [_A]: _AGP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_AttachGroupPolicyCommand");
var se_AttachRolePolicyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_AttachRolePolicyRequest(input, context),
    [_A]: _ARP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_AttachRolePolicyCommand");
var se_AttachUserPolicyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_AttachUserPolicyRequest(input, context),
    [_A]: _AUP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_AttachUserPolicyCommand");
var se_ChangePasswordCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ChangePasswordRequest(input, context),
    [_A]: _CP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ChangePasswordCommand");
var se_CreateAccessKeyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_CreateAccessKeyRequest(input, context),
    [_A]: _CAK,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateAccessKeyCommand");
var se_CreateAccountAliasCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_CreateAccountAliasRequest(input, context),
    [_A]: _CAA,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateAccountAliasCommand");
var se_CreateGroupCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_CreateGroupRequest(input, context),
    [_A]: _CG,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateGroupCommand");
var se_CreateInstanceProfileCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_CreateInstanceProfileRequest(input, context),
    [_A]: _CIP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateInstanceProfileCommand");
var se_CreateLoginProfileCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_CreateLoginProfileRequest(input, context),
    [_A]: _CLP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateLoginProfileCommand");
var se_CreateOpenIDConnectProviderCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_CreateOpenIDConnectProviderRequest(input, context),
    [_A]: _COIDCP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateOpenIDConnectProviderCommand");
var se_CreatePolicyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_CreatePolicyRequest(input, context),
    [_A]: _CPr,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreatePolicyCommand");
var se_CreatePolicyVersionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_CreatePolicyVersionRequest(input, context),
    [_A]: _CPV,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreatePolicyVersionCommand");
var se_CreateRoleCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_CreateRoleRequest(input, context),
    [_A]: _CR,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateRoleCommand");
var se_CreateSAMLProviderCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_CreateSAMLProviderRequest(input, context),
    [_A]: _CSAMLP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateSAMLProviderCommand");
var se_CreateServiceLinkedRoleCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_CreateServiceLinkedRoleRequest(input, context),
    [_A]: _CSLR,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateServiceLinkedRoleCommand");
var se_CreateServiceSpecificCredentialCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_CreateServiceSpecificCredentialRequest(input, context),
    [_A]: _CSSC,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateServiceSpecificCredentialCommand");
var se_CreateUserCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_CreateUserRequest(input, context),
    [_A]: _CU,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateUserCommand");
var se_CreateVirtualMFADeviceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_CreateVirtualMFADeviceRequest(input, context),
    [_A]: _CVMFAD,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateVirtualMFADeviceCommand");
var se_DeactivateMFADeviceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DeactivateMFADeviceRequest(input, context),
    [_A]: _DMFAD,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeactivateMFADeviceCommand");
var se_DeleteAccessKeyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DeleteAccessKeyRequest(input, context),
    [_A]: _DAK,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteAccessKeyCommand");
var se_DeleteAccountAliasCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DeleteAccountAliasRequest(input, context),
    [_A]: _DAA,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteAccountAliasCommand");
var se_DeleteAccountPasswordPolicyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  const body = buildFormUrlencodedString({
    [_A]: _DAPP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteAccountPasswordPolicyCommand");
var se_DeleteGroupCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DeleteGroupRequest(input, context),
    [_A]: _DG,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteGroupCommand");
var se_DeleteGroupPolicyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DeleteGroupPolicyRequest(input, context),
    [_A]: _DGP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteGroupPolicyCommand");
var se_DeleteInstanceProfileCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DeleteInstanceProfileRequest(input, context),
    [_A]: _DIP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteInstanceProfileCommand");
var se_DeleteLoginProfileCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DeleteLoginProfileRequest(input, context),
    [_A]: _DLP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteLoginProfileCommand");
var se_DeleteOpenIDConnectProviderCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DeleteOpenIDConnectProviderRequest(input, context),
    [_A]: _DOIDCP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteOpenIDConnectProviderCommand");
var se_DeletePolicyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DeletePolicyRequest(input, context),
    [_A]: _DP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeletePolicyCommand");
var se_DeletePolicyVersionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DeletePolicyVersionRequest(input, context),
    [_A]: _DPV,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeletePolicyVersionCommand");
var se_DeleteRoleCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DeleteRoleRequest(input, context),
    [_A]: _DR,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteRoleCommand");
var se_DeleteRolePermissionsBoundaryCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DeleteRolePermissionsBoundaryRequest(input, context),
    [_A]: _DRPB,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteRolePermissionsBoundaryCommand");
var se_DeleteRolePolicyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DeleteRolePolicyRequest(input, context),
    [_A]: _DRP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteRolePolicyCommand");
var se_DeleteSAMLProviderCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DeleteSAMLProviderRequest(input, context),
    [_A]: _DSAMLP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteSAMLProviderCommand");
var se_DeleteServerCertificateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DeleteServerCertificateRequest(input, context),
    [_A]: _DSC,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteServerCertificateCommand");
var se_DeleteServiceLinkedRoleCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DeleteServiceLinkedRoleRequest(input, context),
    [_A]: _DSLR,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteServiceLinkedRoleCommand");
var se_DeleteServiceSpecificCredentialCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DeleteServiceSpecificCredentialRequest(input, context),
    [_A]: _DSSC,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteServiceSpecificCredentialCommand");
var se_DeleteSigningCertificateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DeleteSigningCertificateRequest(input, context),
    [_A]: _DSCe,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteSigningCertificateCommand");
var se_DeleteSSHPublicKeyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DeleteSSHPublicKeyRequest(input, context),
    [_A]: _DSSHPK,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteSSHPublicKeyCommand");
var se_DeleteUserCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DeleteUserRequest(input, context),
    [_A]: _DU,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteUserCommand");
var se_DeleteUserPermissionsBoundaryCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DeleteUserPermissionsBoundaryRequest(input, context),
    [_A]: _DUPB,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteUserPermissionsBoundaryCommand");
var se_DeleteUserPolicyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DeleteUserPolicyRequest(input, context),
    [_A]: _DUP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteUserPolicyCommand");
var se_DeleteVirtualMFADeviceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DeleteVirtualMFADeviceRequest(input, context),
    [_A]: _DVMFAD,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteVirtualMFADeviceCommand");
var se_DetachGroupPolicyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DetachGroupPolicyRequest(input, context),
    [_A]: _DGPe,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DetachGroupPolicyCommand");
var se_DetachRolePolicyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DetachRolePolicyRequest(input, context),
    [_A]: _DRPe,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DetachRolePolicyCommand");
var se_DetachUserPolicyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DetachUserPolicyRequest(input, context),
    [_A]: _DUPe,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DetachUserPolicyCommand");
var se_DisableOrganizationsRootCredentialsManagementCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DisableOrganizationsRootCredentialsManagementRequest(input, context),
    [_A]: _DORCM,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DisableOrganizationsRootCredentialsManagementCommand");
var se_DisableOrganizationsRootSessionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_DisableOrganizationsRootSessionsRequest(input, context),
    [_A]: _DORS,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DisableOrganizationsRootSessionsCommand");
var se_EnableMFADeviceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_EnableMFADeviceRequest(input, context),
    [_A]: _EMFAD,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_EnableMFADeviceCommand");
var se_EnableOrganizationsRootCredentialsManagementCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_EnableOrganizationsRootCredentialsManagementRequest(input, context),
    [_A]: _EORCM,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_EnableOrganizationsRootCredentialsManagementCommand");
var se_EnableOrganizationsRootSessionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_EnableOrganizationsRootSessionsRequest(input, context),
    [_A]: _EORS,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_EnableOrganizationsRootSessionsCommand");
var se_GenerateCredentialReportCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  const body = buildFormUrlencodedString({
    [_A]: _GCR,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GenerateCredentialReportCommand");
var se_GenerateOrganizationsAccessReportCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_GenerateOrganizationsAccessReportRequest(input, context),
    [_A]: _GOAR,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GenerateOrganizationsAccessReportCommand");
var se_GenerateServiceLastAccessedDetailsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_GenerateServiceLastAccessedDetailsRequest(input, context),
    [_A]: _GSLAD,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GenerateServiceLastAccessedDetailsCommand");
var se_GetAccessKeyLastUsedCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_GetAccessKeyLastUsedRequest(input, context),
    [_A]: _GAKLU,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetAccessKeyLastUsedCommand");
var se_GetAccountAuthorizationDetailsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_GetAccountAuthorizationDetailsRequest(input, context),
    [_A]: _GAAD,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetAccountAuthorizationDetailsCommand");
var se_GetAccountPasswordPolicyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  const body = buildFormUrlencodedString({
    [_A]: _GAPP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetAccountPasswordPolicyCommand");
var se_GetAccountSummaryCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  const body = buildFormUrlencodedString({
    [_A]: _GAS,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetAccountSummaryCommand");
var se_GetContextKeysForCustomPolicyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_GetContextKeysForCustomPolicyRequest(input, context),
    [_A]: _GCKFCP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetContextKeysForCustomPolicyCommand");
var se_GetContextKeysForPrincipalPolicyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_GetContextKeysForPrincipalPolicyRequest(input, context),
    [_A]: _GCKFPP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetContextKeysForPrincipalPolicyCommand");
var se_GetCredentialReportCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  const body = buildFormUrlencodedString({
    [_A]: _GCRe,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetCredentialReportCommand");
var se_GetGroupCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_GetGroupRequest(input, context),
    [_A]: _GG,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetGroupCommand");
var se_GetGroupPolicyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_GetGroupPolicyRequest(input, context),
    [_A]: _GGP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetGroupPolicyCommand");
var se_GetInstanceProfileCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_GetInstanceProfileRequest(input, context),
    [_A]: _GIP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetInstanceProfileCommand");
var se_GetLoginProfileCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_GetLoginProfileRequest(input, context),
    [_A]: _GLP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetLoginProfileCommand");
var se_GetMFADeviceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_GetMFADeviceRequest(input, context),
    [_A]: _GMFAD,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetMFADeviceCommand");
var se_GetOpenIDConnectProviderCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_GetOpenIDConnectProviderRequest(input, context),
    [_A]: _GOIDCP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetOpenIDConnectProviderCommand");
var se_GetOrganizationsAccessReportCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_GetOrganizationsAccessReportRequest(input, context),
    [_A]: _GOARe,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetOrganizationsAccessReportCommand");
var se_GetPolicyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_GetPolicyRequest(input, context),
    [_A]: _GP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetPolicyCommand");
var se_GetPolicyVersionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_GetPolicyVersionRequest(input, context),
    [_A]: _GPV,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetPolicyVersionCommand");
var se_GetRoleCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_GetRoleRequest(input, context),
    [_A]: _GR,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetRoleCommand");
var se_GetRolePolicyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_GetRolePolicyRequest(input, context),
    [_A]: _GRP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetRolePolicyCommand");
var se_GetSAMLProviderCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_GetSAMLProviderRequest(input, context),
    [_A]: _GSAMLP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetSAMLProviderCommand");
var se_GetServerCertificateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_GetServerCertificateRequest(input, context),
    [_A]: _GSC,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetServerCertificateCommand");
var se_GetServiceLastAccessedDetailsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_GetServiceLastAccessedDetailsRequest(input, context),
    [_A]: _GSLADe,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetServiceLastAccessedDetailsCommand");
var se_GetServiceLastAccessedDetailsWithEntitiesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_GetServiceLastAccessedDetailsWithEntitiesRequest(input, context),
    [_A]: _GSLADWE,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetServiceLastAccessedDetailsWithEntitiesCommand");
var se_GetServiceLinkedRoleDeletionStatusCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_GetServiceLinkedRoleDeletionStatusRequest(input, context),
    [_A]: _GSLRDS,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetServiceLinkedRoleDeletionStatusCommand");
var se_GetSSHPublicKeyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_GetSSHPublicKeyRequest(input, context),
    [_A]: _GSSHPK,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetSSHPublicKeyCommand");
var se_GetUserCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_GetUserRequest(input, context),
    [_A]: _GU,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetUserCommand");
var se_GetUserPolicyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_GetUserPolicyRequest(input, context),
    [_A]: _GUP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetUserPolicyCommand");
var se_ListAccessKeysCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ListAccessKeysRequest(input, context),
    [_A]: _LAK,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListAccessKeysCommand");
var se_ListAccountAliasesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ListAccountAliasesRequest(input, context),
    [_A]: _LAA,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListAccountAliasesCommand");
var se_ListAttachedGroupPoliciesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ListAttachedGroupPoliciesRequest(input, context),
    [_A]: _LAGP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListAttachedGroupPoliciesCommand");
var se_ListAttachedRolePoliciesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ListAttachedRolePoliciesRequest(input, context),
    [_A]: _LARP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListAttachedRolePoliciesCommand");
var se_ListAttachedUserPoliciesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ListAttachedUserPoliciesRequest(input, context),
    [_A]: _LAUP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListAttachedUserPoliciesCommand");
var se_ListEntitiesForPolicyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ListEntitiesForPolicyRequest(input, context),
    [_A]: _LEFP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListEntitiesForPolicyCommand");
var se_ListGroupPoliciesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ListGroupPoliciesRequest(input, context),
    [_A]: _LGP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListGroupPoliciesCommand");
var se_ListGroupsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ListGroupsRequest(input, context),
    [_A]: _LG,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListGroupsCommand");
var se_ListGroupsForUserCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ListGroupsForUserRequest(input, context),
    [_A]: _LGFU,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListGroupsForUserCommand");
var se_ListInstanceProfilesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ListInstanceProfilesRequest(input, context),
    [_A]: _LIP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListInstanceProfilesCommand");
var se_ListInstanceProfilesForRoleCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ListInstanceProfilesForRoleRequest(input, context),
    [_A]: _LIPFR,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListInstanceProfilesForRoleCommand");
var se_ListInstanceProfileTagsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ListInstanceProfileTagsRequest(input, context),
    [_A]: _LIPT,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListInstanceProfileTagsCommand");
var se_ListMFADevicesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ListMFADevicesRequest(input, context),
    [_A]: _LMFAD,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListMFADevicesCommand");
var se_ListMFADeviceTagsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ListMFADeviceTagsRequest(input, context),
    [_A]: _LMFADT,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListMFADeviceTagsCommand");
var se_ListOpenIDConnectProvidersCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ListOpenIDConnectProvidersRequest(input, context),
    [_A]: _LOIDCP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListOpenIDConnectProvidersCommand");
var se_ListOpenIDConnectProviderTagsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ListOpenIDConnectProviderTagsRequest(input, context),
    [_A]: _LOIDCPT,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListOpenIDConnectProviderTagsCommand");
var se_ListOrganizationsFeaturesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ListOrganizationsFeaturesRequest(input, context),
    [_A]: _LOF,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListOrganizationsFeaturesCommand");
var se_ListPoliciesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ListPoliciesRequest(input, context),
    [_A]: _LP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListPoliciesCommand");
var se_ListPoliciesGrantingServiceAccessCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ListPoliciesGrantingServiceAccessRequest(input, context),
    [_A]: _LPGSA,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListPoliciesGrantingServiceAccessCommand");
var se_ListPolicyTagsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ListPolicyTagsRequest(input, context),
    [_A]: _LPT,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListPolicyTagsCommand");
var se_ListPolicyVersionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ListPolicyVersionsRequest(input, context),
    [_A]: _LPV,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListPolicyVersionsCommand");
var se_ListRolePoliciesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ListRolePoliciesRequest(input, context),
    [_A]: _LRP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListRolePoliciesCommand");
var se_ListRolesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ListRolesRequest(input, context),
    [_A]: _LR,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListRolesCommand");
var se_ListRoleTagsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ListRoleTagsRequest(input, context),
    [_A]: _LRT,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListRoleTagsCommand");
var se_ListSAMLProvidersCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ListSAMLProvidersRequest(input, context),
    [_A]: _LSAMLP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListSAMLProvidersCommand");
var se_ListSAMLProviderTagsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ListSAMLProviderTagsRequest(input, context),
    [_A]: _LSAMLPT,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListSAMLProviderTagsCommand");
var se_ListServerCertificatesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ListServerCertificatesRequest(input, context),
    [_A]: _LSC,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListServerCertificatesCommand");
var se_ListServerCertificateTagsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ListServerCertificateTagsRequest(input, context),
    [_A]: _LSCT,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListServerCertificateTagsCommand");
var se_ListServiceSpecificCredentialsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ListServiceSpecificCredentialsRequest(input, context),
    [_A]: _LSSC,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListServiceSpecificCredentialsCommand");
var se_ListSigningCertificatesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ListSigningCertificatesRequest(input, context),
    [_A]: _LSCi,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListSigningCertificatesCommand");
var se_ListSSHPublicKeysCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ListSSHPublicKeysRequest(input, context),
    [_A]: _LSSHPK,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListSSHPublicKeysCommand");
var se_ListUserPoliciesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ListUserPoliciesRequest(input, context),
    [_A]: _LUP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListUserPoliciesCommand");
var se_ListUsersCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ListUsersRequest(input, context),
    [_A]: _LU,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListUsersCommand");
var se_ListUserTagsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ListUserTagsRequest(input, context),
    [_A]: _LUT,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListUserTagsCommand");
var se_ListVirtualMFADevicesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ListVirtualMFADevicesRequest(input, context),
    [_A]: _LVMFAD,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListVirtualMFADevicesCommand");
var se_PutGroupPolicyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_PutGroupPolicyRequest(input, context),
    [_A]: _PGP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_PutGroupPolicyCommand");
var se_PutRolePermissionsBoundaryCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_PutRolePermissionsBoundaryRequest(input, context),
    [_A]: _PRPB,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_PutRolePermissionsBoundaryCommand");
var se_PutRolePolicyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_PutRolePolicyRequest(input, context),
    [_A]: _PRP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_PutRolePolicyCommand");
var se_PutUserPermissionsBoundaryCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_PutUserPermissionsBoundaryRequest(input, context),
    [_A]: _PUPB,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_PutUserPermissionsBoundaryCommand");
var se_PutUserPolicyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_PutUserPolicyRequest(input, context),
    [_A]: _PUP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_PutUserPolicyCommand");
var se_RemoveClientIDFromOpenIDConnectProviderCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_RemoveClientIDFromOpenIDConnectProviderRequest(input, context),
    [_A]: _RCIDFOIDCP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_RemoveClientIDFromOpenIDConnectProviderCommand");
var se_RemoveRoleFromInstanceProfileCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_RemoveRoleFromInstanceProfileRequest(input, context),
    [_A]: _RRFIP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_RemoveRoleFromInstanceProfileCommand");
var se_RemoveUserFromGroupCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_RemoveUserFromGroupRequest(input, context),
    [_A]: _RUFG,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_RemoveUserFromGroupCommand");
var se_ResetServiceSpecificCredentialCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ResetServiceSpecificCredentialRequest(input, context),
    [_A]: _RSSC,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ResetServiceSpecificCredentialCommand");
var se_ResyncMFADeviceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_ResyncMFADeviceRequest(input, context),
    [_A]: _RMFAD,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ResyncMFADeviceCommand");
var se_SetDefaultPolicyVersionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_SetDefaultPolicyVersionRequest(input, context),
    [_A]: _SDPV,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_SetDefaultPolicyVersionCommand");
var se_SetSecurityTokenServicePreferencesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_SetSecurityTokenServicePreferencesRequest(input, context),
    [_A]: _SSTSP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_SetSecurityTokenServicePreferencesCommand");
var se_SimulateCustomPolicyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_SimulateCustomPolicyRequest(input, context),
    [_A]: _SCP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_SimulateCustomPolicyCommand");
var se_SimulatePrincipalPolicyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_SimulatePrincipalPolicyRequest(input, context),
    [_A]: _SPP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_SimulatePrincipalPolicyCommand");
var se_TagInstanceProfileCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_TagInstanceProfileRequest(input, context),
    [_A]: _TIP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_TagInstanceProfileCommand");
var se_TagMFADeviceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_TagMFADeviceRequest(input, context),
    [_A]: _TMFAD,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_TagMFADeviceCommand");
var se_TagOpenIDConnectProviderCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_TagOpenIDConnectProviderRequest(input, context),
    [_A]: _TOIDCP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_TagOpenIDConnectProviderCommand");
var se_TagPolicyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_TagPolicyRequest(input, context),
    [_A]: _TP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_TagPolicyCommand");
var se_TagRoleCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_TagRoleRequest(input, context),
    [_A]: _TR,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_TagRoleCommand");
var se_TagSAMLProviderCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_TagSAMLProviderRequest(input, context),
    [_A]: _TSAMLP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_TagSAMLProviderCommand");
var se_TagServerCertificateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_TagServerCertificateRequest(input, context),
    [_A]: _TSC,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_TagServerCertificateCommand");
var se_TagUserCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_TagUserRequest(input, context),
    [_A]: _TU,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_TagUserCommand");
var se_UntagInstanceProfileCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_UntagInstanceProfileRequest(input, context),
    [_A]: _UIP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UntagInstanceProfileCommand");
var se_UntagMFADeviceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_UntagMFADeviceRequest(input, context),
    [_A]: _UMFAD,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UntagMFADeviceCommand");
var se_UntagOpenIDConnectProviderCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_UntagOpenIDConnectProviderRequest(input, context),
    [_A]: _UOIDCP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UntagOpenIDConnectProviderCommand");
var se_UntagPolicyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_UntagPolicyRequest(input, context),
    [_A]: _UP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UntagPolicyCommand");
var se_UntagRoleCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_UntagRoleRequest(input, context),
    [_A]: _UR,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UntagRoleCommand");
var se_UntagSAMLProviderCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_UntagSAMLProviderRequest(input, context),
    [_A]: _USAMLP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UntagSAMLProviderCommand");
var se_UntagServerCertificateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_UntagServerCertificateRequest(input, context),
    [_A]: _USC,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UntagServerCertificateCommand");
var se_UntagUserCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_UntagUserRequest(input, context),
    [_A]: _UU,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UntagUserCommand");
var se_UpdateAccessKeyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_UpdateAccessKeyRequest(input, context),
    [_A]: _UAK,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateAccessKeyCommand");
var se_UpdateAccountPasswordPolicyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_UpdateAccountPasswordPolicyRequest(input, context),
    [_A]: _UAPP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateAccountPasswordPolicyCommand");
var se_UpdateAssumeRolePolicyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_UpdateAssumeRolePolicyRequest(input, context),
    [_A]: _UARP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateAssumeRolePolicyCommand");
var se_UpdateGroupCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_UpdateGroupRequest(input, context),
    [_A]: _UG,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateGroupCommand");
var se_UpdateLoginProfileCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_UpdateLoginProfileRequest(input, context),
    [_A]: _ULP,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateLoginProfileCommand");
var se_UpdateOpenIDConnectProviderThumbprintCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_UpdateOpenIDConnectProviderThumbprintRequest(input, context),
    [_A]: _UOIDCPT,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateOpenIDConnectProviderThumbprintCommand");
var se_UpdateRoleCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_UpdateRoleRequest(input, context),
    [_A]: _URp,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateRoleCommand");
var se_UpdateRoleDescriptionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_UpdateRoleDescriptionRequest(input, context),
    [_A]: _URD,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateRoleDescriptionCommand");
var se_UpdateSAMLProviderCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_UpdateSAMLProviderRequest(input, context),
    [_A]: _USAMLPp,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateSAMLProviderCommand");
var se_UpdateServerCertificateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_UpdateServerCertificateRequest(input, context),
    [_A]: _USCp,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateServerCertificateCommand");
var se_UpdateServiceSpecificCredentialCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_UpdateServiceSpecificCredentialRequest(input, context),
    [_A]: _USSC,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateServiceSpecificCredentialCommand");
var se_UpdateSigningCertificateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_UpdateSigningCertificateRequest(input, context),
    [_A]: _USCpd,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateSigningCertificateCommand");
var se_UpdateSSHPublicKeyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_UpdateSSHPublicKeyRequest(input, context),
    [_A]: _USSHPK,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateSSHPublicKeyCommand");
var se_UpdateUserCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_UpdateUserRequest(input, context),
    [_A]: _UUp,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateUserCommand");
var se_UploadServerCertificateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_UploadServerCertificateRequest(input, context),
    [_A]: _USCpl,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UploadServerCertificateCommand");
var se_UploadSigningCertificateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_UploadSigningCertificateRequest(input, context),
    [_A]: _USCplo,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UploadSigningCertificateCommand");
var se_UploadSSHPublicKeyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = SHARED_HEADERS;
  let body;
  body = buildFormUrlencodedString({
    ...se_UploadSSHPublicKeyRequest(input, context),
    [_A]: _USSHPKp,
    [_V]: _
  });
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UploadSSHPublicKeyCommand");
var de_AddClientIDToOpenIDConnectProviderCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_AddClientIDToOpenIDConnectProviderCommand");
var de_AddRoleToInstanceProfileCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_AddRoleToInstanceProfileCommand");
var de_AddUserToGroupCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_AddUserToGroupCommand");
var de_AttachGroupPolicyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_AttachGroupPolicyCommand");
var de_AttachRolePolicyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_AttachRolePolicyCommand");
var de_AttachUserPolicyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_AttachUserPolicyCommand");
var de_ChangePasswordCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_ChangePasswordCommand");
var de_CreateAccessKeyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_CreateAccessKeyResponse(data.CreateAccessKeyResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateAccessKeyCommand");
var de_CreateAccountAliasCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_CreateAccountAliasCommand");
var de_CreateGroupCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_CreateGroupResponse(data.CreateGroupResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateGroupCommand");
var de_CreateInstanceProfileCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_CreateInstanceProfileResponse(data.CreateInstanceProfileResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateInstanceProfileCommand");
var de_CreateLoginProfileCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_CreateLoginProfileResponse(data.CreateLoginProfileResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateLoginProfileCommand");
var de_CreateOpenIDConnectProviderCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_CreateOpenIDConnectProviderResponse(data.CreateOpenIDConnectProviderResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateOpenIDConnectProviderCommand");
var de_CreatePolicyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_CreatePolicyResponse(data.CreatePolicyResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreatePolicyCommand");
var de_CreatePolicyVersionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_CreatePolicyVersionResponse(data.CreatePolicyVersionResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreatePolicyVersionCommand");
var de_CreateRoleCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_CreateRoleResponse(data.CreateRoleResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateRoleCommand");
var de_CreateSAMLProviderCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_CreateSAMLProviderResponse(data.CreateSAMLProviderResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateSAMLProviderCommand");
var de_CreateServiceLinkedRoleCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_CreateServiceLinkedRoleResponse(data.CreateServiceLinkedRoleResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateServiceLinkedRoleCommand");
var de_CreateServiceSpecificCredentialCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_CreateServiceSpecificCredentialResponse(data.CreateServiceSpecificCredentialResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateServiceSpecificCredentialCommand");
var de_CreateUserCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_CreateUserResponse(data.CreateUserResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateUserCommand");
var de_CreateVirtualMFADeviceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_CreateVirtualMFADeviceResponse(data.CreateVirtualMFADeviceResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateVirtualMFADeviceCommand");
var de_DeactivateMFADeviceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeactivateMFADeviceCommand");
var de_DeleteAccessKeyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteAccessKeyCommand");
var de_DeleteAccountAliasCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteAccountAliasCommand");
var de_DeleteAccountPasswordPolicyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteAccountPasswordPolicyCommand");
var de_DeleteGroupCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteGroupCommand");
var de_DeleteGroupPolicyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteGroupPolicyCommand");
var de_DeleteInstanceProfileCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteInstanceProfileCommand");
var de_DeleteLoginProfileCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteLoginProfileCommand");
var de_DeleteOpenIDConnectProviderCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteOpenIDConnectProviderCommand");
var de_DeletePolicyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeletePolicyCommand");
var de_DeletePolicyVersionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeletePolicyVersionCommand");
var de_DeleteRoleCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteRoleCommand");
var de_DeleteRolePermissionsBoundaryCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteRolePermissionsBoundaryCommand");
var de_DeleteRolePolicyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteRolePolicyCommand");
var de_DeleteSAMLProviderCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteSAMLProviderCommand");
var de_DeleteServerCertificateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteServerCertificateCommand");
var de_DeleteServiceLinkedRoleCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_DeleteServiceLinkedRoleResponse(data.DeleteServiceLinkedRoleResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteServiceLinkedRoleCommand");
var de_DeleteServiceSpecificCredentialCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteServiceSpecificCredentialCommand");
var de_DeleteSigningCertificateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteSigningCertificateCommand");
var de_DeleteSSHPublicKeyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteSSHPublicKeyCommand");
var de_DeleteUserCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteUserCommand");
var de_DeleteUserPermissionsBoundaryCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteUserPermissionsBoundaryCommand");
var de_DeleteUserPolicyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteUserPolicyCommand");
var de_DeleteVirtualMFADeviceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteVirtualMFADeviceCommand");
var de_DetachGroupPolicyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DetachGroupPolicyCommand");
var de_DetachRolePolicyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DetachRolePolicyCommand");
var de_DetachUserPolicyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DetachUserPolicyCommand");
var de_DisableOrganizationsRootCredentialsManagementCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_DisableOrganizationsRootCredentialsManagementResponse(
    data.DisableOrganizationsRootCredentialsManagementResult,
    context
  );
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DisableOrganizationsRootCredentialsManagementCommand");
var de_DisableOrganizationsRootSessionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_DisableOrganizationsRootSessionsResponse(data.DisableOrganizationsRootSessionsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DisableOrganizationsRootSessionsCommand");
var de_EnableMFADeviceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_EnableMFADeviceCommand");
var de_EnableOrganizationsRootCredentialsManagementCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_EnableOrganizationsRootCredentialsManagementResponse(
    data.EnableOrganizationsRootCredentialsManagementResult,
    context
  );
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_EnableOrganizationsRootCredentialsManagementCommand");
var de_EnableOrganizationsRootSessionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_EnableOrganizationsRootSessionsResponse(data.EnableOrganizationsRootSessionsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_EnableOrganizationsRootSessionsCommand");
var de_GenerateCredentialReportCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_GenerateCredentialReportResponse(data.GenerateCredentialReportResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GenerateCredentialReportCommand");
var de_GenerateOrganizationsAccessReportCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_GenerateOrganizationsAccessReportResponse(data.GenerateOrganizationsAccessReportResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GenerateOrganizationsAccessReportCommand");
var de_GenerateServiceLastAccessedDetailsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_GenerateServiceLastAccessedDetailsResponse(data.GenerateServiceLastAccessedDetailsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GenerateServiceLastAccessedDetailsCommand");
var de_GetAccessKeyLastUsedCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_GetAccessKeyLastUsedResponse(data.GetAccessKeyLastUsedResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetAccessKeyLastUsedCommand");
var de_GetAccountAuthorizationDetailsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_GetAccountAuthorizationDetailsResponse(data.GetAccountAuthorizationDetailsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetAccountAuthorizationDetailsCommand");
var de_GetAccountPasswordPolicyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_GetAccountPasswordPolicyResponse(data.GetAccountPasswordPolicyResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetAccountPasswordPolicyCommand");
var de_GetAccountSummaryCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_GetAccountSummaryResponse(data.GetAccountSummaryResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetAccountSummaryCommand");
var de_GetContextKeysForCustomPolicyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_GetContextKeysForPolicyResponse(data.GetContextKeysForCustomPolicyResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetContextKeysForCustomPolicyCommand");
var de_GetContextKeysForPrincipalPolicyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_GetContextKeysForPolicyResponse(data.GetContextKeysForPrincipalPolicyResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetContextKeysForPrincipalPolicyCommand");
var de_GetCredentialReportCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_GetCredentialReportResponse(data.GetCredentialReportResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetCredentialReportCommand");
var de_GetGroupCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_GetGroupResponse(data.GetGroupResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetGroupCommand");
var de_GetGroupPolicyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_GetGroupPolicyResponse(data.GetGroupPolicyResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetGroupPolicyCommand");
var de_GetInstanceProfileCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_GetInstanceProfileResponse(data.GetInstanceProfileResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetInstanceProfileCommand");
var de_GetLoginProfileCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_GetLoginProfileResponse(data.GetLoginProfileResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetLoginProfileCommand");
var de_GetMFADeviceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_GetMFADeviceResponse(data.GetMFADeviceResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetMFADeviceCommand");
var de_GetOpenIDConnectProviderCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_GetOpenIDConnectProviderResponse(data.GetOpenIDConnectProviderResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetOpenIDConnectProviderCommand");
var de_GetOrganizationsAccessReportCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_GetOrganizationsAccessReportResponse(data.GetOrganizationsAccessReportResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetOrganizationsAccessReportCommand");
var de_GetPolicyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_GetPolicyResponse(data.GetPolicyResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetPolicyCommand");
var de_GetPolicyVersionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_GetPolicyVersionResponse(data.GetPolicyVersionResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetPolicyVersionCommand");
var de_GetRoleCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_GetRoleResponse(data.GetRoleResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetRoleCommand");
var de_GetRolePolicyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_GetRolePolicyResponse(data.GetRolePolicyResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetRolePolicyCommand");
var de_GetSAMLProviderCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_GetSAMLProviderResponse(data.GetSAMLProviderResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetSAMLProviderCommand");
var de_GetServerCertificateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_GetServerCertificateResponse(data.GetServerCertificateResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetServerCertificateCommand");
var de_GetServiceLastAccessedDetailsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_GetServiceLastAccessedDetailsResponse(data.GetServiceLastAccessedDetailsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetServiceLastAccessedDetailsCommand");
var de_GetServiceLastAccessedDetailsWithEntitiesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_GetServiceLastAccessedDetailsWithEntitiesResponse(
    data.GetServiceLastAccessedDetailsWithEntitiesResult,
    context
  );
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetServiceLastAccessedDetailsWithEntitiesCommand");
var de_GetServiceLinkedRoleDeletionStatusCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_GetServiceLinkedRoleDeletionStatusResponse(data.GetServiceLinkedRoleDeletionStatusResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetServiceLinkedRoleDeletionStatusCommand");
var de_GetSSHPublicKeyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_GetSSHPublicKeyResponse(data.GetSSHPublicKeyResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetSSHPublicKeyCommand");
var de_GetUserCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_GetUserResponse(data.GetUserResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetUserCommand");
var de_GetUserPolicyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_GetUserPolicyResponse(data.GetUserPolicyResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetUserPolicyCommand");
var de_ListAccessKeysCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ListAccessKeysResponse(data.ListAccessKeysResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListAccessKeysCommand");
var de_ListAccountAliasesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ListAccountAliasesResponse(data.ListAccountAliasesResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListAccountAliasesCommand");
var de_ListAttachedGroupPoliciesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ListAttachedGroupPoliciesResponse(data.ListAttachedGroupPoliciesResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListAttachedGroupPoliciesCommand");
var de_ListAttachedRolePoliciesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ListAttachedRolePoliciesResponse(data.ListAttachedRolePoliciesResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListAttachedRolePoliciesCommand");
var de_ListAttachedUserPoliciesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ListAttachedUserPoliciesResponse(data.ListAttachedUserPoliciesResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListAttachedUserPoliciesCommand");
var de_ListEntitiesForPolicyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ListEntitiesForPolicyResponse(data.ListEntitiesForPolicyResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListEntitiesForPolicyCommand");
var de_ListGroupPoliciesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ListGroupPoliciesResponse(data.ListGroupPoliciesResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListGroupPoliciesCommand");
var de_ListGroupsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ListGroupsResponse(data.ListGroupsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListGroupsCommand");
var de_ListGroupsForUserCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ListGroupsForUserResponse(data.ListGroupsForUserResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListGroupsForUserCommand");
var de_ListInstanceProfilesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ListInstanceProfilesResponse(data.ListInstanceProfilesResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListInstanceProfilesCommand");
var de_ListInstanceProfilesForRoleCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ListInstanceProfilesForRoleResponse(data.ListInstanceProfilesForRoleResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListInstanceProfilesForRoleCommand");
var de_ListInstanceProfileTagsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ListInstanceProfileTagsResponse(data.ListInstanceProfileTagsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListInstanceProfileTagsCommand");
var de_ListMFADevicesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ListMFADevicesResponse(data.ListMFADevicesResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListMFADevicesCommand");
var de_ListMFADeviceTagsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ListMFADeviceTagsResponse(data.ListMFADeviceTagsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListMFADeviceTagsCommand");
var de_ListOpenIDConnectProvidersCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ListOpenIDConnectProvidersResponse(data.ListOpenIDConnectProvidersResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListOpenIDConnectProvidersCommand");
var de_ListOpenIDConnectProviderTagsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ListOpenIDConnectProviderTagsResponse(data.ListOpenIDConnectProviderTagsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListOpenIDConnectProviderTagsCommand");
var de_ListOrganizationsFeaturesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ListOrganizationsFeaturesResponse(data.ListOrganizationsFeaturesResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListOrganizationsFeaturesCommand");
var de_ListPoliciesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ListPoliciesResponse(data.ListPoliciesResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListPoliciesCommand");
var de_ListPoliciesGrantingServiceAccessCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ListPoliciesGrantingServiceAccessResponse(data.ListPoliciesGrantingServiceAccessResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListPoliciesGrantingServiceAccessCommand");
var de_ListPolicyTagsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ListPolicyTagsResponse(data.ListPolicyTagsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListPolicyTagsCommand");
var de_ListPolicyVersionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ListPolicyVersionsResponse(data.ListPolicyVersionsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListPolicyVersionsCommand");
var de_ListRolePoliciesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ListRolePoliciesResponse(data.ListRolePoliciesResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListRolePoliciesCommand");
var de_ListRolesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ListRolesResponse(data.ListRolesResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListRolesCommand");
var de_ListRoleTagsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ListRoleTagsResponse(data.ListRoleTagsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListRoleTagsCommand");
var de_ListSAMLProvidersCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ListSAMLProvidersResponse(data.ListSAMLProvidersResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListSAMLProvidersCommand");
var de_ListSAMLProviderTagsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ListSAMLProviderTagsResponse(data.ListSAMLProviderTagsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListSAMLProviderTagsCommand");
var de_ListServerCertificatesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ListServerCertificatesResponse(data.ListServerCertificatesResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListServerCertificatesCommand");
var de_ListServerCertificateTagsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ListServerCertificateTagsResponse(data.ListServerCertificateTagsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListServerCertificateTagsCommand");
var de_ListServiceSpecificCredentialsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ListServiceSpecificCredentialsResponse(data.ListServiceSpecificCredentialsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListServiceSpecificCredentialsCommand");
var de_ListSigningCertificatesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ListSigningCertificatesResponse(data.ListSigningCertificatesResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListSigningCertificatesCommand");
var de_ListSSHPublicKeysCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ListSSHPublicKeysResponse(data.ListSSHPublicKeysResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListSSHPublicKeysCommand");
var de_ListUserPoliciesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ListUserPoliciesResponse(data.ListUserPoliciesResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListUserPoliciesCommand");
var de_ListUsersCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ListUsersResponse(data.ListUsersResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListUsersCommand");
var de_ListUserTagsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ListUserTagsResponse(data.ListUserTagsResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListUserTagsCommand");
var de_ListVirtualMFADevicesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ListVirtualMFADevicesResponse(data.ListVirtualMFADevicesResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListVirtualMFADevicesCommand");
var de_PutGroupPolicyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_PutGroupPolicyCommand");
var de_PutRolePermissionsBoundaryCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_PutRolePermissionsBoundaryCommand");
var de_PutRolePolicyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_PutRolePolicyCommand");
var de_PutUserPermissionsBoundaryCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_PutUserPermissionsBoundaryCommand");
var de_PutUserPolicyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_PutUserPolicyCommand");
var de_RemoveClientIDFromOpenIDConnectProviderCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_RemoveClientIDFromOpenIDConnectProviderCommand");
var de_RemoveRoleFromInstanceProfileCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_RemoveRoleFromInstanceProfileCommand");
var de_RemoveUserFromGroupCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_RemoveUserFromGroupCommand");
var de_ResetServiceSpecificCredentialCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_ResetServiceSpecificCredentialResponse(data.ResetServiceSpecificCredentialResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ResetServiceSpecificCredentialCommand");
var de_ResyncMFADeviceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_ResyncMFADeviceCommand");
var de_SetDefaultPolicyVersionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_SetDefaultPolicyVersionCommand");
var de_SetSecurityTokenServicePreferencesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_SetSecurityTokenServicePreferencesCommand");
var de_SimulateCustomPolicyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_SimulatePolicyResponse(data.SimulateCustomPolicyResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_SimulateCustomPolicyCommand");
var de_SimulatePrincipalPolicyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_SimulatePolicyResponse(data.SimulatePrincipalPolicyResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_SimulatePrincipalPolicyCommand");
var de_TagInstanceProfileCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_TagInstanceProfileCommand");
var de_TagMFADeviceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_TagMFADeviceCommand");
var de_TagOpenIDConnectProviderCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_TagOpenIDConnectProviderCommand");
var de_TagPolicyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_TagPolicyCommand");
var de_TagRoleCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_TagRoleCommand");
var de_TagSAMLProviderCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_TagSAMLProviderCommand");
var de_TagServerCertificateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_TagServerCertificateCommand");
var de_TagUserCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_TagUserCommand");
var de_UntagInstanceProfileCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_UntagInstanceProfileCommand");
var de_UntagMFADeviceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_UntagMFADeviceCommand");
var de_UntagOpenIDConnectProviderCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_UntagOpenIDConnectProviderCommand");
var de_UntagPolicyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_UntagPolicyCommand");
var de_UntagRoleCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_UntagRoleCommand");
var de_UntagSAMLProviderCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_UntagSAMLProviderCommand");
var de_UntagServerCertificateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_UntagServerCertificateCommand");
var de_UntagUserCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_UntagUserCommand");
var de_UpdateAccessKeyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_UpdateAccessKeyCommand");
var de_UpdateAccountPasswordPolicyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_UpdateAccountPasswordPolicyCommand");
var de_UpdateAssumeRolePolicyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_UpdateAssumeRolePolicyCommand");
var de_UpdateGroupCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_UpdateGroupCommand");
var de_UpdateLoginProfileCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_UpdateLoginProfileCommand");
var de_UpdateOpenIDConnectProviderThumbprintCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_UpdateOpenIDConnectProviderThumbprintCommand");
var de_UpdateRoleCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_UpdateRoleResponse(data.UpdateRoleResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateRoleCommand");
var de_UpdateRoleDescriptionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_UpdateRoleDescriptionResponse(data.UpdateRoleDescriptionResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateRoleDescriptionCommand");
var de_UpdateSAMLProviderCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_UpdateSAMLProviderResponse(data.UpdateSAMLProviderResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateSAMLProviderCommand");
var de_UpdateServerCertificateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_UpdateServerCertificateCommand");
var de_UpdateServiceSpecificCredentialCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_UpdateServiceSpecificCredentialCommand");
var de_UpdateSigningCertificateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_UpdateSigningCertificateCommand");
var de_UpdateSSHPublicKeyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_UpdateSSHPublicKeyCommand");
var de_UpdateUserCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_UpdateUserCommand");
var de_UploadServerCertificateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_UploadServerCertificateResponse(data.UploadServerCertificateResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UploadServerCertificateCommand");
var de_UploadSigningCertificateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_UploadSigningCertificateResponse(data.UploadSigningCertificateResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UploadSigningCertificateCommand");
var de_UploadSSHPublicKeyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseXmlBody)(output.body, context);
  let contents = {};
  contents = de_UploadSSHPublicKeyResponse(data.UploadSSHPublicKeyResult, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UploadSSHPublicKeyCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await (0, import_core2.parseXmlErrorBody)(output.body, context)
  };
  const errorCode = loadQueryErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InvalidInput":
    case "com.amazonaws.iam#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "LimitExceeded":
    case "com.amazonaws.iam#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    case "NoSuchEntity":
    case "com.amazonaws.iam#NoSuchEntityException":
      throw await de_NoSuchEntityExceptionRes(parsedOutput, context);
    case "ServiceFailure":
    case "com.amazonaws.iam#ServiceFailureException":
      throw await de_ServiceFailureExceptionRes(parsedOutput, context);
    case "EntityAlreadyExists":
    case "com.amazonaws.iam#EntityAlreadyExistsException":
      throw await de_EntityAlreadyExistsExceptionRes(parsedOutput, context);
    case "UnmodifiableEntity":
    case "com.amazonaws.iam#UnmodifiableEntityException":
      throw await de_UnmodifiableEntityExceptionRes(parsedOutput, context);
    case "PolicyNotAttachable":
    case "com.amazonaws.iam#PolicyNotAttachableException":
      throw await de_PolicyNotAttachableExceptionRes(parsedOutput, context);
    case "EntityTemporarilyUnmodifiable":
    case "com.amazonaws.iam#EntityTemporarilyUnmodifiableException":
      throw await de_EntityTemporarilyUnmodifiableExceptionRes(parsedOutput, context);
    case "InvalidUserType":
    case "com.amazonaws.iam#InvalidUserTypeException":
      throw await de_InvalidUserTypeExceptionRes(parsedOutput, context);
    case "PasswordPolicyViolation":
    case "com.amazonaws.iam#PasswordPolicyViolationException":
      throw await de_PasswordPolicyViolationExceptionRes(parsedOutput, context);
    case "ConcurrentModification":
    case "com.amazonaws.iam#ConcurrentModificationException":
      throw await de_ConcurrentModificationExceptionRes(parsedOutput, context);
    case "OpenIdIdpCommunicationError":
    case "com.amazonaws.iam#OpenIdIdpCommunicationErrorException":
      throw await de_OpenIdIdpCommunicationErrorExceptionRes(parsedOutput, context);
    case "MalformedPolicyDocument":
    case "com.amazonaws.iam#MalformedPolicyDocumentException":
      throw await de_MalformedPolicyDocumentExceptionRes(parsedOutput, context);
    case "NotSupportedService":
    case "com.amazonaws.iam#ServiceNotSupportedException":
      throw await de_ServiceNotSupportedExceptionRes(parsedOutput, context);
    case "DeleteConflict":
    case "com.amazonaws.iam#DeleteConflictException":
      throw await de_DeleteConflictExceptionRes(parsedOutput, context);
    case "AccountNotManagementOrDelegatedAdministratorException":
    case "com.amazonaws.iam#AccountNotManagementOrDelegatedAdministratorException":
      throw await de_AccountNotManagementOrDelegatedAdministratorExceptionRes(parsedOutput, context);
    case "OrganizationNotFoundException":
    case "com.amazonaws.iam#OrganizationNotFoundException":
      throw await de_OrganizationNotFoundExceptionRes(parsedOutput, context);
    case "OrganizationNotInAllFeaturesModeException":
    case "com.amazonaws.iam#OrganizationNotInAllFeaturesModeException":
      throw await de_OrganizationNotInAllFeaturesModeExceptionRes(parsedOutput, context);
    case "ServiceAccessNotEnabledException":
    case "com.amazonaws.iam#ServiceAccessNotEnabledException":
      throw await de_ServiceAccessNotEnabledExceptionRes(parsedOutput, context);
    case "InvalidAuthenticationCode":
    case "com.amazonaws.iam#InvalidAuthenticationCodeException":
      throw await de_InvalidAuthenticationCodeExceptionRes(parsedOutput, context);
    case "CallerIsNotManagementAccountException":
    case "com.amazonaws.iam#CallerIsNotManagementAccountException":
      throw await de_CallerIsNotManagementAccountExceptionRes(parsedOutput, context);
    case "ReportGenerationLimitExceeded":
    case "com.amazonaws.iam#ReportGenerationLimitExceededException":
      throw await de_ReportGenerationLimitExceededExceptionRes(parsedOutput, context);
    case "ReportExpired":
    case "com.amazonaws.iam#CredentialReportExpiredException":
      throw await de_CredentialReportExpiredExceptionRes(parsedOutput, context);
    case "ReportInProgress":
    case "com.amazonaws.iam#CredentialReportNotReadyException":
      throw await de_CredentialReportNotReadyExceptionRes(parsedOutput, context);
    case "ReportNotPresent":
    case "com.amazonaws.iam#CredentialReportNotPresentException":
      throw await de_CredentialReportNotPresentExceptionRes(parsedOutput, context);
    case "UnrecognizedPublicKeyEncoding":
    case "com.amazonaws.iam#UnrecognizedPublicKeyEncodingException":
      throw await de_UnrecognizedPublicKeyEncodingExceptionRes(parsedOutput, context);
    case "PolicyEvaluation":
    case "com.amazonaws.iam#PolicyEvaluationException":
      throw await de_PolicyEvaluationExceptionRes(parsedOutput, context);
    case "KeyPairMismatch":
    case "com.amazonaws.iam#KeyPairMismatchException":
      throw await de_KeyPairMismatchExceptionRes(parsedOutput, context);
    case "MalformedCertificate":
    case "com.amazonaws.iam#MalformedCertificateException":
      throw await de_MalformedCertificateExceptionRes(parsedOutput, context);
    case "DuplicateCertificate":
    case "com.amazonaws.iam#DuplicateCertificateException":
      throw await de_DuplicateCertificateExceptionRes(parsedOutput, context);
    case "InvalidCertificate":
    case "com.amazonaws.iam#InvalidCertificateException":
      throw await de_InvalidCertificateExceptionRes(parsedOutput, context);
    case "DuplicateSSHPublicKey":
    case "com.amazonaws.iam#DuplicateSSHPublicKeyException":
      throw await de_DuplicateSSHPublicKeyExceptionRes(parsedOutput, context);
    case "InvalidPublicKey":
    case "com.amazonaws.iam#InvalidPublicKeyException":
      throw await de_InvalidPublicKeyExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody: parsedBody.Error,
        errorCode
      });
  }
}, "de_CommandError");
var de_AccountNotManagementOrDelegatedAdministratorExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_AccountNotManagementOrDelegatedAdministratorException(body.Error, context);
  const exception = new AccountNotManagementOrDelegatedAdministratorException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_AccountNotManagementOrDelegatedAdministratorExceptionRes");
var de_CallerIsNotManagementAccountExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_CallerIsNotManagementAccountException(body.Error, context);
  const exception = new CallerIsNotManagementAccountException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_CallerIsNotManagementAccountExceptionRes");
var de_ConcurrentModificationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_ConcurrentModificationException(body.Error, context);
  const exception = new ConcurrentModificationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ConcurrentModificationExceptionRes");
var de_CredentialReportExpiredExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_CredentialReportExpiredException(body.Error, context);
  const exception = new CredentialReportExpiredException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_CredentialReportExpiredExceptionRes");
var de_CredentialReportNotPresentExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_CredentialReportNotPresentException(body.Error, context);
  const exception = new CredentialReportNotPresentException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_CredentialReportNotPresentExceptionRes");
var de_CredentialReportNotReadyExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_CredentialReportNotReadyException(body.Error, context);
  const exception = new CredentialReportNotReadyException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_CredentialReportNotReadyExceptionRes");
var de_DeleteConflictExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_DeleteConflictException(body.Error, context);
  const exception = new DeleteConflictException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_DeleteConflictExceptionRes");
var de_DuplicateCertificateExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_DuplicateCertificateException(body.Error, context);
  const exception = new DuplicateCertificateException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_DuplicateCertificateExceptionRes");
var de_DuplicateSSHPublicKeyExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_DuplicateSSHPublicKeyException(body.Error, context);
  const exception = new DuplicateSSHPublicKeyException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_DuplicateSSHPublicKeyExceptionRes");
var de_EntityAlreadyExistsExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_EntityAlreadyExistsException(body.Error, context);
  const exception = new EntityAlreadyExistsException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_EntityAlreadyExistsExceptionRes");
var de_EntityTemporarilyUnmodifiableExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_EntityTemporarilyUnmodifiableException(body.Error, context);
  const exception = new EntityTemporarilyUnmodifiableException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_EntityTemporarilyUnmodifiableExceptionRes");
var de_InvalidAuthenticationCodeExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_InvalidAuthenticationCodeException(body.Error, context);
  const exception = new InvalidAuthenticationCodeException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidAuthenticationCodeExceptionRes");
var de_InvalidCertificateExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_InvalidCertificateException(body.Error, context);
  const exception = new InvalidCertificateException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidCertificateExceptionRes");
var de_InvalidInputExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_InvalidInputException(body.Error, context);
  const exception = new InvalidInputException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidInputExceptionRes");
var de_InvalidPublicKeyExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_InvalidPublicKeyException(body.Error, context);
  const exception = new InvalidPublicKeyException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidPublicKeyExceptionRes");
var de_InvalidUserTypeExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_InvalidUserTypeException(body.Error, context);
  const exception = new InvalidUserTypeException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidUserTypeExceptionRes");
var de_KeyPairMismatchExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_KeyPairMismatchException(body.Error, context);
  const exception = new KeyPairMismatchException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_KeyPairMismatchExceptionRes");
var de_LimitExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_LimitExceededException(body.Error, context);
  const exception = new LimitExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_LimitExceededExceptionRes");
var de_MalformedCertificateExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_MalformedCertificateException(body.Error, context);
  const exception = new MalformedCertificateException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_MalformedCertificateExceptionRes");
var de_MalformedPolicyDocumentExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_MalformedPolicyDocumentException(body.Error, context);
  const exception = new MalformedPolicyDocumentException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_MalformedPolicyDocumentExceptionRes");
var de_NoSuchEntityExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_NoSuchEntityException(body.Error, context);
  const exception = new NoSuchEntityException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_NoSuchEntityExceptionRes");
var de_OpenIdIdpCommunicationErrorExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_OpenIdIdpCommunicationErrorException(body.Error, context);
  const exception = new OpenIdIdpCommunicationErrorException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_OpenIdIdpCommunicationErrorExceptionRes");
var de_OrganizationNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_OrganizationNotFoundException(body.Error, context);
  const exception = new OrganizationNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_OrganizationNotFoundExceptionRes");
var de_OrganizationNotInAllFeaturesModeExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_OrganizationNotInAllFeaturesModeException(body.Error, context);
  const exception = new OrganizationNotInAllFeaturesModeException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_OrganizationNotInAllFeaturesModeExceptionRes");
var de_PasswordPolicyViolationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_PasswordPolicyViolationException(body.Error, context);
  const exception = new PasswordPolicyViolationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_PasswordPolicyViolationExceptionRes");
var de_PolicyEvaluationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_PolicyEvaluationException(body.Error, context);
  const exception = new PolicyEvaluationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_PolicyEvaluationExceptionRes");
var de_PolicyNotAttachableExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_PolicyNotAttachableException(body.Error, context);
  const exception = new PolicyNotAttachableException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_PolicyNotAttachableExceptionRes");
var de_ReportGenerationLimitExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_ReportGenerationLimitExceededException(body.Error, context);
  const exception = new ReportGenerationLimitExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ReportGenerationLimitExceededExceptionRes");
var de_ServiceAccessNotEnabledExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_ServiceAccessNotEnabledException(body.Error, context);
  const exception = new ServiceAccessNotEnabledException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ServiceAccessNotEnabledExceptionRes");
var de_ServiceFailureExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_ServiceFailureException(body.Error, context);
  const exception = new ServiceFailureException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ServiceFailureExceptionRes");
var de_ServiceNotSupportedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_ServiceNotSupportedException(body.Error, context);
  const exception = new ServiceNotSupportedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ServiceNotSupportedExceptionRes");
var de_UnmodifiableEntityExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_UnmodifiableEntityException(body.Error, context);
  const exception = new UnmodifiableEntityException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_UnmodifiableEntityExceptionRes");
var de_UnrecognizedPublicKeyEncodingExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = de_UnrecognizedPublicKeyEncodingException(body.Error, context);
  const exception = new UnrecognizedPublicKeyEncodingException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_UnrecognizedPublicKeyEncodingExceptionRes");
var se_ActionNameListType = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    entries[`member.${counter}`] = entry;
    counter++;
  }
  return entries;
}, "se_ActionNameListType");
var se_AddClientIDToOpenIDConnectProviderRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_OIDCPA] != null) {
    entries[_OIDCPA] = input[_OIDCPA];
  }
  if (input[_CID] != null) {
    entries[_CID] = input[_CID];
  }
  return entries;
}, "se_AddClientIDToOpenIDConnectProviderRequest");
var se_AddRoleToInstanceProfileRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_IPN] != null) {
    entries[_IPN] = input[_IPN];
  }
  if (input[_RN] != null) {
    entries[_RN] = input[_RN];
  }
  return entries;
}, "se_AddRoleToInstanceProfileRequest");
var se_AddUserToGroupRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_GN] != null) {
    entries[_GN] = input[_GN];
  }
  if (input[_UN] != null) {
    entries[_UN] = input[_UN];
  }
  return entries;
}, "se_AddUserToGroupRequest");
var se_AttachGroupPolicyRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_GN] != null) {
    entries[_GN] = input[_GN];
  }
  if (input[_PA] != null) {
    entries[_PA] = input[_PA];
  }
  return entries;
}, "se_AttachGroupPolicyRequest");
var se_AttachRolePolicyRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_RN] != null) {
    entries[_RN] = input[_RN];
  }
  if (input[_PA] != null) {
    entries[_PA] = input[_PA];
  }
  return entries;
}, "se_AttachRolePolicyRequest");
var se_AttachUserPolicyRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_UN] != null) {
    entries[_UN] = input[_UN];
  }
  if (input[_PA] != null) {
    entries[_PA] = input[_PA];
  }
  return entries;
}, "se_AttachUserPolicyRequest");
var se_ChangePasswordRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_OP] != null) {
    entries[_OP] = input[_OP];
  }
  if (input[_NP] != null) {
    entries[_NP] = input[_NP];
  }
  return entries;
}, "se_ChangePasswordRequest");
var se_clientIDListType = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    entries[`member.${counter}`] = entry;
    counter++;
  }
  return entries;
}, "se_clientIDListType");
var se_ContextEntry = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_CKN] != null) {
    entries[_CKN] = input[_CKN];
  }
  if (input[_CKV] != null) {
    const memberEntries = se_ContextKeyValueListType(input[_CKV], context);
    if (input[_CKV]?.length === 0) {
      entries.ContextKeyValues = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `ContextKeyValues.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_CKT] != null) {
    entries[_CKT] = input[_CKT];
  }
  return entries;
}, "se_ContextEntry");
var se_ContextEntryListType = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    const memberEntries = se_ContextEntry(entry, context);
    Object.entries(memberEntries).forEach(([key, value]) => {
      entries[`member.${counter}.${key}`] = value;
    });
    counter++;
  }
  return entries;
}, "se_ContextEntryListType");
var se_ContextKeyValueListType = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    entries[`member.${counter}`] = entry;
    counter++;
  }
  return entries;
}, "se_ContextKeyValueListType");
var se_CreateAccessKeyRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_UN] != null) {
    entries[_UN] = input[_UN];
  }
  return entries;
}, "se_CreateAccessKeyRequest");
var se_CreateAccountAliasRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_AA] != null) {
    entries[_AA] = input[_AA];
  }
  return entries;
}, "se_CreateAccountAliasRequest");
var se_CreateGroupRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_P] != null) {
    entries[_P] = input[_P];
  }
  if (input[_GN] != null) {
    entries[_GN] = input[_GN];
  }
  return entries;
}, "se_CreateGroupRequest");
var se_CreateInstanceProfileRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_IPN] != null) {
    entries[_IPN] = input[_IPN];
  }
  if (input[_P] != null) {
    entries[_P] = input[_P];
  }
  if (input[_T] != null) {
    const memberEntries = se_tagListType(input[_T], context);
    if (input[_T]?.length === 0) {
      entries.Tags = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `Tags.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_CreateInstanceProfileRequest");
var se_CreateLoginProfileRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_UN] != null) {
    entries[_UN] = input[_UN];
  }
  if (input[_Pa] != null) {
    entries[_Pa] = input[_Pa];
  }
  if (input[_PRR] != null) {
    entries[_PRR] = input[_PRR];
  }
  return entries;
}, "se_CreateLoginProfileRequest");
var se_CreateOpenIDConnectProviderRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_U] != null) {
    entries[_U] = input[_U];
  }
  if (input[_CIDL] != null) {
    const memberEntries = se_clientIDListType(input[_CIDL], context);
    if (input[_CIDL]?.length === 0) {
      entries.ClientIDList = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `ClientIDList.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_TL] != null) {
    const memberEntries = se_thumbprintListType(input[_TL], context);
    if (input[_TL]?.length === 0) {
      entries.ThumbprintList = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `ThumbprintList.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_T] != null) {
    const memberEntries = se_tagListType(input[_T], context);
    if (input[_T]?.length === 0) {
      entries.Tags = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `Tags.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_CreateOpenIDConnectProviderRequest");
var se_CreatePolicyRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_PN] != null) {
    entries[_PN] = input[_PN];
  }
  if (input[_P] != null) {
    entries[_P] = input[_P];
  }
  if (input[_PD] != null) {
    entries[_PD] = input[_PD];
  }
  if (input[_D] != null) {
    entries[_D] = input[_D];
  }
  if (input[_T] != null) {
    const memberEntries = se_tagListType(input[_T], context);
    if (input[_T]?.length === 0) {
      entries.Tags = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `Tags.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_CreatePolicyRequest");
var se_CreatePolicyVersionRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_PA] != null) {
    entries[_PA] = input[_PA];
  }
  if (input[_PD] != null) {
    entries[_PD] = input[_PD];
  }
  if (input[_SAD] != null) {
    entries[_SAD] = input[_SAD];
  }
  return entries;
}, "se_CreatePolicyVersionRequest");
var se_CreateRoleRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_P] != null) {
    entries[_P] = input[_P];
  }
  if (input[_RN] != null) {
    entries[_RN] = input[_RN];
  }
  if (input[_ARPD] != null) {
    entries[_ARPD] = input[_ARPD];
  }
  if (input[_D] != null) {
    entries[_D] = input[_D];
  }
  if (input[_MSD] != null) {
    entries[_MSD] = input[_MSD];
  }
  if (input[_PB] != null) {
    entries[_PB] = input[_PB];
  }
  if (input[_T] != null) {
    const memberEntries = se_tagListType(input[_T], context);
    if (input[_T]?.length === 0) {
      entries.Tags = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `Tags.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_CreateRoleRequest");
var se_CreateSAMLProviderRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_SAMLMD] != null) {
    entries[_SAMLMD] = input[_SAMLMD];
  }
  if (input[_N] != null) {
    entries[_N] = input[_N];
  }
  if (input[_T] != null) {
    const memberEntries = se_tagListType(input[_T], context);
    if (input[_T]?.length === 0) {
      entries.Tags = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `Tags.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_AEM] != null) {
    entries[_AEM] = input[_AEM];
  }
  if (input[_APK] != null) {
    entries[_APK] = input[_APK];
  }
  return entries;
}, "se_CreateSAMLProviderRequest");
var se_CreateServiceLinkedRoleRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_AWSSN] != null) {
    entries[_AWSSN] = input[_AWSSN];
  }
  if (input[_D] != null) {
    entries[_D] = input[_D];
  }
  if (input[_CS] != null) {
    entries[_CS] = input[_CS];
  }
  return entries;
}, "se_CreateServiceLinkedRoleRequest");
var se_CreateServiceSpecificCredentialRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_UN] != null) {
    entries[_UN] = input[_UN];
  }
  if (input[_SN] != null) {
    entries[_SN] = input[_SN];
  }
  return entries;
}, "se_CreateServiceSpecificCredentialRequest");
var se_CreateUserRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_P] != null) {
    entries[_P] = input[_P];
  }
  if (input[_UN] != null) {
    entries[_UN] = input[_UN];
  }
  if (input[_PB] != null) {
    entries[_PB] = input[_PB];
  }
  if (input[_T] != null) {
    const memberEntries = se_tagListType(input[_T], context);
    if (input[_T]?.length === 0) {
      entries.Tags = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `Tags.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_CreateUserRequest");
var se_CreateVirtualMFADeviceRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_P] != null) {
    entries[_P] = input[_P];
  }
  if (input[_VMFADN] != null) {
    entries[_VMFADN] = input[_VMFADN];
  }
  if (input[_T] != null) {
    const memberEntries = se_tagListType(input[_T], context);
    if (input[_T]?.length === 0) {
      entries.Tags = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `Tags.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_CreateVirtualMFADeviceRequest");
var se_DeactivateMFADeviceRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_UN] != null) {
    entries[_UN] = input[_UN];
  }
  if (input[_SNe] != null) {
    entries[_SNe] = input[_SNe];
  }
  return entries;
}, "se_DeactivateMFADeviceRequest");
var se_DeleteAccessKeyRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_UN] != null) {
    entries[_UN] = input[_UN];
  }
  if (input[_AKI] != null) {
    entries[_AKI] = input[_AKI];
  }
  return entries;
}, "se_DeleteAccessKeyRequest");
var se_DeleteAccountAliasRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_AA] != null) {
    entries[_AA] = input[_AA];
  }
  return entries;
}, "se_DeleteAccountAliasRequest");
var se_DeleteGroupPolicyRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_GN] != null) {
    entries[_GN] = input[_GN];
  }
  if (input[_PN] != null) {
    entries[_PN] = input[_PN];
  }
  return entries;
}, "se_DeleteGroupPolicyRequest");
var se_DeleteGroupRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_GN] != null) {
    entries[_GN] = input[_GN];
  }
  return entries;
}, "se_DeleteGroupRequest");
var se_DeleteInstanceProfileRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_IPN] != null) {
    entries[_IPN] = input[_IPN];
  }
  return entries;
}, "se_DeleteInstanceProfileRequest");
var se_DeleteLoginProfileRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_UN] != null) {
    entries[_UN] = input[_UN];
  }
  return entries;
}, "se_DeleteLoginProfileRequest");
var se_DeleteOpenIDConnectProviderRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_OIDCPA] != null) {
    entries[_OIDCPA] = input[_OIDCPA];
  }
  return entries;
}, "se_DeleteOpenIDConnectProviderRequest");
var se_DeletePolicyRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_PA] != null) {
    entries[_PA] = input[_PA];
  }
  return entries;
}, "se_DeletePolicyRequest");
var se_DeletePolicyVersionRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_PA] != null) {
    entries[_PA] = input[_PA];
  }
  if (input[_VI] != null) {
    entries[_VI] = input[_VI];
  }
  return entries;
}, "se_DeletePolicyVersionRequest");
var se_DeleteRolePermissionsBoundaryRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_RN] != null) {
    entries[_RN] = input[_RN];
  }
  return entries;
}, "se_DeleteRolePermissionsBoundaryRequest");
var se_DeleteRolePolicyRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_RN] != null) {
    entries[_RN] = input[_RN];
  }
  if (input[_PN] != null) {
    entries[_PN] = input[_PN];
  }
  return entries;
}, "se_DeleteRolePolicyRequest");
var se_DeleteRoleRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_RN] != null) {
    entries[_RN] = input[_RN];
  }
  return entries;
}, "se_DeleteRoleRequest");
var se_DeleteSAMLProviderRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_SAMLPA] != null) {
    entries[_SAMLPA] = input[_SAMLPA];
  }
  return entries;
}, "se_DeleteSAMLProviderRequest");
var se_DeleteServerCertificateRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_SCN] != null) {
    entries[_SCN] = input[_SCN];
  }
  return entries;
}, "se_DeleteServerCertificateRequest");
var se_DeleteServiceLinkedRoleRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_RN] != null) {
    entries[_RN] = input[_RN];
  }
  return entries;
}, "se_DeleteServiceLinkedRoleRequest");
var se_DeleteServiceSpecificCredentialRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_UN] != null) {
    entries[_UN] = input[_UN];
  }
  if (input[_SSCI] != null) {
    entries[_SSCI] = input[_SSCI];
  }
  return entries;
}, "se_DeleteServiceSpecificCredentialRequest");
var se_DeleteSigningCertificateRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_UN] != null) {
    entries[_UN] = input[_UN];
  }
  if (input[_CI] != null) {
    entries[_CI] = input[_CI];
  }
  return entries;
}, "se_DeleteSigningCertificateRequest");
var se_DeleteSSHPublicKeyRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_UN] != null) {
    entries[_UN] = input[_UN];
  }
  if (input[_SSHPKI] != null) {
    entries[_SSHPKI] = input[_SSHPKI];
  }
  return entries;
}, "se_DeleteSSHPublicKeyRequest");
var se_DeleteUserPermissionsBoundaryRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_UN] != null) {
    entries[_UN] = input[_UN];
  }
  return entries;
}, "se_DeleteUserPermissionsBoundaryRequest");
var se_DeleteUserPolicyRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_UN] != null) {
    entries[_UN] = input[_UN];
  }
  if (input[_PN] != null) {
    entries[_PN] = input[_PN];
  }
  return entries;
}, "se_DeleteUserPolicyRequest");
var se_DeleteUserRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_UN] != null) {
    entries[_UN] = input[_UN];
  }
  return entries;
}, "se_DeleteUserRequest");
var se_DeleteVirtualMFADeviceRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_SNe] != null) {
    entries[_SNe] = input[_SNe];
  }
  return entries;
}, "se_DeleteVirtualMFADeviceRequest");
var se_DetachGroupPolicyRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_GN] != null) {
    entries[_GN] = input[_GN];
  }
  if (input[_PA] != null) {
    entries[_PA] = input[_PA];
  }
  return entries;
}, "se_DetachGroupPolicyRequest");
var se_DetachRolePolicyRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_RN] != null) {
    entries[_RN] = input[_RN];
  }
  if (input[_PA] != null) {
    entries[_PA] = input[_PA];
  }
  return entries;
}, "se_DetachRolePolicyRequest");
var se_DetachUserPolicyRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_UN] != null) {
    entries[_UN] = input[_UN];
  }
  if (input[_PA] != null) {
    entries[_PA] = input[_PA];
  }
  return entries;
}, "se_DetachUserPolicyRequest");
var se_DisableOrganizationsRootCredentialsManagementRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  return entries;
}, "se_DisableOrganizationsRootCredentialsManagementRequest");
var se_DisableOrganizationsRootSessionsRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  return entries;
}, "se_DisableOrganizationsRootSessionsRequest");
var se_EnableMFADeviceRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_UN] != null) {
    entries[_UN] = input[_UN];
  }
  if (input[_SNe] != null) {
    entries[_SNe] = input[_SNe];
  }
  if (input[_AC] != null) {
    entries[_AC] = input[_AC];
  }
  if (input[_ACu] != null) {
    entries[_ACu] = input[_ACu];
  }
  return entries;
}, "se_EnableMFADeviceRequest");
var se_EnableOrganizationsRootCredentialsManagementRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  return entries;
}, "se_EnableOrganizationsRootCredentialsManagementRequest");
var se_EnableOrganizationsRootSessionsRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  return entries;
}, "se_EnableOrganizationsRootSessionsRequest");
var se_entityListType = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    entries[`member.${counter}`] = entry;
    counter++;
  }
  return entries;
}, "se_entityListType");
var se_GenerateOrganizationsAccessReportRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_EP] != null) {
    entries[_EP] = input[_EP];
  }
  if (input[_OPI] != null) {
    entries[_OPI] = input[_OPI];
  }
  return entries;
}, "se_GenerateOrganizationsAccessReportRequest");
var se_GenerateServiceLastAccessedDetailsRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_Ar] != null) {
    entries[_Ar] = input[_Ar];
  }
  if (input[_G] != null) {
    entries[_G] = input[_G];
  }
  return entries;
}, "se_GenerateServiceLastAccessedDetailsRequest");
var se_GetAccessKeyLastUsedRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_AKI] != null) {
    entries[_AKI] = input[_AKI];
  }
  return entries;
}, "se_GetAccessKeyLastUsedRequest");
var se_GetAccountAuthorizationDetailsRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_F] != null) {
    const memberEntries = se_entityListType(input[_F], context);
    if (input[_F]?.length === 0) {
      entries.Filter = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `Filter.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_MI] != null) {
    entries[_MI] = input[_MI];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  return entries;
}, "se_GetAccountAuthorizationDetailsRequest");
var se_GetContextKeysForCustomPolicyRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_PIL] != null) {
    const memberEntries = se_SimulationPolicyListType(input[_PIL], context);
    if (input[_PIL]?.length === 0) {
      entries.PolicyInputList = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `PolicyInputList.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_GetContextKeysForCustomPolicyRequest");
var se_GetContextKeysForPrincipalPolicyRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_PSA] != null) {
    entries[_PSA] = input[_PSA];
  }
  if (input[_PIL] != null) {
    const memberEntries = se_SimulationPolicyListType(input[_PIL], context);
    if (input[_PIL]?.length === 0) {
      entries.PolicyInputList = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `PolicyInputList.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_GetContextKeysForPrincipalPolicyRequest");
var se_GetGroupPolicyRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_GN] != null) {
    entries[_GN] = input[_GN];
  }
  if (input[_PN] != null) {
    entries[_PN] = input[_PN];
  }
  return entries;
}, "se_GetGroupPolicyRequest");
var se_GetGroupRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_GN] != null) {
    entries[_GN] = input[_GN];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  if (input[_MI] != null) {
    entries[_MI] = input[_MI];
  }
  return entries;
}, "se_GetGroupRequest");
var se_GetInstanceProfileRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_IPN] != null) {
    entries[_IPN] = input[_IPN];
  }
  return entries;
}, "se_GetInstanceProfileRequest");
var se_GetLoginProfileRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_UN] != null) {
    entries[_UN] = input[_UN];
  }
  return entries;
}, "se_GetLoginProfileRequest");
var se_GetMFADeviceRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_SNe] != null) {
    entries[_SNe] = input[_SNe];
  }
  if (input[_UN] != null) {
    entries[_UN] = input[_UN];
  }
  return entries;
}, "se_GetMFADeviceRequest");
var se_GetOpenIDConnectProviderRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_OIDCPA] != null) {
    entries[_OIDCPA] = input[_OIDCPA];
  }
  return entries;
}, "se_GetOpenIDConnectProviderRequest");
var se_GetOrganizationsAccessReportRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_JI] != null) {
    entries[_JI] = input[_JI];
  }
  if (input[_MI] != null) {
    entries[_MI] = input[_MI];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  if (input[_SK] != null) {
    entries[_SK] = input[_SK];
  }
  return entries;
}, "se_GetOrganizationsAccessReportRequest");
var se_GetPolicyRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_PA] != null) {
    entries[_PA] = input[_PA];
  }
  return entries;
}, "se_GetPolicyRequest");
var se_GetPolicyVersionRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_PA] != null) {
    entries[_PA] = input[_PA];
  }
  if (input[_VI] != null) {
    entries[_VI] = input[_VI];
  }
  return entries;
}, "se_GetPolicyVersionRequest");
var se_GetRolePolicyRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_RN] != null) {
    entries[_RN] = input[_RN];
  }
  if (input[_PN] != null) {
    entries[_PN] = input[_PN];
  }
  return entries;
}, "se_GetRolePolicyRequest");
var se_GetRoleRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_RN] != null) {
    entries[_RN] = input[_RN];
  }
  return entries;
}, "se_GetRoleRequest");
var se_GetSAMLProviderRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_SAMLPA] != null) {
    entries[_SAMLPA] = input[_SAMLPA];
  }
  return entries;
}, "se_GetSAMLProviderRequest");
var se_GetServerCertificateRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_SCN] != null) {
    entries[_SCN] = input[_SCN];
  }
  return entries;
}, "se_GetServerCertificateRequest");
var se_GetServiceLastAccessedDetailsRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_JI] != null) {
    entries[_JI] = input[_JI];
  }
  if (input[_MI] != null) {
    entries[_MI] = input[_MI];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  return entries;
}, "se_GetServiceLastAccessedDetailsRequest");
var se_GetServiceLastAccessedDetailsWithEntitiesRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_JI] != null) {
    entries[_JI] = input[_JI];
  }
  if (input[_SNer] != null) {
    entries[_SNer] = input[_SNer];
  }
  if (input[_MI] != null) {
    entries[_MI] = input[_MI];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  return entries;
}, "se_GetServiceLastAccessedDetailsWithEntitiesRequest");
var se_GetServiceLinkedRoleDeletionStatusRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_DTI] != null) {
    entries[_DTI] = input[_DTI];
  }
  return entries;
}, "se_GetServiceLinkedRoleDeletionStatusRequest");
var se_GetSSHPublicKeyRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_UN] != null) {
    entries[_UN] = input[_UN];
  }
  if (input[_SSHPKI] != null) {
    entries[_SSHPKI] = input[_SSHPKI];
  }
  if (input[_E] != null) {
    entries[_E] = input[_E];
  }
  return entries;
}, "se_GetSSHPublicKeyRequest");
var se_GetUserPolicyRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_UN] != null) {
    entries[_UN] = input[_UN];
  }
  if (input[_PN] != null) {
    entries[_PN] = input[_PN];
  }
  return entries;
}, "se_GetUserPolicyRequest");
var se_GetUserRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_UN] != null) {
    entries[_UN] = input[_UN];
  }
  return entries;
}, "se_GetUserRequest");
var se_ListAccessKeysRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_UN] != null) {
    entries[_UN] = input[_UN];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  if (input[_MI] != null) {
    entries[_MI] = input[_MI];
  }
  return entries;
}, "se_ListAccessKeysRequest");
var se_ListAccountAliasesRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  if (input[_MI] != null) {
    entries[_MI] = input[_MI];
  }
  return entries;
}, "se_ListAccountAliasesRequest");
var se_ListAttachedGroupPoliciesRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_GN] != null) {
    entries[_GN] = input[_GN];
  }
  if (input[_PP] != null) {
    entries[_PP] = input[_PP];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  if (input[_MI] != null) {
    entries[_MI] = input[_MI];
  }
  return entries;
}, "se_ListAttachedGroupPoliciesRequest");
var se_ListAttachedRolePoliciesRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_RN] != null) {
    entries[_RN] = input[_RN];
  }
  if (input[_PP] != null) {
    entries[_PP] = input[_PP];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  if (input[_MI] != null) {
    entries[_MI] = input[_MI];
  }
  return entries;
}, "se_ListAttachedRolePoliciesRequest");
var se_ListAttachedUserPoliciesRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_UN] != null) {
    entries[_UN] = input[_UN];
  }
  if (input[_PP] != null) {
    entries[_PP] = input[_PP];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  if (input[_MI] != null) {
    entries[_MI] = input[_MI];
  }
  return entries;
}, "se_ListAttachedUserPoliciesRequest");
var se_ListEntitiesForPolicyRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_PA] != null) {
    entries[_PA] = input[_PA];
  }
  if (input[_EF] != null) {
    entries[_EF] = input[_EF];
  }
  if (input[_PP] != null) {
    entries[_PP] = input[_PP];
  }
  if (input[_PUF] != null) {
    entries[_PUF] = input[_PUF];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  if (input[_MI] != null) {
    entries[_MI] = input[_MI];
  }
  return entries;
}, "se_ListEntitiesForPolicyRequest");
var se_ListGroupPoliciesRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_GN] != null) {
    entries[_GN] = input[_GN];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  if (input[_MI] != null) {
    entries[_MI] = input[_MI];
  }
  return entries;
}, "se_ListGroupPoliciesRequest");
var se_ListGroupsForUserRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_UN] != null) {
    entries[_UN] = input[_UN];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  if (input[_MI] != null) {
    entries[_MI] = input[_MI];
  }
  return entries;
}, "se_ListGroupsForUserRequest");
var se_ListGroupsRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_PP] != null) {
    entries[_PP] = input[_PP];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  if (input[_MI] != null) {
    entries[_MI] = input[_MI];
  }
  return entries;
}, "se_ListGroupsRequest");
var se_ListInstanceProfilesForRoleRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_RN] != null) {
    entries[_RN] = input[_RN];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  if (input[_MI] != null) {
    entries[_MI] = input[_MI];
  }
  return entries;
}, "se_ListInstanceProfilesForRoleRequest");
var se_ListInstanceProfilesRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_PP] != null) {
    entries[_PP] = input[_PP];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  if (input[_MI] != null) {
    entries[_MI] = input[_MI];
  }
  return entries;
}, "se_ListInstanceProfilesRequest");
var se_ListInstanceProfileTagsRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_IPN] != null) {
    entries[_IPN] = input[_IPN];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  if (input[_MI] != null) {
    entries[_MI] = input[_MI];
  }
  return entries;
}, "se_ListInstanceProfileTagsRequest");
var se_ListMFADevicesRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_UN] != null) {
    entries[_UN] = input[_UN];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  if (input[_MI] != null) {
    entries[_MI] = input[_MI];
  }
  return entries;
}, "se_ListMFADevicesRequest");
var se_ListMFADeviceTagsRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_SNe] != null) {
    entries[_SNe] = input[_SNe];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  if (input[_MI] != null) {
    entries[_MI] = input[_MI];
  }
  return entries;
}, "se_ListMFADeviceTagsRequest");
var se_ListOpenIDConnectProvidersRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  return entries;
}, "se_ListOpenIDConnectProvidersRequest");
var se_ListOpenIDConnectProviderTagsRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_OIDCPA] != null) {
    entries[_OIDCPA] = input[_OIDCPA];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  if (input[_MI] != null) {
    entries[_MI] = input[_MI];
  }
  return entries;
}, "se_ListOpenIDConnectProviderTagsRequest");
var se_ListOrganizationsFeaturesRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  return entries;
}, "se_ListOrganizationsFeaturesRequest");
var se_ListPoliciesGrantingServiceAccessRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  if (input[_Ar] != null) {
    entries[_Ar] = input[_Ar];
  }
  if (input[_SNerv] != null) {
    const memberEntries = se_serviceNamespaceListType(input[_SNerv], context);
    if (input[_SNerv]?.length === 0) {
      entries.ServiceNamespaces = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `ServiceNamespaces.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_ListPoliciesGrantingServiceAccessRequest");
var se_ListPoliciesRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_S] != null) {
    entries[_S] = input[_S];
  }
  if (input[_OA] != null) {
    entries[_OA] = input[_OA];
  }
  if (input[_PP] != null) {
    entries[_PP] = input[_PP];
  }
  if (input[_PUF] != null) {
    entries[_PUF] = input[_PUF];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  if (input[_MI] != null) {
    entries[_MI] = input[_MI];
  }
  return entries;
}, "se_ListPoliciesRequest");
var se_ListPolicyTagsRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_PA] != null) {
    entries[_PA] = input[_PA];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  if (input[_MI] != null) {
    entries[_MI] = input[_MI];
  }
  return entries;
}, "se_ListPolicyTagsRequest");
var se_ListPolicyVersionsRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_PA] != null) {
    entries[_PA] = input[_PA];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  if (input[_MI] != null) {
    entries[_MI] = input[_MI];
  }
  return entries;
}, "se_ListPolicyVersionsRequest");
var se_ListRolePoliciesRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_RN] != null) {
    entries[_RN] = input[_RN];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  if (input[_MI] != null) {
    entries[_MI] = input[_MI];
  }
  return entries;
}, "se_ListRolePoliciesRequest");
var se_ListRolesRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_PP] != null) {
    entries[_PP] = input[_PP];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  if (input[_MI] != null) {
    entries[_MI] = input[_MI];
  }
  return entries;
}, "se_ListRolesRequest");
var se_ListRoleTagsRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_RN] != null) {
    entries[_RN] = input[_RN];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  if (input[_MI] != null) {
    entries[_MI] = input[_MI];
  }
  return entries;
}, "se_ListRoleTagsRequest");
var se_ListSAMLProvidersRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  return entries;
}, "se_ListSAMLProvidersRequest");
var se_ListSAMLProviderTagsRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_SAMLPA] != null) {
    entries[_SAMLPA] = input[_SAMLPA];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  if (input[_MI] != null) {
    entries[_MI] = input[_MI];
  }
  return entries;
}, "se_ListSAMLProviderTagsRequest");
var se_ListServerCertificatesRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_PP] != null) {
    entries[_PP] = input[_PP];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  if (input[_MI] != null) {
    entries[_MI] = input[_MI];
  }
  return entries;
}, "se_ListServerCertificatesRequest");
var se_ListServerCertificateTagsRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_SCN] != null) {
    entries[_SCN] = input[_SCN];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  if (input[_MI] != null) {
    entries[_MI] = input[_MI];
  }
  return entries;
}, "se_ListServerCertificateTagsRequest");
var se_ListServiceSpecificCredentialsRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_UN] != null) {
    entries[_UN] = input[_UN];
  }
  if (input[_SN] != null) {
    entries[_SN] = input[_SN];
  }
  return entries;
}, "se_ListServiceSpecificCredentialsRequest");
var se_ListSigningCertificatesRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_UN] != null) {
    entries[_UN] = input[_UN];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  if (input[_MI] != null) {
    entries[_MI] = input[_MI];
  }
  return entries;
}, "se_ListSigningCertificatesRequest");
var se_ListSSHPublicKeysRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_UN] != null) {
    entries[_UN] = input[_UN];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  if (input[_MI] != null) {
    entries[_MI] = input[_MI];
  }
  return entries;
}, "se_ListSSHPublicKeysRequest");
var se_ListUserPoliciesRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_UN] != null) {
    entries[_UN] = input[_UN];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  if (input[_MI] != null) {
    entries[_MI] = input[_MI];
  }
  return entries;
}, "se_ListUserPoliciesRequest");
var se_ListUsersRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_PP] != null) {
    entries[_PP] = input[_PP];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  if (input[_MI] != null) {
    entries[_MI] = input[_MI];
  }
  return entries;
}, "se_ListUsersRequest");
var se_ListUserTagsRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_UN] != null) {
    entries[_UN] = input[_UN];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  if (input[_MI] != null) {
    entries[_MI] = input[_MI];
  }
  return entries;
}, "se_ListUserTagsRequest");
var se_ListVirtualMFADevicesRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_AS] != null) {
    entries[_AS] = input[_AS];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  if (input[_MI] != null) {
    entries[_MI] = input[_MI];
  }
  return entries;
}, "se_ListVirtualMFADevicesRequest");
var se_PutGroupPolicyRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_GN] != null) {
    entries[_GN] = input[_GN];
  }
  if (input[_PN] != null) {
    entries[_PN] = input[_PN];
  }
  if (input[_PD] != null) {
    entries[_PD] = input[_PD];
  }
  return entries;
}, "se_PutGroupPolicyRequest");
var se_PutRolePermissionsBoundaryRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_RN] != null) {
    entries[_RN] = input[_RN];
  }
  if (input[_PB] != null) {
    entries[_PB] = input[_PB];
  }
  return entries;
}, "se_PutRolePermissionsBoundaryRequest");
var se_PutRolePolicyRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_RN] != null) {
    entries[_RN] = input[_RN];
  }
  if (input[_PN] != null) {
    entries[_PN] = input[_PN];
  }
  if (input[_PD] != null) {
    entries[_PD] = input[_PD];
  }
  return entries;
}, "se_PutRolePolicyRequest");
var se_PutUserPermissionsBoundaryRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_UN] != null) {
    entries[_UN] = input[_UN];
  }
  if (input[_PB] != null) {
    entries[_PB] = input[_PB];
  }
  return entries;
}, "se_PutUserPermissionsBoundaryRequest");
var se_PutUserPolicyRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_UN] != null) {
    entries[_UN] = input[_UN];
  }
  if (input[_PN] != null) {
    entries[_PN] = input[_PN];
  }
  if (input[_PD] != null) {
    entries[_PD] = input[_PD];
  }
  return entries;
}, "se_PutUserPolicyRequest");
var se_RemoveClientIDFromOpenIDConnectProviderRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_OIDCPA] != null) {
    entries[_OIDCPA] = input[_OIDCPA];
  }
  if (input[_CID] != null) {
    entries[_CID] = input[_CID];
  }
  return entries;
}, "se_RemoveClientIDFromOpenIDConnectProviderRequest");
var se_RemoveRoleFromInstanceProfileRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_IPN] != null) {
    entries[_IPN] = input[_IPN];
  }
  if (input[_RN] != null) {
    entries[_RN] = input[_RN];
  }
  return entries;
}, "se_RemoveRoleFromInstanceProfileRequest");
var se_RemoveUserFromGroupRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_GN] != null) {
    entries[_GN] = input[_GN];
  }
  if (input[_UN] != null) {
    entries[_UN] = input[_UN];
  }
  return entries;
}, "se_RemoveUserFromGroupRequest");
var se_ResetServiceSpecificCredentialRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_UN] != null) {
    entries[_UN] = input[_UN];
  }
  if (input[_SSCI] != null) {
    entries[_SSCI] = input[_SSCI];
  }
  return entries;
}, "se_ResetServiceSpecificCredentialRequest");
var se_ResourceNameListType = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    entries[`member.${counter}`] = entry;
    counter++;
  }
  return entries;
}, "se_ResourceNameListType");
var se_ResyncMFADeviceRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_UN] != null) {
    entries[_UN] = input[_UN];
  }
  if (input[_SNe] != null) {
    entries[_SNe] = input[_SNe];
  }
  if (input[_AC] != null) {
    entries[_AC] = input[_AC];
  }
  if (input[_ACu] != null) {
    entries[_ACu] = input[_ACu];
  }
  return entries;
}, "se_ResyncMFADeviceRequest");
var se_serviceNamespaceListType = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    entries[`member.${counter}`] = entry;
    counter++;
  }
  return entries;
}, "se_serviceNamespaceListType");
var se_SetDefaultPolicyVersionRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_PA] != null) {
    entries[_PA] = input[_PA];
  }
  if (input[_VI] != null) {
    entries[_VI] = input[_VI];
  }
  return entries;
}, "se_SetDefaultPolicyVersionRequest");
var se_SetSecurityTokenServicePreferencesRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_GETV] != null) {
    entries[_GETV] = input[_GETV];
  }
  return entries;
}, "se_SetSecurityTokenServicePreferencesRequest");
var se_SimulateCustomPolicyRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_PIL] != null) {
    const memberEntries = se_SimulationPolicyListType(input[_PIL], context);
    if (input[_PIL]?.length === 0) {
      entries.PolicyInputList = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `PolicyInputList.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_PBPIL] != null) {
    const memberEntries = se_SimulationPolicyListType(input[_PBPIL], context);
    if (input[_PBPIL]?.length === 0) {
      entries.PermissionsBoundaryPolicyInputList = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `PermissionsBoundaryPolicyInputList.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_AN] != null) {
    const memberEntries = se_ActionNameListType(input[_AN], context);
    if (input[_AN]?.length === 0) {
      entries.ActionNames = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `ActionNames.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_RA] != null) {
    const memberEntries = se_ResourceNameListType(input[_RA], context);
    if (input[_RA]?.length === 0) {
      entries.ResourceArns = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `ResourceArns.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_RP] != null) {
    entries[_RP] = input[_RP];
  }
  if (input[_RO] != null) {
    entries[_RO] = input[_RO];
  }
  if (input[_CA] != null) {
    entries[_CA] = input[_CA];
  }
  if (input[_CE] != null) {
    const memberEntries = se_ContextEntryListType(input[_CE], context);
    if (input[_CE]?.length === 0) {
      entries.ContextEntries = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `ContextEntries.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_RHO] != null) {
    entries[_RHO] = input[_RHO];
  }
  if (input[_MI] != null) {
    entries[_MI] = input[_MI];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  return entries;
}, "se_SimulateCustomPolicyRequest");
var se_SimulatePrincipalPolicyRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_PSA] != null) {
    entries[_PSA] = input[_PSA];
  }
  if (input[_PIL] != null) {
    const memberEntries = se_SimulationPolicyListType(input[_PIL], context);
    if (input[_PIL]?.length === 0) {
      entries.PolicyInputList = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `PolicyInputList.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_PBPIL] != null) {
    const memberEntries = se_SimulationPolicyListType(input[_PBPIL], context);
    if (input[_PBPIL]?.length === 0) {
      entries.PermissionsBoundaryPolicyInputList = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `PermissionsBoundaryPolicyInputList.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_AN] != null) {
    const memberEntries = se_ActionNameListType(input[_AN], context);
    if (input[_AN]?.length === 0) {
      entries.ActionNames = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `ActionNames.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_RA] != null) {
    const memberEntries = se_ResourceNameListType(input[_RA], context);
    if (input[_RA]?.length === 0) {
      entries.ResourceArns = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `ResourceArns.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_RP] != null) {
    entries[_RP] = input[_RP];
  }
  if (input[_RO] != null) {
    entries[_RO] = input[_RO];
  }
  if (input[_CA] != null) {
    entries[_CA] = input[_CA];
  }
  if (input[_CE] != null) {
    const memberEntries = se_ContextEntryListType(input[_CE], context);
    if (input[_CE]?.length === 0) {
      entries.ContextEntries = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `ContextEntries.${key}`;
      entries[loc] = value;
    });
  }
  if (input[_RHO] != null) {
    entries[_RHO] = input[_RHO];
  }
  if (input[_MI] != null) {
    entries[_MI] = input[_MI];
  }
  if (input[_M] != null) {
    entries[_M] = input[_M];
  }
  return entries;
}, "se_SimulatePrincipalPolicyRequest");
var se_SimulationPolicyListType = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    entries[`member.${counter}`] = entry;
    counter++;
  }
  return entries;
}, "se_SimulationPolicyListType");
var se_Tag = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_K] != null) {
    entries[_K] = input[_K];
  }
  if (input[_Va] != null) {
    entries[_Va] = input[_Va];
  }
  return entries;
}, "se_Tag");
var se_TagInstanceProfileRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_IPN] != null) {
    entries[_IPN] = input[_IPN];
  }
  if (input[_T] != null) {
    const memberEntries = se_tagListType(input[_T], context);
    if (input[_T]?.length === 0) {
      entries.Tags = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `Tags.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_TagInstanceProfileRequest");
var se_tagKeyListType = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    entries[`member.${counter}`] = entry;
    counter++;
  }
  return entries;
}, "se_tagKeyListType");
var se_tagListType = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    const memberEntries = se_Tag(entry, context);
    Object.entries(memberEntries).forEach(([key, value]) => {
      entries[`member.${counter}.${key}`] = value;
    });
    counter++;
  }
  return entries;
}, "se_tagListType");
var se_TagMFADeviceRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_SNe] != null) {
    entries[_SNe] = input[_SNe];
  }
  if (input[_T] != null) {
    const memberEntries = se_tagListType(input[_T], context);
    if (input[_T]?.length === 0) {
      entries.Tags = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `Tags.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_TagMFADeviceRequest");
var se_TagOpenIDConnectProviderRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_OIDCPA] != null) {
    entries[_OIDCPA] = input[_OIDCPA];
  }
  if (input[_T] != null) {
    const memberEntries = se_tagListType(input[_T], context);
    if (input[_T]?.length === 0) {
      entries.Tags = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `Tags.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_TagOpenIDConnectProviderRequest");
var se_TagPolicyRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_PA] != null) {
    entries[_PA] = input[_PA];
  }
  if (input[_T] != null) {
    const memberEntries = se_tagListType(input[_T], context);
    if (input[_T]?.length === 0) {
      entries.Tags = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `Tags.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_TagPolicyRequest");
var se_TagRoleRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_RN] != null) {
    entries[_RN] = input[_RN];
  }
  if (input[_T] != null) {
    const memberEntries = se_tagListType(input[_T], context);
    if (input[_T]?.length === 0) {
      entries.Tags = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `Tags.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_TagRoleRequest");
var se_TagSAMLProviderRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_SAMLPA] != null) {
    entries[_SAMLPA] = input[_SAMLPA];
  }
  if (input[_T] != null) {
    const memberEntries = se_tagListType(input[_T], context);
    if (input[_T]?.length === 0) {
      entries.Tags = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `Tags.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_TagSAMLProviderRequest");
var se_TagServerCertificateRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_SCN] != null) {
    entries[_SCN] = input[_SCN];
  }
  if (input[_T] != null) {
    const memberEntries = se_tagListType(input[_T], context);
    if (input[_T]?.length === 0) {
      entries.Tags = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `Tags.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_TagServerCertificateRequest");
var se_TagUserRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_UN] != null) {
    entries[_UN] = input[_UN];
  }
  if (input[_T] != null) {
    const memberEntries = se_tagListType(input[_T], context);
    if (input[_T]?.length === 0) {
      entries.Tags = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `Tags.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_TagUserRequest");
var se_thumbprintListType = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  let counter = 1;
  for (const entry of input) {
    if (entry === null) {
      continue;
    }
    entries[`member.${counter}`] = entry;
    counter++;
  }
  return entries;
}, "se_thumbprintListType");
var se_UntagInstanceProfileRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_IPN] != null) {
    entries[_IPN] = input[_IPN];
  }
  if (input[_TK] != null) {
    const memberEntries = se_tagKeyListType(input[_TK], context);
    if (input[_TK]?.length === 0) {
      entries.TagKeys = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `TagKeys.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_UntagInstanceProfileRequest");
var se_UntagMFADeviceRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_SNe] != null) {
    entries[_SNe] = input[_SNe];
  }
  if (input[_TK] != null) {
    const memberEntries = se_tagKeyListType(input[_TK], context);
    if (input[_TK]?.length === 0) {
      entries.TagKeys = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `TagKeys.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_UntagMFADeviceRequest");
var se_UntagOpenIDConnectProviderRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_OIDCPA] != null) {
    entries[_OIDCPA] = input[_OIDCPA];
  }
  if (input[_TK] != null) {
    const memberEntries = se_tagKeyListType(input[_TK], context);
    if (input[_TK]?.length === 0) {
      entries.TagKeys = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `TagKeys.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_UntagOpenIDConnectProviderRequest");
var se_UntagPolicyRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_PA] != null) {
    entries[_PA] = input[_PA];
  }
  if (input[_TK] != null) {
    const memberEntries = se_tagKeyListType(input[_TK], context);
    if (input[_TK]?.length === 0) {
      entries.TagKeys = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `TagKeys.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_UntagPolicyRequest");
var se_UntagRoleRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_RN] != null) {
    entries[_RN] = input[_RN];
  }
  if (input[_TK] != null) {
    const memberEntries = se_tagKeyListType(input[_TK], context);
    if (input[_TK]?.length === 0) {
      entries.TagKeys = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `TagKeys.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_UntagRoleRequest");
var se_UntagSAMLProviderRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_SAMLPA] != null) {
    entries[_SAMLPA] = input[_SAMLPA];
  }
  if (input[_TK] != null) {
    const memberEntries = se_tagKeyListType(input[_TK], context);
    if (input[_TK]?.length === 0) {
      entries.TagKeys = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `TagKeys.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_UntagSAMLProviderRequest");
var se_UntagServerCertificateRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_SCN] != null) {
    entries[_SCN] = input[_SCN];
  }
  if (input[_TK] != null) {
    const memberEntries = se_tagKeyListType(input[_TK], context);
    if (input[_TK]?.length === 0) {
      entries.TagKeys = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `TagKeys.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_UntagServerCertificateRequest");
var se_UntagUserRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_UN] != null) {
    entries[_UN] = input[_UN];
  }
  if (input[_TK] != null) {
    const memberEntries = se_tagKeyListType(input[_TK], context);
    if (input[_TK]?.length === 0) {
      entries.TagKeys = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `TagKeys.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_UntagUserRequest");
var se_UpdateAccessKeyRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_UN] != null) {
    entries[_UN] = input[_UN];
  }
  if (input[_AKI] != null) {
    entries[_AKI] = input[_AKI];
  }
  if (input[_St] != null) {
    entries[_St] = input[_St];
  }
  return entries;
}, "se_UpdateAccessKeyRequest");
var se_UpdateAccountPasswordPolicyRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_MPL] != null) {
    entries[_MPL] = input[_MPL];
  }
  if (input[_RS] != null) {
    entries[_RS] = input[_RS];
  }
  if (input[_RNe] != null) {
    entries[_RNe] = input[_RNe];
  }
  if (input[_RUC] != null) {
    entries[_RUC] = input[_RUC];
  }
  if (input[_RLC] != null) {
    entries[_RLC] = input[_RLC];
  }
  if (input[_AUTCP] != null) {
    entries[_AUTCP] = input[_AUTCP];
  }
  if (input[_MPA] != null) {
    entries[_MPA] = input[_MPA];
  }
  if (input[_PRPa] != null) {
    entries[_PRPa] = input[_PRPa];
  }
  if (input[_HE] != null) {
    entries[_HE] = input[_HE];
  }
  return entries;
}, "se_UpdateAccountPasswordPolicyRequest");
var se_UpdateAssumeRolePolicyRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_RN] != null) {
    entries[_RN] = input[_RN];
  }
  if (input[_PD] != null) {
    entries[_PD] = input[_PD];
  }
  return entries;
}, "se_UpdateAssumeRolePolicyRequest");
var se_UpdateGroupRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_GN] != null) {
    entries[_GN] = input[_GN];
  }
  if (input[_NPe] != null) {
    entries[_NPe] = input[_NPe];
  }
  if (input[_NGN] != null) {
    entries[_NGN] = input[_NGN];
  }
  return entries;
}, "se_UpdateGroupRequest");
var se_UpdateLoginProfileRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_UN] != null) {
    entries[_UN] = input[_UN];
  }
  if (input[_Pa] != null) {
    entries[_Pa] = input[_Pa];
  }
  if (input[_PRR] != null) {
    entries[_PRR] = input[_PRR];
  }
  return entries;
}, "se_UpdateLoginProfileRequest");
var se_UpdateOpenIDConnectProviderThumbprintRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_OIDCPA] != null) {
    entries[_OIDCPA] = input[_OIDCPA];
  }
  if (input[_TL] != null) {
    const memberEntries = se_thumbprintListType(input[_TL], context);
    if (input[_TL]?.length === 0) {
      entries.ThumbprintList = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `ThumbprintList.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_UpdateOpenIDConnectProviderThumbprintRequest");
var se_UpdateRoleDescriptionRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_RN] != null) {
    entries[_RN] = input[_RN];
  }
  if (input[_D] != null) {
    entries[_D] = input[_D];
  }
  return entries;
}, "se_UpdateRoleDescriptionRequest");
var se_UpdateRoleRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_RN] != null) {
    entries[_RN] = input[_RN];
  }
  if (input[_D] != null) {
    entries[_D] = input[_D];
  }
  if (input[_MSD] != null) {
    entries[_MSD] = input[_MSD];
  }
  return entries;
}, "se_UpdateRoleRequest");
var se_UpdateSAMLProviderRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_SAMLMD] != null) {
    entries[_SAMLMD] = input[_SAMLMD];
  }
  if (input[_SAMLPA] != null) {
    entries[_SAMLPA] = input[_SAMLPA];
  }
  if (input[_AEM] != null) {
    entries[_AEM] = input[_AEM];
  }
  if (input[_APK] != null) {
    entries[_APK] = input[_APK];
  }
  if (input[_RPK] != null) {
    entries[_RPK] = input[_RPK];
  }
  return entries;
}, "se_UpdateSAMLProviderRequest");
var se_UpdateServerCertificateRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_SCN] != null) {
    entries[_SCN] = input[_SCN];
  }
  if (input[_NPe] != null) {
    entries[_NPe] = input[_NPe];
  }
  if (input[_NSCN] != null) {
    entries[_NSCN] = input[_NSCN];
  }
  return entries;
}, "se_UpdateServerCertificateRequest");
var se_UpdateServiceSpecificCredentialRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_UN] != null) {
    entries[_UN] = input[_UN];
  }
  if (input[_SSCI] != null) {
    entries[_SSCI] = input[_SSCI];
  }
  if (input[_St] != null) {
    entries[_St] = input[_St];
  }
  return entries;
}, "se_UpdateServiceSpecificCredentialRequest");
var se_UpdateSigningCertificateRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_UN] != null) {
    entries[_UN] = input[_UN];
  }
  if (input[_CI] != null) {
    entries[_CI] = input[_CI];
  }
  if (input[_St] != null) {
    entries[_St] = input[_St];
  }
  return entries;
}, "se_UpdateSigningCertificateRequest");
var se_UpdateSSHPublicKeyRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_UN] != null) {
    entries[_UN] = input[_UN];
  }
  if (input[_SSHPKI] != null) {
    entries[_SSHPKI] = input[_SSHPKI];
  }
  if (input[_St] != null) {
    entries[_St] = input[_St];
  }
  return entries;
}, "se_UpdateSSHPublicKeyRequest");
var se_UpdateUserRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_UN] != null) {
    entries[_UN] = input[_UN];
  }
  if (input[_NPe] != null) {
    entries[_NPe] = input[_NPe];
  }
  if (input[_NUN] != null) {
    entries[_NUN] = input[_NUN];
  }
  return entries;
}, "se_UpdateUserRequest");
var se_UploadServerCertificateRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_P] != null) {
    entries[_P] = input[_P];
  }
  if (input[_SCN] != null) {
    entries[_SCN] = input[_SCN];
  }
  if (input[_CB] != null) {
    entries[_CB] = input[_CB];
  }
  if (input[_PK] != null) {
    entries[_PK] = input[_PK];
  }
  if (input[_CC] != null) {
    entries[_CC] = input[_CC];
  }
  if (input[_T] != null) {
    const memberEntries = se_tagListType(input[_T], context);
    if (input[_T]?.length === 0) {
      entries.Tags = [];
    }
    Object.entries(memberEntries).forEach(([key, value]) => {
      const loc = `Tags.${key}`;
      entries[loc] = value;
    });
  }
  return entries;
}, "se_UploadServerCertificateRequest");
var se_UploadSigningCertificateRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_UN] != null) {
    entries[_UN] = input[_UN];
  }
  if (input[_CB] != null) {
    entries[_CB] = input[_CB];
  }
  return entries;
}, "se_UploadSigningCertificateRequest");
var se_UploadSSHPublicKeyRequest = /* @__PURE__ */ __name((input, context) => {
  const entries = {};
  if (input[_UN] != null) {
    entries[_UN] = input[_UN];
  }
  if (input[_SSHPKB] != null) {
    entries[_SSHPKB] = input[_SSHPKB];
  }
  return entries;
}, "se_UploadSSHPublicKeyRequest");
var de_AccessDetail = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_SN] != null) {
    contents[_SN] = (0, import_smithy_client.expectString)(output[_SN]);
  }
  if (output[_SNer] != null) {
    contents[_SNer] = (0, import_smithy_client.expectString)(output[_SNer]);
  }
  if (output[_R] != null) {
    contents[_R] = (0, import_smithy_client.expectString)(output[_R]);
  }
  if (output[_EP] != null) {
    contents[_EP] = (0, import_smithy_client.expectString)(output[_EP]);
  }
  if (output[_LAT] != null) {
    contents[_LAT] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_LAT]));
  }
  if (output[_TAE] != null) {
    contents[_TAE] = (0, import_smithy_client.strictParseInt32)(output[_TAE]);
  }
  return contents;
}, "de_AccessDetail");
var de_AccessDetails = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_AccessDetail(entry, context);
  });
}, "de_AccessDetails");
var de_AccessKey = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_UN] != null) {
    contents[_UN] = (0, import_smithy_client.expectString)(output[_UN]);
  }
  if (output[_AKI] != null) {
    contents[_AKI] = (0, import_smithy_client.expectString)(output[_AKI]);
  }
  if (output[_St] != null) {
    contents[_St] = (0, import_smithy_client.expectString)(output[_St]);
  }
  if (output[_SAK] != null) {
    contents[_SAK] = (0, import_smithy_client.expectString)(output[_SAK]);
  }
  if (output[_CD] != null) {
    contents[_CD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_CD]));
  }
  return contents;
}, "de_AccessKey");
var de_AccessKeyLastUsed = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_LUD] != null) {
    contents[_LUD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_LUD]));
  }
  if (output[_SN] != null) {
    contents[_SN] = (0, import_smithy_client.expectString)(output[_SN]);
  }
  if (output[_R] != null) {
    contents[_R] = (0, import_smithy_client.expectString)(output[_R]);
  }
  return contents;
}, "de_AccessKeyLastUsed");
var de_AccessKeyMetadata = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_UN] != null) {
    contents[_UN] = (0, import_smithy_client.expectString)(output[_UN]);
  }
  if (output[_AKI] != null) {
    contents[_AKI] = (0, import_smithy_client.expectString)(output[_AKI]);
  }
  if (output[_St] != null) {
    contents[_St] = (0, import_smithy_client.expectString)(output[_St]);
  }
  if (output[_CD] != null) {
    contents[_CD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_CD]));
  }
  return contents;
}, "de_AccessKeyMetadata");
var de_accessKeyMetadataListType = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_AccessKeyMetadata(entry, context);
  });
}, "de_accessKeyMetadataListType");
var de_accountAliasListType = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return (0, import_smithy_client.expectString)(entry);
  });
}, "de_accountAliasListType");
var de_AccountNotManagementOrDelegatedAdministratorException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Me] != null) {
    contents[_Me] = (0, import_smithy_client.expectString)(output[_Me]);
  }
  return contents;
}, "de_AccountNotManagementOrDelegatedAdministratorException");
var de_ArnListType = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return (0, import_smithy_client.expectString)(entry);
  });
}, "de_ArnListType");
var de_AttachedPermissionsBoundary = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_PBT] != null) {
    contents[_PBT] = (0, import_smithy_client.expectString)(output[_PBT]);
  }
  if (output[_PBA] != null) {
    contents[_PBA] = (0, import_smithy_client.expectString)(output[_PBA]);
  }
  return contents;
}, "de_AttachedPermissionsBoundary");
var de_attachedPoliciesListType = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_AttachedPolicy(entry, context);
  });
}, "de_attachedPoliciesListType");
var de_AttachedPolicy = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_PN] != null) {
    contents[_PN] = (0, import_smithy_client.expectString)(output[_PN]);
  }
  if (output[_PA] != null) {
    contents[_PA] = (0, import_smithy_client.expectString)(output[_PA]);
  }
  return contents;
}, "de_AttachedPolicy");
var de_CallerIsNotManagementAccountException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Me] != null) {
    contents[_Me] = (0, import_smithy_client.expectString)(output[_Me]);
  }
  return contents;
}, "de_CallerIsNotManagementAccountException");
var de_certificateListType = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_SigningCertificate(entry, context);
  });
}, "de_certificateListType");
var de_CertificationMapType = /* @__PURE__ */ __name((output, context) => {
  return output.reduce((acc, pair) => {
    if (pair["value"] === null) {
      return acc;
    }
    acc[pair["key"]] = (0, import_smithy_client.expectString)(pair["value"]);
    return acc;
  }, {});
}, "de_CertificationMapType");
var de_clientIDListType = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return (0, import_smithy_client.expectString)(entry);
  });
}, "de_clientIDListType");
var de_ConcurrentModificationException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_ConcurrentModificationException");
var de_ContextKeyNamesResultListType = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return (0, import_smithy_client.expectString)(entry);
  });
}, "de_ContextKeyNamesResultListType");
var de_CreateAccessKeyResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_AK] != null) {
    contents[_AK] = de_AccessKey(output[_AK], context);
  }
  return contents;
}, "de_CreateAccessKeyResponse");
var de_CreateGroupResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Gr] != null) {
    contents[_Gr] = de_Group(output[_Gr], context);
  }
  return contents;
}, "de_CreateGroupResponse");
var de_CreateInstanceProfileResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_IP] != null) {
    contents[_IP] = de_InstanceProfile(output[_IP], context);
  }
  return contents;
}, "de_CreateInstanceProfileResponse");
var de_CreateLoginProfileResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_LPo] != null) {
    contents[_LPo] = de_LoginProfile(output[_LPo], context);
  }
  return contents;
}, "de_CreateLoginProfileResponse");
var de_CreateOpenIDConnectProviderResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_OIDCPA] != null) {
    contents[_OIDCPA] = (0, import_smithy_client.expectString)(output[_OIDCPA]);
  }
  if (output.Tags === "") {
    contents[_T] = [];
  } else if (output[_T] != null && output[_T][_me] != null) {
    contents[_T] = de_tagListType((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_me]), context);
  }
  return contents;
}, "de_CreateOpenIDConnectProviderResponse");
var de_CreatePolicyResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Po] != null) {
    contents[_Po] = de_Policy(output[_Po], context);
  }
  return contents;
}, "de_CreatePolicyResponse");
var de_CreatePolicyVersionResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_PV] != null) {
    contents[_PV] = de_PolicyVersion(output[_PV], context);
  }
  return contents;
}, "de_CreatePolicyVersionResponse");
var de_CreateRoleResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Ro] != null) {
    contents[_Ro] = de_Role(output[_Ro], context);
  }
  return contents;
}, "de_CreateRoleResponse");
var de_CreateSAMLProviderResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_SAMLPA] != null) {
    contents[_SAMLPA] = (0, import_smithy_client.expectString)(output[_SAMLPA]);
  }
  if (output.Tags === "") {
    contents[_T] = [];
  } else if (output[_T] != null && output[_T][_me] != null) {
    contents[_T] = de_tagListType((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_me]), context);
  }
  return contents;
}, "de_CreateSAMLProviderResponse");
var de_CreateServiceLinkedRoleResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Ro] != null) {
    contents[_Ro] = de_Role(output[_Ro], context);
  }
  return contents;
}, "de_CreateServiceLinkedRoleResponse");
var de_CreateServiceSpecificCredentialResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_SSC] != null) {
    contents[_SSC] = de_ServiceSpecificCredential(output[_SSC], context);
  }
  return contents;
}, "de_CreateServiceSpecificCredentialResponse");
var de_CreateUserResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Us] != null) {
    contents[_Us] = de_User(output[_Us], context);
  }
  return contents;
}, "de_CreateUserResponse");
var de_CreateVirtualMFADeviceResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_VMFAD] != null) {
    contents[_VMFAD] = de_VirtualMFADevice(output[_VMFAD], context);
  }
  return contents;
}, "de_CreateVirtualMFADeviceResponse");
var de_CredentialReportExpiredException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_CredentialReportExpiredException");
var de_CredentialReportNotPresentException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_CredentialReportNotPresentException");
var de_CredentialReportNotReadyException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_CredentialReportNotReadyException");
var de_DeleteConflictException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_DeleteConflictException");
var de_DeleteServiceLinkedRoleResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_DTI] != null) {
    contents[_DTI] = (0, import_smithy_client.expectString)(output[_DTI]);
  }
  return contents;
}, "de_DeleteServiceLinkedRoleResponse");
var de_DeletionTaskFailureReasonType = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Re] != null) {
    contents[_Re] = (0, import_smithy_client.expectString)(output[_Re]);
  }
  if (output.RoleUsageList === "") {
    contents[_RUL] = [];
  } else if (output[_RUL] != null && output[_RUL][_me] != null) {
    contents[_RUL] = de_RoleUsageListType((0, import_smithy_client.getArrayIfSingleItem)(output[_RUL][_me]), context);
  }
  return contents;
}, "de_DeletionTaskFailureReasonType");
var de_DisableOrganizationsRootCredentialsManagementResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_OI] != null) {
    contents[_OI] = (0, import_smithy_client.expectString)(output[_OI]);
  }
  if (output.EnabledFeatures === "") {
    contents[_EFn] = [];
  } else if (output[_EFn] != null && output[_EFn][_me] != null) {
    contents[_EFn] = de_FeaturesListType((0, import_smithy_client.getArrayIfSingleItem)(output[_EFn][_me]), context);
  }
  return contents;
}, "de_DisableOrganizationsRootCredentialsManagementResponse");
var de_DisableOrganizationsRootSessionsResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_OI] != null) {
    contents[_OI] = (0, import_smithy_client.expectString)(output[_OI]);
  }
  if (output.EnabledFeatures === "") {
    contents[_EFn] = [];
  } else if (output[_EFn] != null && output[_EFn][_me] != null) {
    contents[_EFn] = de_FeaturesListType((0, import_smithy_client.getArrayIfSingleItem)(output[_EFn][_me]), context);
  }
  return contents;
}, "de_DisableOrganizationsRootSessionsResponse");
var de_DuplicateCertificateException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_DuplicateCertificateException");
var de_DuplicateSSHPublicKeyException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_DuplicateSSHPublicKeyException");
var de_EnableOrganizationsRootCredentialsManagementResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_OI] != null) {
    contents[_OI] = (0, import_smithy_client.expectString)(output[_OI]);
  }
  if (output.EnabledFeatures === "") {
    contents[_EFn] = [];
  } else if (output[_EFn] != null && output[_EFn][_me] != null) {
    contents[_EFn] = de_FeaturesListType((0, import_smithy_client.getArrayIfSingleItem)(output[_EFn][_me]), context);
  }
  return contents;
}, "de_EnableOrganizationsRootCredentialsManagementResponse");
var de_EnableOrganizationsRootSessionsResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_OI] != null) {
    contents[_OI] = (0, import_smithy_client.expectString)(output[_OI]);
  }
  if (output.EnabledFeatures === "") {
    contents[_EFn] = [];
  } else if (output[_EFn] != null && output[_EFn][_me] != null) {
    contents[_EFn] = de_FeaturesListType((0, import_smithy_client.getArrayIfSingleItem)(output[_EFn][_me]), context);
  }
  return contents;
}, "de_EnableOrganizationsRootSessionsResponse");
var de_EntityAlreadyExistsException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_EntityAlreadyExistsException");
var de_EntityDetails = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_EI] != null) {
    contents[_EI] = de_EntityInfo(output[_EI], context);
  }
  if (output[_LA] != null) {
    contents[_LA] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_LA]));
  }
  return contents;
}, "de_EntityDetails");
var de_entityDetailsListType = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_EntityDetails(entry, context);
  });
}, "de_entityDetailsListType");
var de_EntityInfo = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Ar] != null) {
    contents[_Ar] = (0, import_smithy_client.expectString)(output[_Ar]);
  }
  if (output[_N] != null) {
    contents[_N] = (0, import_smithy_client.expectString)(output[_N]);
  }
  if (output[_Ty] != null) {
    contents[_Ty] = (0, import_smithy_client.expectString)(output[_Ty]);
  }
  if (output[_I] != null) {
    contents[_I] = (0, import_smithy_client.expectString)(output[_I]);
  }
  if (output[_P] != null) {
    contents[_P] = (0, import_smithy_client.expectString)(output[_P]);
  }
  return contents;
}, "de_EntityInfo");
var de_EntityTemporarilyUnmodifiableException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_EntityTemporarilyUnmodifiableException");
var de_ErrorDetails = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Me] != null) {
    contents[_Me] = (0, import_smithy_client.expectString)(output[_Me]);
  }
  if (output[_C] != null) {
    contents[_C] = (0, import_smithy_client.expectString)(output[_C]);
  }
  return contents;
}, "de_ErrorDetails");
var de_EvalDecisionDetailsType = /* @__PURE__ */ __name((output, context) => {
  return output.reduce((acc, pair) => {
    if (pair["value"] === null) {
      return acc;
    }
    acc[pair["key"]] = (0, import_smithy_client.expectString)(pair["value"]);
    return acc;
  }, {});
}, "de_EvalDecisionDetailsType");
var de_EvaluationResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_EAN] != null) {
    contents[_EAN] = (0, import_smithy_client.expectString)(output[_EAN]);
  }
  if (output[_ERN] != null) {
    contents[_ERN] = (0, import_smithy_client.expectString)(output[_ERN]);
  }
  if (output[_ED] != null) {
    contents[_ED] = (0, import_smithy_client.expectString)(output[_ED]);
  }
  if (output.MatchedStatements === "") {
    contents[_MS] = [];
  } else if (output[_MS] != null && output[_MS][_me] != null) {
    contents[_MS] = de_StatementListType((0, import_smithy_client.getArrayIfSingleItem)(output[_MS][_me]), context);
  }
  if (output.MissingContextValues === "") {
    contents[_MCV] = [];
  } else if (output[_MCV] != null && output[_MCV][_me] != null) {
    contents[_MCV] = de_ContextKeyNamesResultListType((0, import_smithy_client.getArrayIfSingleItem)(output[_MCV][_me]), context);
  }
  if (output[_ODD] != null) {
    contents[_ODD] = de_OrganizationsDecisionDetail(output[_ODD], context);
  }
  if (output[_PBDD] != null) {
    contents[_PBDD] = de_PermissionsBoundaryDecisionDetail(output[_PBDD], context);
  }
  if (output.EvalDecisionDetails === "") {
    contents[_EDD] = {};
  } else if (output[_EDD] != null && output[_EDD][_e] != null) {
    contents[_EDD] = de_EvalDecisionDetailsType((0, import_smithy_client.getArrayIfSingleItem)(output[_EDD][_e]), context);
  }
  if (output.ResourceSpecificResults === "") {
    contents[_RSR] = [];
  } else if (output[_RSR] != null && output[_RSR][_me] != null) {
    contents[_RSR] = de_ResourceSpecificResultListType((0, import_smithy_client.getArrayIfSingleItem)(output[_RSR][_me]), context);
  }
  return contents;
}, "de_EvaluationResult");
var de_EvaluationResultsListType = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_EvaluationResult(entry, context);
  });
}, "de_EvaluationResultsListType");
var de_FeaturesListType = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return (0, import_smithy_client.expectString)(entry);
  });
}, "de_FeaturesListType");
var de_GenerateCredentialReportResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Sta] != null) {
    contents[_Sta] = (0, import_smithy_client.expectString)(output[_Sta]);
  }
  if (output[_D] != null) {
    contents[_D] = (0, import_smithy_client.expectString)(output[_D]);
  }
  return contents;
}, "de_GenerateCredentialReportResponse");
var de_GenerateOrganizationsAccessReportResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_JI] != null) {
    contents[_JI] = (0, import_smithy_client.expectString)(output[_JI]);
  }
  return contents;
}, "de_GenerateOrganizationsAccessReportResponse");
var de_GenerateServiceLastAccessedDetailsResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_JI] != null) {
    contents[_JI] = (0, import_smithy_client.expectString)(output[_JI]);
  }
  return contents;
}, "de_GenerateServiceLastAccessedDetailsResponse");
var de_GetAccessKeyLastUsedResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_UN] != null) {
    contents[_UN] = (0, import_smithy_client.expectString)(output[_UN]);
  }
  if (output[_AKLU] != null) {
    contents[_AKLU] = de_AccessKeyLastUsed(output[_AKLU], context);
  }
  return contents;
}, "de_GetAccessKeyLastUsedResponse");
var de_GetAccountAuthorizationDetailsResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.UserDetailList === "") {
    contents[_UDL] = [];
  } else if (output[_UDL] != null && output[_UDL][_me] != null) {
    contents[_UDL] = de_userDetailListType((0, import_smithy_client.getArrayIfSingleItem)(output[_UDL][_me]), context);
  }
  if (output.GroupDetailList === "") {
    contents[_GDL] = [];
  } else if (output[_GDL] != null && output[_GDL][_me] != null) {
    contents[_GDL] = de_groupDetailListType((0, import_smithy_client.getArrayIfSingleItem)(output[_GDL][_me]), context);
  }
  if (output.RoleDetailList === "") {
    contents[_RDL] = [];
  } else if (output[_RDL] != null && output[_RDL][_me] != null) {
    contents[_RDL] = de_roleDetailListType((0, import_smithy_client.getArrayIfSingleItem)(output[_RDL][_me]), context);
  }
  if (output.Policies === "") {
    contents[_Pol] = [];
  } else if (output[_Pol] != null && output[_Pol][_me] != null) {
    contents[_Pol] = de_ManagedPolicyDetailListType((0, import_smithy_client.getArrayIfSingleItem)(output[_Pol][_me]), context);
  }
  if (output[_IT] != null) {
    contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_GetAccountAuthorizationDetailsResponse");
var de_GetAccountPasswordPolicyResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_PPa] != null) {
    contents[_PPa] = de_PasswordPolicy(output[_PPa], context);
  }
  return contents;
}, "de_GetAccountPasswordPolicyResponse");
var de_GetAccountSummaryResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.SummaryMap === "") {
    contents[_SM] = {};
  } else if (output[_SM] != null && output[_SM][_e] != null) {
    contents[_SM] = de_summaryMapType((0, import_smithy_client.getArrayIfSingleItem)(output[_SM][_e]), context);
  }
  return contents;
}, "de_GetAccountSummaryResponse");
var de_GetContextKeysForPolicyResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.ContextKeyNames === "") {
    contents[_CKNo] = [];
  } else if (output[_CKNo] != null && output[_CKNo][_me] != null) {
    contents[_CKNo] = de_ContextKeyNamesResultListType((0, import_smithy_client.getArrayIfSingleItem)(output[_CKNo][_me]), context);
  }
  return contents;
}, "de_GetContextKeysForPolicyResponse");
var de_GetCredentialReportResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Co] != null) {
    contents[_Co] = context.base64Decoder(output[_Co]);
  }
  if (output[_RF] != null) {
    contents[_RF] = (0, import_smithy_client.expectString)(output[_RF]);
  }
  if (output[_GT] != null) {
    contents[_GT] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_GT]));
  }
  return contents;
}, "de_GetCredentialReportResponse");
var de_GetGroupPolicyResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_GN] != null) {
    contents[_GN] = (0, import_smithy_client.expectString)(output[_GN]);
  }
  if (output[_PN] != null) {
    contents[_PN] = (0, import_smithy_client.expectString)(output[_PN]);
  }
  if (output[_PD] != null) {
    contents[_PD] = (0, import_smithy_client.expectString)(output[_PD]);
  }
  return contents;
}, "de_GetGroupPolicyResponse");
var de_GetGroupResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Gr] != null) {
    contents[_Gr] = de_Group(output[_Gr], context);
  }
  if (output.Users === "") {
    contents[_Use] = [];
  } else if (output[_Use] != null && output[_Use][_me] != null) {
    contents[_Use] = de_userListType((0, import_smithy_client.getArrayIfSingleItem)(output[_Use][_me]), context);
  }
  if (output[_IT] != null) {
    contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_GetGroupResponse");
var de_GetInstanceProfileResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_IP] != null) {
    contents[_IP] = de_InstanceProfile(output[_IP], context);
  }
  return contents;
}, "de_GetInstanceProfileResponse");
var de_GetLoginProfileResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_LPo] != null) {
    contents[_LPo] = de_LoginProfile(output[_LPo], context);
  }
  return contents;
}, "de_GetLoginProfileResponse");
var de_GetMFADeviceResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_UN] != null) {
    contents[_UN] = (0, import_smithy_client.expectString)(output[_UN]);
  }
  if (output[_SNe] != null) {
    contents[_SNe] = (0, import_smithy_client.expectString)(output[_SNe]);
  }
  if (output[_EDn] != null) {
    contents[_EDn] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_EDn]));
  }
  if (output.Certifications === "") {
    contents[_Ce] = {};
  } else if (output[_Ce] != null && output[_Ce][_e] != null) {
    contents[_Ce] = de_CertificationMapType((0, import_smithy_client.getArrayIfSingleItem)(output[_Ce][_e]), context);
  }
  return contents;
}, "de_GetMFADeviceResponse");
var de_GetOpenIDConnectProviderResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_U] != null) {
    contents[_U] = (0, import_smithy_client.expectString)(output[_U]);
  }
  if (output.ClientIDList === "") {
    contents[_CIDL] = [];
  } else if (output[_CIDL] != null && output[_CIDL][_me] != null) {
    contents[_CIDL] = de_clientIDListType((0, import_smithy_client.getArrayIfSingleItem)(output[_CIDL][_me]), context);
  }
  if (output.ThumbprintList === "") {
    contents[_TL] = [];
  } else if (output[_TL] != null && output[_TL][_me] != null) {
    contents[_TL] = de_thumbprintListType((0, import_smithy_client.getArrayIfSingleItem)(output[_TL][_me]), context);
  }
  if (output[_CD] != null) {
    contents[_CD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_CD]));
  }
  if (output.Tags === "") {
    contents[_T] = [];
  } else if (output[_T] != null && output[_T][_me] != null) {
    contents[_T] = de_tagListType((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_me]), context);
  }
  return contents;
}, "de_GetOpenIDConnectProviderResponse");
var de_GetOrganizationsAccessReportResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_JS] != null) {
    contents[_JS] = (0, import_smithy_client.expectString)(output[_JS]);
  }
  if (output[_JCD] != null) {
    contents[_JCD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_JCD]));
  }
  if (output[_JCDo] != null) {
    contents[_JCDo] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_JCDo]));
  }
  if (output[_NOSA] != null) {
    contents[_NOSA] = (0, import_smithy_client.strictParseInt32)(output[_NOSA]);
  }
  if (output[_NOSNA] != null) {
    contents[_NOSNA] = (0, import_smithy_client.strictParseInt32)(output[_NOSNA]);
  }
  if (output.AccessDetails === "") {
    contents[_AD] = [];
  } else if (output[_AD] != null && output[_AD][_me] != null) {
    contents[_AD] = de_AccessDetails((0, import_smithy_client.getArrayIfSingleItem)(output[_AD][_me]), context);
  }
  if (output[_IT] != null) {
    contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  if (output[_EDr] != null) {
    contents[_EDr] = de_ErrorDetails(output[_EDr], context);
  }
  return contents;
}, "de_GetOrganizationsAccessReportResponse");
var de_GetPolicyResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Po] != null) {
    contents[_Po] = de_Policy(output[_Po], context);
  }
  return contents;
}, "de_GetPolicyResponse");
var de_GetPolicyVersionResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_PV] != null) {
    contents[_PV] = de_PolicyVersion(output[_PV], context);
  }
  return contents;
}, "de_GetPolicyVersionResponse");
var de_GetRolePolicyResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_RN] != null) {
    contents[_RN] = (0, import_smithy_client.expectString)(output[_RN]);
  }
  if (output[_PN] != null) {
    contents[_PN] = (0, import_smithy_client.expectString)(output[_PN]);
  }
  if (output[_PD] != null) {
    contents[_PD] = (0, import_smithy_client.expectString)(output[_PD]);
  }
  return contents;
}, "de_GetRolePolicyResponse");
var de_GetRoleResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Ro] != null) {
    contents[_Ro] = de_Role(output[_Ro], context);
  }
  return contents;
}, "de_GetRoleResponse");
var de_GetSAMLProviderResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_SAMLPUUID] != null) {
    contents[_SAMLPUUID] = (0, import_smithy_client.expectString)(output[_SAMLPUUID]);
  }
  if (output[_SAMLMD] != null) {
    contents[_SAMLMD] = (0, import_smithy_client.expectString)(output[_SAMLMD]);
  }
  if (output[_CD] != null) {
    contents[_CD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_CD]));
  }
  if (output[_VU] != null) {
    contents[_VU] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_VU]));
  }
  if (output.Tags === "") {
    contents[_T] = [];
  } else if (output[_T] != null && output[_T][_me] != null) {
    contents[_T] = de_tagListType((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_me]), context);
  }
  if (output[_AEM] != null) {
    contents[_AEM] = (0, import_smithy_client.expectString)(output[_AEM]);
  }
  if (output.PrivateKeyList === "") {
    contents[_PKL] = [];
  } else if (output[_PKL] != null && output[_PKL][_me] != null) {
    contents[_PKL] = de_privateKeyList((0, import_smithy_client.getArrayIfSingleItem)(output[_PKL][_me]), context);
  }
  return contents;
}, "de_GetSAMLProviderResponse");
var de_GetServerCertificateResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_SC] != null) {
    contents[_SC] = de_ServerCertificate(output[_SC], context);
  }
  return contents;
}, "de_GetServerCertificateResponse");
var de_GetServiceLastAccessedDetailsResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_JS] != null) {
    contents[_JS] = (0, import_smithy_client.expectString)(output[_JS]);
  }
  if (output[_JT] != null) {
    contents[_JT] = (0, import_smithy_client.expectString)(output[_JT]);
  }
  if (output[_JCD] != null) {
    contents[_JCD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_JCD]));
  }
  if (output.ServicesLastAccessed === "") {
    contents[_SLA] = [];
  } else if (output[_SLA] != null && output[_SLA][_me] != null) {
    contents[_SLA] = de_ServicesLastAccessed((0, import_smithy_client.getArrayIfSingleItem)(output[_SLA][_me]), context);
  }
  if (output[_JCDo] != null) {
    contents[_JCDo] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_JCDo]));
  }
  if (output[_IT] != null) {
    contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  if (output[_Er] != null) {
    contents[_Er] = de_ErrorDetails(output[_Er], context);
  }
  return contents;
}, "de_GetServiceLastAccessedDetailsResponse");
var de_GetServiceLastAccessedDetailsWithEntitiesResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_JS] != null) {
    contents[_JS] = (0, import_smithy_client.expectString)(output[_JS]);
  }
  if (output[_JCD] != null) {
    contents[_JCD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_JCD]));
  }
  if (output[_JCDo] != null) {
    contents[_JCDo] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_JCDo]));
  }
  if (output.EntityDetailsList === "") {
    contents[_EDL] = [];
  } else if (output[_EDL] != null && output[_EDL][_me] != null) {
    contents[_EDL] = de_entityDetailsListType((0, import_smithy_client.getArrayIfSingleItem)(output[_EDL][_me]), context);
  }
  if (output[_IT] != null) {
    contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  if (output[_Er] != null) {
    contents[_Er] = de_ErrorDetails(output[_Er], context);
  }
  return contents;
}, "de_GetServiceLastAccessedDetailsWithEntitiesResponse");
var de_GetServiceLinkedRoleDeletionStatusResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_St] != null) {
    contents[_St] = (0, import_smithy_client.expectString)(output[_St]);
  }
  if (output[_Re] != null) {
    contents[_Re] = de_DeletionTaskFailureReasonType(output[_Re], context);
  }
  return contents;
}, "de_GetServiceLinkedRoleDeletionStatusResponse");
var de_GetSSHPublicKeyResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_SSHPK] != null) {
    contents[_SSHPK] = de_SSHPublicKey(output[_SSHPK], context);
  }
  return contents;
}, "de_GetSSHPublicKeyResponse");
var de_GetUserPolicyResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_UN] != null) {
    contents[_UN] = (0, import_smithy_client.expectString)(output[_UN]);
  }
  if (output[_PN] != null) {
    contents[_PN] = (0, import_smithy_client.expectString)(output[_PN]);
  }
  if (output[_PD] != null) {
    contents[_PD] = (0, import_smithy_client.expectString)(output[_PD]);
  }
  return contents;
}, "de_GetUserPolicyResponse");
var de_GetUserResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Us] != null) {
    contents[_Us] = de_User(output[_Us], context);
  }
  return contents;
}, "de_GetUserResponse");
var de_Group = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_P] != null) {
    contents[_P] = (0, import_smithy_client.expectString)(output[_P]);
  }
  if (output[_GN] != null) {
    contents[_GN] = (0, import_smithy_client.expectString)(output[_GN]);
  }
  if (output[_GI] != null) {
    contents[_GI] = (0, import_smithy_client.expectString)(output[_GI]);
  }
  if (output[_Ar] != null) {
    contents[_Ar] = (0, import_smithy_client.expectString)(output[_Ar]);
  }
  if (output[_CD] != null) {
    contents[_CD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_CD]));
  }
  return contents;
}, "de_Group");
var de_GroupDetail = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_P] != null) {
    contents[_P] = (0, import_smithy_client.expectString)(output[_P]);
  }
  if (output[_GN] != null) {
    contents[_GN] = (0, import_smithy_client.expectString)(output[_GN]);
  }
  if (output[_GI] != null) {
    contents[_GI] = (0, import_smithy_client.expectString)(output[_GI]);
  }
  if (output[_Ar] != null) {
    contents[_Ar] = (0, import_smithy_client.expectString)(output[_Ar]);
  }
  if (output[_CD] != null) {
    contents[_CD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_CD]));
  }
  if (output.GroupPolicyList === "") {
    contents[_GPL] = [];
  } else if (output[_GPL] != null && output[_GPL][_me] != null) {
    contents[_GPL] = de_policyDetailListType((0, import_smithy_client.getArrayIfSingleItem)(output[_GPL][_me]), context);
  }
  if (output.AttachedManagedPolicies === "") {
    contents[_AMP] = [];
  } else if (output[_AMP] != null && output[_AMP][_me] != null) {
    contents[_AMP] = de_attachedPoliciesListType((0, import_smithy_client.getArrayIfSingleItem)(output[_AMP][_me]), context);
  }
  return contents;
}, "de_GroupDetail");
var de_groupDetailListType = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_GroupDetail(entry, context);
  });
}, "de_groupDetailListType");
var de_groupListType = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_Group(entry, context);
  });
}, "de_groupListType");
var de_groupNameListType = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return (0, import_smithy_client.expectString)(entry);
  });
}, "de_groupNameListType");
var de_InstanceProfile = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_P] != null) {
    contents[_P] = (0, import_smithy_client.expectString)(output[_P]);
  }
  if (output[_IPN] != null) {
    contents[_IPN] = (0, import_smithy_client.expectString)(output[_IPN]);
  }
  if (output[_IPI] != null) {
    contents[_IPI] = (0, import_smithy_client.expectString)(output[_IPI]);
  }
  if (output[_Ar] != null) {
    contents[_Ar] = (0, import_smithy_client.expectString)(output[_Ar]);
  }
  if (output[_CD] != null) {
    contents[_CD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_CD]));
  }
  if (output.Roles === "") {
    contents[_Rol] = [];
  } else if (output[_Rol] != null && output[_Rol][_me] != null) {
    contents[_Rol] = de_roleListType((0, import_smithy_client.getArrayIfSingleItem)(output[_Rol][_me]), context);
  }
  if (output.Tags === "") {
    contents[_T] = [];
  } else if (output[_T] != null && output[_T][_me] != null) {
    contents[_T] = de_tagListType((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_me]), context);
  }
  return contents;
}, "de_InstanceProfile");
var de_instanceProfileListType = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_InstanceProfile(entry, context);
  });
}, "de_instanceProfileListType");
var de_InvalidAuthenticationCodeException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_InvalidAuthenticationCodeException");
var de_InvalidCertificateException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_InvalidCertificateException");
var de_InvalidInputException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_InvalidInputException");
var de_InvalidPublicKeyException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_InvalidPublicKeyException");
var de_InvalidUserTypeException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_InvalidUserTypeException");
var de_KeyPairMismatchException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_KeyPairMismatchException");
var de_LimitExceededException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_LimitExceededException");
var de_ListAccessKeysResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.AccessKeyMetadata === "") {
    contents[_AKM] = [];
  } else if (output[_AKM] != null && output[_AKM][_me] != null) {
    contents[_AKM] = de_accessKeyMetadataListType((0, import_smithy_client.getArrayIfSingleItem)(output[_AKM][_me]), context);
  }
  if (output[_IT] != null) {
    contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_ListAccessKeysResponse");
var de_ListAccountAliasesResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.AccountAliases === "") {
    contents[_AAc] = [];
  } else if (output[_AAc] != null && output[_AAc][_me] != null) {
    contents[_AAc] = de_accountAliasListType((0, import_smithy_client.getArrayIfSingleItem)(output[_AAc][_me]), context);
  }
  if (output[_IT] != null) {
    contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_ListAccountAliasesResponse");
var de_ListAttachedGroupPoliciesResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.AttachedPolicies === "") {
    contents[_AP] = [];
  } else if (output[_AP] != null && output[_AP][_me] != null) {
    contents[_AP] = de_attachedPoliciesListType((0, import_smithy_client.getArrayIfSingleItem)(output[_AP][_me]), context);
  }
  if (output[_IT] != null) {
    contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_ListAttachedGroupPoliciesResponse");
var de_ListAttachedRolePoliciesResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.AttachedPolicies === "") {
    contents[_AP] = [];
  } else if (output[_AP] != null && output[_AP][_me] != null) {
    contents[_AP] = de_attachedPoliciesListType((0, import_smithy_client.getArrayIfSingleItem)(output[_AP][_me]), context);
  }
  if (output[_IT] != null) {
    contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_ListAttachedRolePoliciesResponse");
var de_ListAttachedUserPoliciesResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.AttachedPolicies === "") {
    contents[_AP] = [];
  } else if (output[_AP] != null && output[_AP][_me] != null) {
    contents[_AP] = de_attachedPoliciesListType((0, import_smithy_client.getArrayIfSingleItem)(output[_AP][_me]), context);
  }
  if (output[_IT] != null) {
    contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_ListAttachedUserPoliciesResponse");
var de_ListEntitiesForPolicyResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.PolicyGroups === "") {
    contents[_PG] = [];
  } else if (output[_PG] != null && output[_PG][_me] != null) {
    contents[_PG] = de_PolicyGroupListType((0, import_smithy_client.getArrayIfSingleItem)(output[_PG][_me]), context);
  }
  if (output.PolicyUsers === "") {
    contents[_PU] = [];
  } else if (output[_PU] != null && output[_PU][_me] != null) {
    contents[_PU] = de_PolicyUserListType((0, import_smithy_client.getArrayIfSingleItem)(output[_PU][_me]), context);
  }
  if (output.PolicyRoles === "") {
    contents[_PR] = [];
  } else if (output[_PR] != null && output[_PR][_me] != null) {
    contents[_PR] = de_PolicyRoleListType((0, import_smithy_client.getArrayIfSingleItem)(output[_PR][_me]), context);
  }
  if (output[_IT] != null) {
    contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_ListEntitiesForPolicyResponse");
var de_ListGroupPoliciesResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.PolicyNames === "") {
    contents[_PNo] = [];
  } else if (output[_PNo] != null && output[_PNo][_me] != null) {
    contents[_PNo] = de_policyNameListType((0, import_smithy_client.getArrayIfSingleItem)(output[_PNo][_me]), context);
  }
  if (output[_IT] != null) {
    contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_ListGroupPoliciesResponse");
var de_ListGroupsForUserResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.Groups === "") {
    contents[_Gro] = [];
  } else if (output[_Gro] != null && output[_Gro][_me] != null) {
    contents[_Gro] = de_groupListType((0, import_smithy_client.getArrayIfSingleItem)(output[_Gro][_me]), context);
  }
  if (output[_IT] != null) {
    contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_ListGroupsForUserResponse");
var de_ListGroupsResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.Groups === "") {
    contents[_Gro] = [];
  } else if (output[_Gro] != null && output[_Gro][_me] != null) {
    contents[_Gro] = de_groupListType((0, import_smithy_client.getArrayIfSingleItem)(output[_Gro][_me]), context);
  }
  if (output[_IT] != null) {
    contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_ListGroupsResponse");
var de_ListInstanceProfilesForRoleResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.InstanceProfiles === "") {
    contents[_IPn] = [];
  } else if (output[_IPn] != null && output[_IPn][_me] != null) {
    contents[_IPn] = de_instanceProfileListType((0, import_smithy_client.getArrayIfSingleItem)(output[_IPn][_me]), context);
  }
  if (output[_IT] != null) {
    contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_ListInstanceProfilesForRoleResponse");
var de_ListInstanceProfilesResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.InstanceProfiles === "") {
    contents[_IPn] = [];
  } else if (output[_IPn] != null && output[_IPn][_me] != null) {
    contents[_IPn] = de_instanceProfileListType((0, import_smithy_client.getArrayIfSingleItem)(output[_IPn][_me]), context);
  }
  if (output[_IT] != null) {
    contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_ListInstanceProfilesResponse");
var de_ListInstanceProfileTagsResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.Tags === "") {
    contents[_T] = [];
  } else if (output[_T] != null && output[_T][_me] != null) {
    contents[_T] = de_tagListType((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_me]), context);
  }
  if (output[_IT] != null) {
    contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_ListInstanceProfileTagsResponse");
var de_ListMFADevicesResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.MFADevices === "") {
    contents[_MFAD] = [];
  } else if (output[_MFAD] != null && output[_MFAD][_me] != null) {
    contents[_MFAD] = de_mfaDeviceListType((0, import_smithy_client.getArrayIfSingleItem)(output[_MFAD][_me]), context);
  }
  if (output[_IT] != null) {
    contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_ListMFADevicesResponse");
var de_ListMFADeviceTagsResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.Tags === "") {
    contents[_T] = [];
  } else if (output[_T] != null && output[_T][_me] != null) {
    contents[_T] = de_tagListType((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_me]), context);
  }
  if (output[_IT] != null) {
    contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_ListMFADeviceTagsResponse");
var de_ListOpenIDConnectProvidersResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.OpenIDConnectProviderList === "") {
    contents[_OIDCPL] = [];
  } else if (output[_OIDCPL] != null && output[_OIDCPL][_me] != null) {
    contents[_OIDCPL] = de_OpenIDConnectProviderListType((0, import_smithy_client.getArrayIfSingleItem)(output[_OIDCPL][_me]), context);
  }
  return contents;
}, "de_ListOpenIDConnectProvidersResponse");
var de_ListOpenIDConnectProviderTagsResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.Tags === "") {
    contents[_T] = [];
  } else if (output[_T] != null && output[_T][_me] != null) {
    contents[_T] = de_tagListType((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_me]), context);
  }
  if (output[_IT] != null) {
    contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_ListOpenIDConnectProviderTagsResponse");
var de_ListOrganizationsFeaturesResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_OI] != null) {
    contents[_OI] = (0, import_smithy_client.expectString)(output[_OI]);
  }
  if (output.EnabledFeatures === "") {
    contents[_EFn] = [];
  } else if (output[_EFn] != null && output[_EFn][_me] != null) {
    contents[_EFn] = de_FeaturesListType((0, import_smithy_client.getArrayIfSingleItem)(output[_EFn][_me]), context);
  }
  return contents;
}, "de_ListOrganizationsFeaturesResponse");
var de_ListPoliciesGrantingServiceAccessEntry = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_SNer] != null) {
    contents[_SNer] = (0, import_smithy_client.expectString)(output[_SNer]);
  }
  if (output.Policies === "") {
    contents[_Pol] = [];
  } else if (output[_Pol] != null && output[_Pol][_me] != null) {
    contents[_Pol] = de_policyGrantingServiceAccessListType((0, import_smithy_client.getArrayIfSingleItem)(output[_Pol][_me]), context);
  }
  return contents;
}, "de_ListPoliciesGrantingServiceAccessEntry");
var de_ListPoliciesGrantingServiceAccessResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.PoliciesGrantingServiceAccess === "") {
    contents[_PGSA] = [];
  } else if (output[_PGSA] != null && output[_PGSA][_me] != null) {
    contents[_PGSA] = de_listPolicyGrantingServiceAccessResponseListType(
      (0, import_smithy_client.getArrayIfSingleItem)(output[_PGSA][_me]),
      context
    );
  }
  if (output[_IT] != null) {
    contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_ListPoliciesGrantingServiceAccessResponse");
var de_ListPoliciesResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.Policies === "") {
    contents[_Pol] = [];
  } else if (output[_Pol] != null && output[_Pol][_me] != null) {
    contents[_Pol] = de_policyListType((0, import_smithy_client.getArrayIfSingleItem)(output[_Pol][_me]), context);
  }
  if (output[_IT] != null) {
    contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_ListPoliciesResponse");
var de_listPolicyGrantingServiceAccessResponseListType = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_ListPoliciesGrantingServiceAccessEntry(entry, context);
  });
}, "de_listPolicyGrantingServiceAccessResponseListType");
var de_ListPolicyTagsResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.Tags === "") {
    contents[_T] = [];
  } else if (output[_T] != null && output[_T][_me] != null) {
    contents[_T] = de_tagListType((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_me]), context);
  }
  if (output[_IT] != null) {
    contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_ListPolicyTagsResponse");
var de_ListPolicyVersionsResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.Versions === "") {
    contents[_Ve] = [];
  } else if (output[_Ve] != null && output[_Ve][_me] != null) {
    contents[_Ve] = de_policyDocumentVersionListType((0, import_smithy_client.getArrayIfSingleItem)(output[_Ve][_me]), context);
  }
  if (output[_IT] != null) {
    contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_ListPolicyVersionsResponse");
var de_ListRolePoliciesResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.PolicyNames === "") {
    contents[_PNo] = [];
  } else if (output[_PNo] != null && output[_PNo][_me] != null) {
    contents[_PNo] = de_policyNameListType((0, import_smithy_client.getArrayIfSingleItem)(output[_PNo][_me]), context);
  }
  if (output[_IT] != null) {
    contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_ListRolePoliciesResponse");
var de_ListRolesResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.Roles === "") {
    contents[_Rol] = [];
  } else if (output[_Rol] != null && output[_Rol][_me] != null) {
    contents[_Rol] = de_roleListType((0, import_smithy_client.getArrayIfSingleItem)(output[_Rol][_me]), context);
  }
  if (output[_IT] != null) {
    contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_ListRolesResponse");
var de_ListRoleTagsResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.Tags === "") {
    contents[_T] = [];
  } else if (output[_T] != null && output[_T][_me] != null) {
    contents[_T] = de_tagListType((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_me]), context);
  }
  if (output[_IT] != null) {
    contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_ListRoleTagsResponse");
var de_ListSAMLProvidersResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.SAMLProviderList === "") {
    contents[_SAMLPL] = [];
  } else if (output[_SAMLPL] != null && output[_SAMLPL][_me] != null) {
    contents[_SAMLPL] = de_SAMLProviderListType((0, import_smithy_client.getArrayIfSingleItem)(output[_SAMLPL][_me]), context);
  }
  return contents;
}, "de_ListSAMLProvidersResponse");
var de_ListSAMLProviderTagsResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.Tags === "") {
    contents[_T] = [];
  } else if (output[_T] != null && output[_T][_me] != null) {
    contents[_T] = de_tagListType((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_me]), context);
  }
  if (output[_IT] != null) {
    contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_ListSAMLProviderTagsResponse");
var de_ListServerCertificatesResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.ServerCertificateMetadataList === "") {
    contents[_SCML] = [];
  } else if (output[_SCML] != null && output[_SCML][_me] != null) {
    contents[_SCML] = de_serverCertificateMetadataListType((0, import_smithy_client.getArrayIfSingleItem)(output[_SCML][_me]), context);
  }
  if (output[_IT] != null) {
    contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_ListServerCertificatesResponse");
var de_ListServerCertificateTagsResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.Tags === "") {
    contents[_T] = [];
  } else if (output[_T] != null && output[_T][_me] != null) {
    contents[_T] = de_tagListType((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_me]), context);
  }
  if (output[_IT] != null) {
    contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_ListServerCertificateTagsResponse");
var de_ListServiceSpecificCredentialsResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.ServiceSpecificCredentials === "") {
    contents[_SSCe] = [];
  } else if (output[_SSCe] != null && output[_SSCe][_me] != null) {
    contents[_SSCe] = de_ServiceSpecificCredentialsListType((0, import_smithy_client.getArrayIfSingleItem)(output[_SSCe][_me]), context);
  }
  return contents;
}, "de_ListServiceSpecificCredentialsResponse");
var de_ListSigningCertificatesResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.Certificates === "") {
    contents[_Cer] = [];
  } else if (output[_Cer] != null && output[_Cer][_me] != null) {
    contents[_Cer] = de_certificateListType((0, import_smithy_client.getArrayIfSingleItem)(output[_Cer][_me]), context);
  }
  if (output[_IT] != null) {
    contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_ListSigningCertificatesResponse");
var de_ListSSHPublicKeysResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.SSHPublicKeys === "") {
    contents[_SSHPKu] = [];
  } else if (output[_SSHPKu] != null && output[_SSHPKu][_me] != null) {
    contents[_SSHPKu] = de_SSHPublicKeyListType((0, import_smithy_client.getArrayIfSingleItem)(output[_SSHPKu][_me]), context);
  }
  if (output[_IT] != null) {
    contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_ListSSHPublicKeysResponse");
var de_ListUserPoliciesResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.PolicyNames === "") {
    contents[_PNo] = [];
  } else if (output[_PNo] != null && output[_PNo][_me] != null) {
    contents[_PNo] = de_policyNameListType((0, import_smithy_client.getArrayIfSingleItem)(output[_PNo][_me]), context);
  }
  if (output[_IT] != null) {
    contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_ListUserPoliciesResponse");
var de_ListUsersResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.Users === "") {
    contents[_Use] = [];
  } else if (output[_Use] != null && output[_Use][_me] != null) {
    contents[_Use] = de_userListType((0, import_smithy_client.getArrayIfSingleItem)(output[_Use][_me]), context);
  }
  if (output[_IT] != null) {
    contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_ListUsersResponse");
var de_ListUserTagsResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.Tags === "") {
    contents[_T] = [];
  } else if (output[_T] != null && output[_T][_me] != null) {
    contents[_T] = de_tagListType((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_me]), context);
  }
  if (output[_IT] != null) {
    contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_ListUserTagsResponse");
var de_ListVirtualMFADevicesResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.VirtualMFADevices === "") {
    contents[_VMFADi] = [];
  } else if (output[_VMFADi] != null && output[_VMFADi][_me] != null) {
    contents[_VMFADi] = de_virtualMFADeviceListType((0, import_smithy_client.getArrayIfSingleItem)(output[_VMFADi][_me]), context);
  }
  if (output[_IT] != null) {
    contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_ListVirtualMFADevicesResponse");
var de_LoginProfile = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_UN] != null) {
    contents[_UN] = (0, import_smithy_client.expectString)(output[_UN]);
  }
  if (output[_CD] != null) {
    contents[_CD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_CD]));
  }
  if (output[_PRR] != null) {
    contents[_PRR] = (0, import_smithy_client.parseBoolean)(output[_PRR]);
  }
  return contents;
}, "de_LoginProfile");
var de_MalformedCertificateException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_MalformedCertificateException");
var de_MalformedPolicyDocumentException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_MalformedPolicyDocumentException");
var de_ManagedPolicyDetail = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_PN] != null) {
    contents[_PN] = (0, import_smithy_client.expectString)(output[_PN]);
  }
  if (output[_PI] != null) {
    contents[_PI] = (0, import_smithy_client.expectString)(output[_PI]);
  }
  if (output[_Ar] != null) {
    contents[_Ar] = (0, import_smithy_client.expectString)(output[_Ar]);
  }
  if (output[_P] != null) {
    contents[_P] = (0, import_smithy_client.expectString)(output[_P]);
  }
  if (output[_DVI] != null) {
    contents[_DVI] = (0, import_smithy_client.expectString)(output[_DVI]);
  }
  if (output[_ACt] != null) {
    contents[_ACt] = (0, import_smithy_client.strictParseInt32)(output[_ACt]);
  }
  if (output[_PBUC] != null) {
    contents[_PBUC] = (0, import_smithy_client.strictParseInt32)(output[_PBUC]);
  }
  if (output[_IA] != null) {
    contents[_IA] = (0, import_smithy_client.parseBoolean)(output[_IA]);
  }
  if (output[_D] != null) {
    contents[_D] = (0, import_smithy_client.expectString)(output[_D]);
  }
  if (output[_CD] != null) {
    contents[_CD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_CD]));
  }
  if (output[_UD] != null) {
    contents[_UD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_UD]));
  }
  if (output.PolicyVersionList === "") {
    contents[_PVL] = [];
  } else if (output[_PVL] != null && output[_PVL][_me] != null) {
    contents[_PVL] = de_policyDocumentVersionListType((0, import_smithy_client.getArrayIfSingleItem)(output[_PVL][_me]), context);
  }
  return contents;
}, "de_ManagedPolicyDetail");
var de_ManagedPolicyDetailListType = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_ManagedPolicyDetail(entry, context);
  });
}, "de_ManagedPolicyDetailListType");
var de_MFADevice = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_UN] != null) {
    contents[_UN] = (0, import_smithy_client.expectString)(output[_UN]);
  }
  if (output[_SNe] != null) {
    contents[_SNe] = (0, import_smithy_client.expectString)(output[_SNe]);
  }
  if (output[_EDn] != null) {
    contents[_EDn] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_EDn]));
  }
  return contents;
}, "de_MFADevice");
var de_mfaDeviceListType = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_MFADevice(entry, context);
  });
}, "de_mfaDeviceListType");
var de_NoSuchEntityException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_NoSuchEntityException");
var de_OpenIDConnectProviderListEntry = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Ar] != null) {
    contents[_Ar] = (0, import_smithy_client.expectString)(output[_Ar]);
  }
  return contents;
}, "de_OpenIDConnectProviderListEntry");
var de_OpenIDConnectProviderListType = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_OpenIDConnectProviderListEntry(entry, context);
  });
}, "de_OpenIDConnectProviderListType");
var de_OpenIdIdpCommunicationErrorException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_OpenIdIdpCommunicationErrorException");
var de_OrganizationNotFoundException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Me] != null) {
    contents[_Me] = (0, import_smithy_client.expectString)(output[_Me]);
  }
  return contents;
}, "de_OrganizationNotFoundException");
var de_OrganizationNotInAllFeaturesModeException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Me] != null) {
    contents[_Me] = (0, import_smithy_client.expectString)(output[_Me]);
  }
  return contents;
}, "de_OrganizationNotInAllFeaturesModeException");
var de_OrganizationsDecisionDetail = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_ABO] != null) {
    contents[_ABO] = (0, import_smithy_client.parseBoolean)(output[_ABO]);
  }
  return contents;
}, "de_OrganizationsDecisionDetail");
var de_PasswordPolicy = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_MPL] != null) {
    contents[_MPL] = (0, import_smithy_client.strictParseInt32)(output[_MPL]);
  }
  if (output[_RS] != null) {
    contents[_RS] = (0, import_smithy_client.parseBoolean)(output[_RS]);
  }
  if (output[_RNe] != null) {
    contents[_RNe] = (0, import_smithy_client.parseBoolean)(output[_RNe]);
  }
  if (output[_RUC] != null) {
    contents[_RUC] = (0, import_smithy_client.parseBoolean)(output[_RUC]);
  }
  if (output[_RLC] != null) {
    contents[_RLC] = (0, import_smithy_client.parseBoolean)(output[_RLC]);
  }
  if (output[_AUTCP] != null) {
    contents[_AUTCP] = (0, import_smithy_client.parseBoolean)(output[_AUTCP]);
  }
  if (output[_EPx] != null) {
    contents[_EPx] = (0, import_smithy_client.parseBoolean)(output[_EPx]);
  }
  if (output[_MPA] != null) {
    contents[_MPA] = (0, import_smithy_client.strictParseInt32)(output[_MPA]);
  }
  if (output[_PRPa] != null) {
    contents[_PRPa] = (0, import_smithy_client.strictParseInt32)(output[_PRPa]);
  }
  if (output[_HE] != null) {
    contents[_HE] = (0, import_smithy_client.parseBoolean)(output[_HE]);
  }
  return contents;
}, "de_PasswordPolicy");
var de_PasswordPolicyViolationException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_PasswordPolicyViolationException");
var de_PermissionsBoundaryDecisionDetail = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_ABPB] != null) {
    contents[_ABPB] = (0, import_smithy_client.parseBoolean)(output[_ABPB]);
  }
  return contents;
}, "de_PermissionsBoundaryDecisionDetail");
var de_Policy = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_PN] != null) {
    contents[_PN] = (0, import_smithy_client.expectString)(output[_PN]);
  }
  if (output[_PI] != null) {
    contents[_PI] = (0, import_smithy_client.expectString)(output[_PI]);
  }
  if (output[_Ar] != null) {
    contents[_Ar] = (0, import_smithy_client.expectString)(output[_Ar]);
  }
  if (output[_P] != null) {
    contents[_P] = (0, import_smithy_client.expectString)(output[_P]);
  }
  if (output[_DVI] != null) {
    contents[_DVI] = (0, import_smithy_client.expectString)(output[_DVI]);
  }
  if (output[_ACt] != null) {
    contents[_ACt] = (0, import_smithy_client.strictParseInt32)(output[_ACt]);
  }
  if (output[_PBUC] != null) {
    contents[_PBUC] = (0, import_smithy_client.strictParseInt32)(output[_PBUC]);
  }
  if (output[_IA] != null) {
    contents[_IA] = (0, import_smithy_client.parseBoolean)(output[_IA]);
  }
  if (output[_D] != null) {
    contents[_D] = (0, import_smithy_client.expectString)(output[_D]);
  }
  if (output[_CD] != null) {
    contents[_CD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_CD]));
  }
  if (output[_UD] != null) {
    contents[_UD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_UD]));
  }
  if (output.Tags === "") {
    contents[_T] = [];
  } else if (output[_T] != null && output[_T][_me] != null) {
    contents[_T] = de_tagListType((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_me]), context);
  }
  return contents;
}, "de_Policy");
var de_PolicyDetail = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_PN] != null) {
    contents[_PN] = (0, import_smithy_client.expectString)(output[_PN]);
  }
  if (output[_PD] != null) {
    contents[_PD] = (0, import_smithy_client.expectString)(output[_PD]);
  }
  return contents;
}, "de_PolicyDetail");
var de_policyDetailListType = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_PolicyDetail(entry, context);
  });
}, "de_policyDetailListType");
var de_policyDocumentVersionListType = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_PolicyVersion(entry, context);
  });
}, "de_policyDocumentVersionListType");
var de_PolicyEvaluationException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_PolicyEvaluationException");
var de_PolicyGrantingServiceAccess = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_PN] != null) {
    contents[_PN] = (0, import_smithy_client.expectString)(output[_PN]);
  }
  if (output[_PT] != null) {
    contents[_PT] = (0, import_smithy_client.expectString)(output[_PT]);
  }
  if (output[_PA] != null) {
    contents[_PA] = (0, import_smithy_client.expectString)(output[_PA]);
  }
  if (output[_ET] != null) {
    contents[_ET] = (0, import_smithy_client.expectString)(output[_ET]);
  }
  if (output[_EN] != null) {
    contents[_EN] = (0, import_smithy_client.expectString)(output[_EN]);
  }
  return contents;
}, "de_PolicyGrantingServiceAccess");
var de_policyGrantingServiceAccessListType = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_PolicyGrantingServiceAccess(entry, context);
  });
}, "de_policyGrantingServiceAccessListType");
var de_PolicyGroup = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_GN] != null) {
    contents[_GN] = (0, import_smithy_client.expectString)(output[_GN]);
  }
  if (output[_GI] != null) {
    contents[_GI] = (0, import_smithy_client.expectString)(output[_GI]);
  }
  return contents;
}, "de_PolicyGroup");
var de_PolicyGroupListType = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_PolicyGroup(entry, context);
  });
}, "de_PolicyGroupListType");
var de_policyListType = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_Policy(entry, context);
  });
}, "de_policyListType");
var de_policyNameListType = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return (0, import_smithy_client.expectString)(entry);
  });
}, "de_policyNameListType");
var de_PolicyNotAttachableException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_PolicyNotAttachableException");
var de_PolicyRole = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_RN] != null) {
    contents[_RN] = (0, import_smithy_client.expectString)(output[_RN]);
  }
  if (output[_RI] != null) {
    contents[_RI] = (0, import_smithy_client.expectString)(output[_RI]);
  }
  return contents;
}, "de_PolicyRole");
var de_PolicyRoleListType = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_PolicyRole(entry, context);
  });
}, "de_PolicyRoleListType");
var de_PolicyUser = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_UN] != null) {
    contents[_UN] = (0, import_smithy_client.expectString)(output[_UN]);
  }
  if (output[_UI] != null) {
    contents[_UI] = (0, import_smithy_client.expectString)(output[_UI]);
  }
  return contents;
}, "de_PolicyUser");
var de_PolicyUserListType = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_PolicyUser(entry, context);
  });
}, "de_PolicyUserListType");
var de_PolicyVersion = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Do] != null) {
    contents[_Do] = (0, import_smithy_client.expectString)(output[_Do]);
  }
  if (output[_VI] != null) {
    contents[_VI] = (0, import_smithy_client.expectString)(output[_VI]);
  }
  if (output[_IDV] != null) {
    contents[_IDV] = (0, import_smithy_client.parseBoolean)(output[_IDV]);
  }
  if (output[_CD] != null) {
    contents[_CD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_CD]));
  }
  return contents;
}, "de_PolicyVersion");
var de_Position = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_L] != null) {
    contents[_L] = (0, import_smithy_client.strictParseInt32)(output[_L]);
  }
  if (output[_Col] != null) {
    contents[_Col] = (0, import_smithy_client.strictParseInt32)(output[_Col]);
  }
  return contents;
}, "de_Position");
var de_privateKeyList = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_SAMLPrivateKey(entry, context);
  });
}, "de_privateKeyList");
var de_ReportGenerationLimitExceededException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_ReportGenerationLimitExceededException");
var de_ResetServiceSpecificCredentialResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_SSC] != null) {
    contents[_SSC] = de_ServiceSpecificCredential(output[_SSC], context);
  }
  return contents;
}, "de_ResetServiceSpecificCredentialResponse");
var de_ResourceSpecificResult = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_ERN] != null) {
    contents[_ERN] = (0, import_smithy_client.expectString)(output[_ERN]);
  }
  if (output[_ERD] != null) {
    contents[_ERD] = (0, import_smithy_client.expectString)(output[_ERD]);
  }
  if (output.MatchedStatements === "") {
    contents[_MS] = [];
  } else if (output[_MS] != null && output[_MS][_me] != null) {
    contents[_MS] = de_StatementListType((0, import_smithy_client.getArrayIfSingleItem)(output[_MS][_me]), context);
  }
  if (output.MissingContextValues === "") {
    contents[_MCV] = [];
  } else if (output[_MCV] != null && output[_MCV][_me] != null) {
    contents[_MCV] = de_ContextKeyNamesResultListType((0, import_smithy_client.getArrayIfSingleItem)(output[_MCV][_me]), context);
  }
  if (output.EvalDecisionDetails === "") {
    contents[_EDD] = {};
  } else if (output[_EDD] != null && output[_EDD][_e] != null) {
    contents[_EDD] = de_EvalDecisionDetailsType((0, import_smithy_client.getArrayIfSingleItem)(output[_EDD][_e]), context);
  }
  if (output[_PBDD] != null) {
    contents[_PBDD] = de_PermissionsBoundaryDecisionDetail(output[_PBDD], context);
  }
  return contents;
}, "de_ResourceSpecificResult");
var de_ResourceSpecificResultListType = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_ResourceSpecificResult(entry, context);
  });
}, "de_ResourceSpecificResultListType");
var de_Role = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_P] != null) {
    contents[_P] = (0, import_smithy_client.expectString)(output[_P]);
  }
  if (output[_RN] != null) {
    contents[_RN] = (0, import_smithy_client.expectString)(output[_RN]);
  }
  if (output[_RI] != null) {
    contents[_RI] = (0, import_smithy_client.expectString)(output[_RI]);
  }
  if (output[_Ar] != null) {
    contents[_Ar] = (0, import_smithy_client.expectString)(output[_Ar]);
  }
  if (output[_CD] != null) {
    contents[_CD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_CD]));
  }
  if (output[_ARPD] != null) {
    contents[_ARPD] = (0, import_smithy_client.expectString)(output[_ARPD]);
  }
  if (output[_D] != null) {
    contents[_D] = (0, import_smithy_client.expectString)(output[_D]);
  }
  if (output[_MSD] != null) {
    contents[_MSD] = (0, import_smithy_client.strictParseInt32)(output[_MSD]);
  }
  if (output[_PB] != null) {
    contents[_PB] = de_AttachedPermissionsBoundary(output[_PB], context);
  }
  if (output.Tags === "") {
    contents[_T] = [];
  } else if (output[_T] != null && output[_T][_me] != null) {
    contents[_T] = de_tagListType((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_me]), context);
  }
  if (output[_RLU] != null) {
    contents[_RLU] = de_RoleLastUsed(output[_RLU], context);
  }
  return contents;
}, "de_Role");
var de_RoleDetail = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_P] != null) {
    contents[_P] = (0, import_smithy_client.expectString)(output[_P]);
  }
  if (output[_RN] != null) {
    contents[_RN] = (0, import_smithy_client.expectString)(output[_RN]);
  }
  if (output[_RI] != null) {
    contents[_RI] = (0, import_smithy_client.expectString)(output[_RI]);
  }
  if (output[_Ar] != null) {
    contents[_Ar] = (0, import_smithy_client.expectString)(output[_Ar]);
  }
  if (output[_CD] != null) {
    contents[_CD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_CD]));
  }
  if (output[_ARPD] != null) {
    contents[_ARPD] = (0, import_smithy_client.expectString)(output[_ARPD]);
  }
  if (output.InstanceProfileList === "") {
    contents[_IPL] = [];
  } else if (output[_IPL] != null && output[_IPL][_me] != null) {
    contents[_IPL] = de_instanceProfileListType((0, import_smithy_client.getArrayIfSingleItem)(output[_IPL][_me]), context);
  }
  if (output.RolePolicyList === "") {
    contents[_RPL] = [];
  } else if (output[_RPL] != null && output[_RPL][_me] != null) {
    contents[_RPL] = de_policyDetailListType((0, import_smithy_client.getArrayIfSingleItem)(output[_RPL][_me]), context);
  }
  if (output.AttachedManagedPolicies === "") {
    contents[_AMP] = [];
  } else if (output[_AMP] != null && output[_AMP][_me] != null) {
    contents[_AMP] = de_attachedPoliciesListType((0, import_smithy_client.getArrayIfSingleItem)(output[_AMP][_me]), context);
  }
  if (output[_PB] != null) {
    contents[_PB] = de_AttachedPermissionsBoundary(output[_PB], context);
  }
  if (output.Tags === "") {
    contents[_T] = [];
  } else if (output[_T] != null && output[_T][_me] != null) {
    contents[_T] = de_tagListType((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_me]), context);
  }
  if (output[_RLU] != null) {
    contents[_RLU] = de_RoleLastUsed(output[_RLU], context);
  }
  return contents;
}, "de_RoleDetail");
var de_roleDetailListType = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_RoleDetail(entry, context);
  });
}, "de_roleDetailListType");
var de_RoleLastUsed = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_LUD] != null) {
    contents[_LUD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_LUD]));
  }
  if (output[_R] != null) {
    contents[_R] = (0, import_smithy_client.expectString)(output[_R]);
  }
  return contents;
}, "de_RoleLastUsed");
var de_roleListType = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_Role(entry, context);
  });
}, "de_roleListType");
var de_RoleUsageListType = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_RoleUsageType(entry, context);
  });
}, "de_RoleUsageListType");
var de_RoleUsageType = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_R] != null) {
    contents[_R] = (0, import_smithy_client.expectString)(output[_R]);
  }
  if (output.Resources === "") {
    contents[_Res] = [];
  } else if (output[_Res] != null && output[_Res][_me] != null) {
    contents[_Res] = de_ArnListType((0, import_smithy_client.getArrayIfSingleItem)(output[_Res][_me]), context);
  }
  return contents;
}, "de_RoleUsageType");
var de_SAMLPrivateKey = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_KI] != null) {
    contents[_KI] = (0, import_smithy_client.expectString)(output[_KI]);
  }
  if (output[_Ti] != null) {
    contents[_Ti] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_Ti]));
  }
  return contents;
}, "de_SAMLPrivateKey");
var de_SAMLProviderListEntry = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Ar] != null) {
    contents[_Ar] = (0, import_smithy_client.expectString)(output[_Ar]);
  }
  if (output[_VU] != null) {
    contents[_VU] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_VU]));
  }
  if (output[_CD] != null) {
    contents[_CD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_CD]));
  }
  return contents;
}, "de_SAMLProviderListEntry");
var de_SAMLProviderListType = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_SAMLProviderListEntry(entry, context);
  });
}, "de_SAMLProviderListType");
var de_ServerCertificate = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_SCM] != null) {
    contents[_SCM] = de_ServerCertificateMetadata(output[_SCM], context);
  }
  if (output[_CB] != null) {
    contents[_CB] = (0, import_smithy_client.expectString)(output[_CB]);
  }
  if (output[_CC] != null) {
    contents[_CC] = (0, import_smithy_client.expectString)(output[_CC]);
  }
  if (output.Tags === "") {
    contents[_T] = [];
  } else if (output[_T] != null && output[_T][_me] != null) {
    contents[_T] = de_tagListType((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_me]), context);
  }
  return contents;
}, "de_ServerCertificate");
var de_ServerCertificateMetadata = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_P] != null) {
    contents[_P] = (0, import_smithy_client.expectString)(output[_P]);
  }
  if (output[_SCN] != null) {
    contents[_SCN] = (0, import_smithy_client.expectString)(output[_SCN]);
  }
  if (output[_SCI] != null) {
    contents[_SCI] = (0, import_smithy_client.expectString)(output[_SCI]);
  }
  if (output[_Ar] != null) {
    contents[_Ar] = (0, import_smithy_client.expectString)(output[_Ar]);
  }
  if (output[_UDp] != null) {
    contents[_UDp] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_UDp]));
  }
  if (output[_Ex] != null) {
    contents[_Ex] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_Ex]));
  }
  return contents;
}, "de_ServerCertificateMetadata");
var de_serverCertificateMetadataListType = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_ServerCertificateMetadata(entry, context);
  });
}, "de_serverCertificateMetadataListType");
var de_ServiceAccessNotEnabledException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Me] != null) {
    contents[_Me] = (0, import_smithy_client.expectString)(output[_Me]);
  }
  return contents;
}, "de_ServiceAccessNotEnabledException");
var de_ServiceFailureException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_ServiceFailureException");
var de_ServiceLastAccessed = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_SN] != null) {
    contents[_SN] = (0, import_smithy_client.expectString)(output[_SN]);
  }
  if (output[_LA] != null) {
    contents[_LA] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_LA]));
  }
  if (output[_SNer] != null) {
    contents[_SNer] = (0, import_smithy_client.expectString)(output[_SNer]);
  }
  if (output[_LAE] != null) {
    contents[_LAE] = (0, import_smithy_client.expectString)(output[_LAE]);
  }
  if (output[_LAR] != null) {
    contents[_LAR] = (0, import_smithy_client.expectString)(output[_LAR]);
  }
  if (output[_TAE] != null) {
    contents[_TAE] = (0, import_smithy_client.strictParseInt32)(output[_TAE]);
  }
  if (output.TrackedActionsLastAccessed === "") {
    contents[_TALA] = [];
  } else if (output[_TALA] != null && output[_TALA][_me] != null) {
    contents[_TALA] = de_TrackedActionsLastAccessed((0, import_smithy_client.getArrayIfSingleItem)(output[_TALA][_me]), context);
  }
  return contents;
}, "de_ServiceLastAccessed");
var de_ServiceNotSupportedException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_ServiceNotSupportedException");
var de_ServicesLastAccessed = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_ServiceLastAccessed(entry, context);
  });
}, "de_ServicesLastAccessed");
var de_ServiceSpecificCredential = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_CD] != null) {
    contents[_CD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_CD]));
  }
  if (output[_SN] != null) {
    contents[_SN] = (0, import_smithy_client.expectString)(output[_SN]);
  }
  if (output[_SUN] != null) {
    contents[_SUN] = (0, import_smithy_client.expectString)(output[_SUN]);
  }
  if (output[_SP] != null) {
    contents[_SP] = (0, import_smithy_client.expectString)(output[_SP]);
  }
  if (output[_SSCI] != null) {
    contents[_SSCI] = (0, import_smithy_client.expectString)(output[_SSCI]);
  }
  if (output[_UN] != null) {
    contents[_UN] = (0, import_smithy_client.expectString)(output[_UN]);
  }
  if (output[_St] != null) {
    contents[_St] = (0, import_smithy_client.expectString)(output[_St]);
  }
  return contents;
}, "de_ServiceSpecificCredential");
var de_ServiceSpecificCredentialMetadata = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_UN] != null) {
    contents[_UN] = (0, import_smithy_client.expectString)(output[_UN]);
  }
  if (output[_St] != null) {
    contents[_St] = (0, import_smithy_client.expectString)(output[_St]);
  }
  if (output[_SUN] != null) {
    contents[_SUN] = (0, import_smithy_client.expectString)(output[_SUN]);
  }
  if (output[_CD] != null) {
    contents[_CD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_CD]));
  }
  if (output[_SSCI] != null) {
    contents[_SSCI] = (0, import_smithy_client.expectString)(output[_SSCI]);
  }
  if (output[_SN] != null) {
    contents[_SN] = (0, import_smithy_client.expectString)(output[_SN]);
  }
  return contents;
}, "de_ServiceSpecificCredentialMetadata");
var de_ServiceSpecificCredentialsListType = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_ServiceSpecificCredentialMetadata(entry, context);
  });
}, "de_ServiceSpecificCredentialsListType");
var de_SigningCertificate = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_UN] != null) {
    contents[_UN] = (0, import_smithy_client.expectString)(output[_UN]);
  }
  if (output[_CI] != null) {
    contents[_CI] = (0, import_smithy_client.expectString)(output[_CI]);
  }
  if (output[_CB] != null) {
    contents[_CB] = (0, import_smithy_client.expectString)(output[_CB]);
  }
  if (output[_St] != null) {
    contents[_St] = (0, import_smithy_client.expectString)(output[_St]);
  }
  if (output[_UDp] != null) {
    contents[_UDp] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_UDp]));
  }
  return contents;
}, "de_SigningCertificate");
var de_SimulatePolicyResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output.EvaluationResults === "") {
    contents[_ER] = [];
  } else if (output[_ER] != null && output[_ER][_me] != null) {
    contents[_ER] = de_EvaluationResultsListType((0, import_smithy_client.getArrayIfSingleItem)(output[_ER][_me]), context);
  }
  if (output[_IT] != null) {
    contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);
  }
  if (output[_M] != null) {
    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);
  }
  return contents;
}, "de_SimulatePolicyResponse");
var de_SSHPublicKey = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_UN] != null) {
    contents[_UN] = (0, import_smithy_client.expectString)(output[_UN]);
  }
  if (output[_SSHPKI] != null) {
    contents[_SSHPKI] = (0, import_smithy_client.expectString)(output[_SSHPKI]);
  }
  if (output[_Fi] != null) {
    contents[_Fi] = (0, import_smithy_client.expectString)(output[_Fi]);
  }
  if (output[_SSHPKB] != null) {
    contents[_SSHPKB] = (0, import_smithy_client.expectString)(output[_SSHPKB]);
  }
  if (output[_St] != null) {
    contents[_St] = (0, import_smithy_client.expectString)(output[_St]);
  }
  if (output[_UDp] != null) {
    contents[_UDp] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_UDp]));
  }
  return contents;
}, "de_SSHPublicKey");
var de_SSHPublicKeyListType = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_SSHPublicKeyMetadata(entry, context);
  });
}, "de_SSHPublicKeyListType");
var de_SSHPublicKeyMetadata = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_UN] != null) {
    contents[_UN] = (0, import_smithy_client.expectString)(output[_UN]);
  }
  if (output[_SSHPKI] != null) {
    contents[_SSHPKI] = (0, import_smithy_client.expectString)(output[_SSHPKI]);
  }
  if (output[_St] != null) {
    contents[_St] = (0, import_smithy_client.expectString)(output[_St]);
  }
  if (output[_UDp] != null) {
    contents[_UDp] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_UDp]));
  }
  return contents;
}, "de_SSHPublicKeyMetadata");
var de_Statement = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_SPI] != null) {
    contents[_SPI] = (0, import_smithy_client.expectString)(output[_SPI]);
  }
  if (output[_SPT] != null) {
    contents[_SPT] = (0, import_smithy_client.expectString)(output[_SPT]);
  }
  if (output[_SPt] != null) {
    contents[_SPt] = de_Position(output[_SPt], context);
  }
  if (output[_EPn] != null) {
    contents[_EPn] = de_Position(output[_EPn], context);
  }
  return contents;
}, "de_Statement");
var de_StatementListType = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_Statement(entry, context);
  });
}, "de_StatementListType");
var de_summaryMapType = /* @__PURE__ */ __name((output, context) => {
  return output.reduce((acc, pair) => {
    if (pair["value"] === null) {
      return acc;
    }
    acc[pair["key"]] = (0, import_smithy_client.strictParseInt32)(pair["value"]);
    return acc;
  }, {});
}, "de_summaryMapType");
var de_Tag = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_K] != null) {
    contents[_K] = (0, import_smithy_client.expectString)(output[_K]);
  }
  if (output[_Va] != null) {
    contents[_Va] = (0, import_smithy_client.expectString)(output[_Va]);
  }
  return contents;
}, "de_Tag");
var de_tagListType = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_Tag(entry, context);
  });
}, "de_tagListType");
var de_thumbprintListType = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return (0, import_smithy_client.expectString)(entry);
  });
}, "de_thumbprintListType");
var de_TrackedActionLastAccessed = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_ANc] != null) {
    contents[_ANc] = (0, import_smithy_client.expectString)(output[_ANc]);
  }
  if (output[_LAEa] != null) {
    contents[_LAEa] = (0, import_smithy_client.expectString)(output[_LAEa]);
  }
  if (output[_LATa] != null) {
    contents[_LATa] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_LATa]));
  }
  if (output[_LARa] != null) {
    contents[_LARa] = (0, import_smithy_client.expectString)(output[_LARa]);
  }
  return contents;
}, "de_TrackedActionLastAccessed");
var de_TrackedActionsLastAccessed = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_TrackedActionLastAccessed(entry, context);
  });
}, "de_TrackedActionsLastAccessed");
var de_UnmodifiableEntityException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_UnmodifiableEntityException");
var de_UnrecognizedPublicKeyEncodingException = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_m] != null) {
    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);
  }
  return contents;
}, "de_UnrecognizedPublicKeyEncodingException");
var de_UpdateRoleDescriptionResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Ro] != null) {
    contents[_Ro] = de_Role(output[_Ro], context);
  }
  return contents;
}, "de_UpdateRoleDescriptionResponse");
var de_UpdateRoleResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  return contents;
}, "de_UpdateRoleResponse");
var de_UpdateSAMLProviderResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_SAMLPA] != null) {
    contents[_SAMLPA] = (0, import_smithy_client.expectString)(output[_SAMLPA]);
  }
  return contents;
}, "de_UpdateSAMLProviderResponse");
var de_UploadServerCertificateResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_SCM] != null) {
    contents[_SCM] = de_ServerCertificateMetadata(output[_SCM], context);
  }
  if (output.Tags === "") {
    contents[_T] = [];
  } else if (output[_T] != null && output[_T][_me] != null) {
    contents[_T] = de_tagListType((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_me]), context);
  }
  return contents;
}, "de_UploadServerCertificateResponse");
var de_UploadSigningCertificateResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_Cert] != null) {
    contents[_Cert] = de_SigningCertificate(output[_Cert], context);
  }
  return contents;
}, "de_UploadSigningCertificateResponse");
var de_UploadSSHPublicKeyResponse = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_SSHPK] != null) {
    contents[_SSHPK] = de_SSHPublicKey(output[_SSHPK], context);
  }
  return contents;
}, "de_UploadSSHPublicKeyResponse");
var de_User = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_P] != null) {
    contents[_P] = (0, import_smithy_client.expectString)(output[_P]);
  }
  if (output[_UN] != null) {
    contents[_UN] = (0, import_smithy_client.expectString)(output[_UN]);
  }
  if (output[_UI] != null) {
    contents[_UI] = (0, import_smithy_client.expectString)(output[_UI]);
  }
  if (output[_Ar] != null) {
    contents[_Ar] = (0, import_smithy_client.expectString)(output[_Ar]);
  }
  if (output[_CD] != null) {
    contents[_CD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_CD]));
  }
  if (output[_PLU] != null) {
    contents[_PLU] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_PLU]));
  }
  if (output[_PB] != null) {
    contents[_PB] = de_AttachedPermissionsBoundary(output[_PB], context);
  }
  if (output.Tags === "") {
    contents[_T] = [];
  } else if (output[_T] != null && output[_T][_me] != null) {
    contents[_T] = de_tagListType((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_me]), context);
  }
  return contents;
}, "de_User");
var de_UserDetail = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_P] != null) {
    contents[_P] = (0, import_smithy_client.expectString)(output[_P]);
  }
  if (output[_UN] != null) {
    contents[_UN] = (0, import_smithy_client.expectString)(output[_UN]);
  }
  if (output[_UI] != null) {
    contents[_UI] = (0, import_smithy_client.expectString)(output[_UI]);
  }
  if (output[_Ar] != null) {
    contents[_Ar] = (0, import_smithy_client.expectString)(output[_Ar]);
  }
  if (output[_CD] != null) {
    contents[_CD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_CD]));
  }
  if (output.UserPolicyList === "") {
    contents[_UPL] = [];
  } else if (output[_UPL] != null && output[_UPL][_me] != null) {
    contents[_UPL] = de_policyDetailListType((0, import_smithy_client.getArrayIfSingleItem)(output[_UPL][_me]), context);
  }
  if (output.GroupList === "") {
    contents[_GL] = [];
  } else if (output[_GL] != null && output[_GL][_me] != null) {
    contents[_GL] = de_groupNameListType((0, import_smithy_client.getArrayIfSingleItem)(output[_GL][_me]), context);
  }
  if (output.AttachedManagedPolicies === "") {
    contents[_AMP] = [];
  } else if (output[_AMP] != null && output[_AMP][_me] != null) {
    contents[_AMP] = de_attachedPoliciesListType((0, import_smithy_client.getArrayIfSingleItem)(output[_AMP][_me]), context);
  }
  if (output[_PB] != null) {
    contents[_PB] = de_AttachedPermissionsBoundary(output[_PB], context);
  }
  if (output.Tags === "") {
    contents[_T] = [];
  } else if (output[_T] != null && output[_T][_me] != null) {
    contents[_T] = de_tagListType((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_me]), context);
  }
  return contents;
}, "de_UserDetail");
var de_userDetailListType = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_UserDetail(entry, context);
  });
}, "de_userDetailListType");
var de_userListType = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_User(entry, context);
  });
}, "de_userListType");
var de_VirtualMFADevice = /* @__PURE__ */ __name((output, context) => {
  const contents = {};
  if (output[_SNe] != null) {
    contents[_SNe] = (0, import_smithy_client.expectString)(output[_SNe]);
  }
  if (output[_BSS] != null) {
    contents[_BSS] = context.base64Decoder(output[_BSS]);
  }
  if (output[_QRCPNG] != null) {
    contents[_QRCPNG] = context.base64Decoder(output[_QRCPNG]);
  }
  if (output[_Us] != null) {
    contents[_Us] = de_User(output[_Us], context);
  }
  if (output[_EDn] != null) {
    contents[_EDn] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_EDn]));
  }
  if (output.Tags === "") {
    contents[_T] = [];
  } else if (output[_T] != null && output[_T][_me] != null) {
    contents[_T] = de_tagListType((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_me]), context);
  }
  return contents;
}, "de_VirtualMFADevice");
var de_virtualMFADeviceListType = /* @__PURE__ */ __name((output, context) => {
  return (output || []).filter((e) => e != null).map((entry) => {
    return de_VirtualMFADevice(entry, context);
  });
}, "de_virtualMFADeviceListType");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var throwDefaultError = (0, import_smithy_client.withBaseException)(IAMServiceException);
var buildHttpRpcRequest = /* @__PURE__ */ __name(async (context, headers, path, resolvedHostname, body) => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const contents = {
    protocol,
    hostname,
    port,
    method: "POST",
    path: basePath.endsWith("/") ? basePath.slice(0, -1) + path : basePath + path,
    headers
  };
  if (resolvedHostname !== void 0) {
    contents.hostname = resolvedHostname;
  }
  if (body !== void 0) {
    contents.body = body;
  }
  return new import_protocol_http.HttpRequest(contents);
}, "buildHttpRpcRequest");
var SHARED_HEADERS = {
  "content-type": "application/x-www-form-urlencoded"
};
var _ = "2010-05-08";
var _A = "Action";
var _AA = "AccountAlias";
var _AAc = "AccountAliases";
var _ABO = "AllowedByOrganizations";
var _ABPB = "AllowedByPermissionsBoundary";
var _AC = "AuthenticationCode1";
var _ACIDTOIDCP = "AddClientIDToOpenIDConnectProvider";
var _ACt = "AttachmentCount";
var _ACu = "AuthenticationCode2";
var _AD = "AccessDetails";
var _AEM = "AssertionEncryptionMode";
var _AGP = "AttachGroupPolicy";
var _AK = "AccessKey";
var _AKI = "AccessKeyId";
var _AKLU = "AccessKeyLastUsed";
var _AKM = "AccessKeyMetadata";
var _AMP = "AttachedManagedPolicies";
var _AN = "ActionNames";
var _ANc = "ActionName";
var _AP = "AttachedPolicies";
var _APK = "AddPrivateKey";
var _ARP = "AttachRolePolicy";
var _ARPD = "AssumeRolePolicyDocument";
var _ARTIP = "AddRoleToInstanceProfile";
var _AS = "AssignmentStatus";
var _AUP = "AttachUserPolicy";
var _AUTCP = "AllowUsersToChangePassword";
var _AUTG = "AddUserToGroup";
var _AWSSN = "AWSServiceName";
var _Ar = "Arn";
var _BSS = "Base32StringSeed";
var _C = "Code";
var _CA = "CallerArn";
var _CAA = "CreateAccountAlias";
var _CAK = "CreateAccessKey";
var _CB = "CertificateBody";
var _CC = "CertificateChain";
var _CD = "CreateDate";
var _CE = "ContextEntries";
var _CG = "CreateGroup";
var _CI = "CertificateId";
var _CID = "ClientID";
var _CIDL = "ClientIDList";
var _CIP = "CreateInstanceProfile";
var _CKN = "ContextKeyName";
var _CKNo = "ContextKeyNames";
var _CKT = "ContextKeyType";
var _CKV = "ContextKeyValues";
var _CLP = "CreateLoginProfile";
var _COIDCP = "CreateOpenIDConnectProvider";
var _CP = "ChangePassword";
var _CPV = "CreatePolicyVersion";
var _CPr = "CreatePolicy";
var _CR = "CreateRole";
var _CS = "CustomSuffix";
var _CSAMLP = "CreateSAMLProvider";
var _CSLR = "CreateServiceLinkedRole";
var _CSSC = "CreateServiceSpecificCredential";
var _CU = "CreateUser";
var _CVMFAD = "CreateVirtualMFADevice";
var _Ce = "Certifications";
var _Cer = "Certificates";
var _Cert = "Certificate";
var _Co = "Content";
var _Col = "Column";
var _D = "Description";
var _DAA = "DeleteAccountAlias";
var _DAK = "DeleteAccessKey";
var _DAPP = "DeleteAccountPasswordPolicy";
var _DG = "DeleteGroup";
var _DGP = "DeleteGroupPolicy";
var _DGPe = "DetachGroupPolicy";
var _DIP = "DeleteInstanceProfile";
var _DLP = "DeleteLoginProfile";
var _DMFAD = "DeactivateMFADevice";
var _DOIDCP = "DeleteOpenIDConnectProvider";
var _DORCM = "DisableOrganizationsRootCredentialsManagement";
var _DORS = "DisableOrganizationsRootSessions";
var _DP = "DeletePolicy";
var _DPV = "DeletePolicyVersion";
var _DR = "DeleteRole";
var _DRP = "DeleteRolePolicy";
var _DRPB = "DeleteRolePermissionsBoundary";
var _DRPe = "DetachRolePolicy";
var _DSAMLP = "DeleteSAMLProvider";
var _DSC = "DeleteServerCertificate";
var _DSCe = "DeleteSigningCertificate";
var _DSLR = "DeleteServiceLinkedRole";
var _DSSC = "DeleteServiceSpecificCredential";
var _DSSHPK = "DeleteSSHPublicKey";
var _DTI = "DeletionTaskId";
var _DU = "DeleteUser";
var _DUP = "DeleteUserPolicy";
var _DUPB = "DeleteUserPermissionsBoundary";
var _DUPe = "DetachUserPolicy";
var _DVI = "DefaultVersionId";
var _DVMFAD = "DeleteVirtualMFADevice";
var _Do = "Document";
var _E = "Encoding";
var _EAN = "EvalActionName";
var _ED = "EvalDecision";
var _EDD = "EvalDecisionDetails";
var _EDL = "EntityDetailsList";
var _EDn = "EnableDate";
var _EDr = "ErrorDetails";
var _EF = "EntityFilter";
var _EFn = "EnabledFeatures";
var _EI = "EntityInfo";
var _EMFAD = "EnableMFADevice";
var _EN = "EntityName";
var _EORCM = "EnableOrganizationsRootCredentialsManagement";
var _EORS = "EnableOrganizationsRootSessions";
var _EP = "EntityPath";
var _EPn = "EndPosition";
var _EPx = "ExpirePasswords";
var _ER = "EvaluationResults";
var _ERD = "EvalResourceDecision";
var _ERN = "EvalResourceName";
var _ET = "EntityType";
var _Er = "Error";
var _Ex = "Expiration";
var _F = "Filter";
var _Fi = "Fingerprint";
var _G = "Granularity";
var _GAAD = "GetAccountAuthorizationDetails";
var _GAKLU = "GetAccessKeyLastUsed";
var _GAPP = "GetAccountPasswordPolicy";
var _GAS = "GetAccountSummary";
var _GCKFCP = "GetContextKeysForCustomPolicy";
var _GCKFPP = "GetContextKeysForPrincipalPolicy";
var _GCR = "GenerateCredentialReport";
var _GCRe = "GetCredentialReport";
var _GDL = "GroupDetailList";
var _GETV = "GlobalEndpointTokenVersion";
var _GG = "GetGroup";
var _GGP = "GetGroupPolicy";
var _GI = "GroupId";
var _GIP = "GetInstanceProfile";
var _GL = "GroupList";
var _GLP = "GetLoginProfile";
var _GMFAD = "GetMFADevice";
var _GN = "GroupName";
var _GOAR = "GenerateOrganizationsAccessReport";
var _GOARe = "GetOrganizationsAccessReport";
var _GOIDCP = "GetOpenIDConnectProvider";
var _GP = "GetPolicy";
var _GPL = "GroupPolicyList";
var _GPV = "GetPolicyVersion";
var _GR = "GetRole";
var _GRP = "GetRolePolicy";
var _GSAMLP = "GetSAMLProvider";
var _GSC = "GetServerCertificate";
var _GSLAD = "GenerateServiceLastAccessedDetails";
var _GSLADWE = "GetServiceLastAccessedDetailsWithEntities";
var _GSLADe = "GetServiceLastAccessedDetails";
var _GSLRDS = "GetServiceLinkedRoleDeletionStatus";
var _GSSHPK = "GetSSHPublicKey";
var _GT = "GeneratedTime";
var _GU = "GetUser";
var _GUP = "GetUserPolicy";
var _Gr = "Group";
var _Gro = "Groups";
var _HE = "HardExpiry";
var _I = "Id";
var _IA = "IsAttachable";
var _IDV = "IsDefaultVersion";
var _IP = "InstanceProfile";
var _IPI = "InstanceProfileId";
var _IPL = "InstanceProfileList";
var _IPN = "InstanceProfileName";
var _IPn = "InstanceProfiles";
var _IT = "IsTruncated";
var _JCD = "JobCreationDate";
var _JCDo = "JobCompletionDate";
var _JI = "JobId";
var _JS = "JobStatus";
var _JT = "JobType";
var _K = "Key";
var _KI = "KeyId";
var _L = "Line";
var _LA = "LastAuthenticated";
var _LAA = "ListAccountAliases";
var _LAE = "LastAuthenticatedEntity";
var _LAEa = "LastAccessedEntity";
var _LAGP = "ListAttachedGroupPolicies";
var _LAK = "ListAccessKeys";
var _LAR = "LastAuthenticatedRegion";
var _LARP = "ListAttachedRolePolicies";
var _LARa = "LastAccessedRegion";
var _LAT = "LastAuthenticatedTime";
var _LATa = "LastAccessedTime";
var _LAUP = "ListAttachedUserPolicies";
var _LEFP = "ListEntitiesForPolicy";
var _LG = "ListGroups";
var _LGFU = "ListGroupsForUser";
var _LGP = "ListGroupPolicies";
var _LIP = "ListInstanceProfiles";
var _LIPFR = "ListInstanceProfilesForRole";
var _LIPT = "ListInstanceProfileTags";
var _LMFAD = "ListMFADevices";
var _LMFADT = "ListMFADeviceTags";
var _LOF = "ListOrganizationsFeatures";
var _LOIDCP = "ListOpenIDConnectProviders";
var _LOIDCPT = "ListOpenIDConnectProviderTags";
var _LP = "ListPolicies";
var _LPGSA = "ListPoliciesGrantingServiceAccess";
var _LPT = "ListPolicyTags";
var _LPV = "ListPolicyVersions";
var _LPo = "LoginProfile";
var _LR = "ListRoles";
var _LRP = "ListRolePolicies";
var _LRT = "ListRoleTags";
var _LSAMLP = "ListSAMLProviders";
var _LSAMLPT = "ListSAMLProviderTags";
var _LSC = "ListServerCertificates";
var _LSCT = "ListServerCertificateTags";
var _LSCi = "ListSigningCertificates";
var _LSSC = "ListServiceSpecificCredentials";
var _LSSHPK = "ListSSHPublicKeys";
var _LU = "ListUsers";
var _LUD = "LastUsedDate";
var _LUP = "ListUserPolicies";
var _LUT = "ListUserTags";
var _LVMFAD = "ListVirtualMFADevices";
var _M = "Marker";
var _MCV = "MissingContextValues";
var _MFAD = "MFADevices";
var _MI = "MaxItems";
var _MPA = "MaxPasswordAge";
var _MPL = "MinimumPasswordLength";
var _MS = "MatchedStatements";
var _MSD = "MaxSessionDuration";
var _Me = "Message";
var _N = "Name";
var _NGN = "NewGroupName";
var _NOSA = "NumberOfServicesAccessible";
var _NOSNA = "NumberOfServicesNotAccessed";
var _NP = "NewPassword";
var _NPe = "NewPath";
var _NSCN = "NewServerCertificateName";
var _NUN = "NewUserName";
var _OA = "OnlyAttached";
var _ODD = "OrganizationsDecisionDetail";
var _OI = "OrganizationId";
var _OIDCPA = "OpenIDConnectProviderArn";
var _OIDCPL = "OpenIDConnectProviderList";
var _OP = "OldPassword";
var _OPI = "OrganizationsPolicyId";
var _P = "Path";
var _PA = "PolicyArn";
var _PB = "PermissionsBoundary";
var _PBA = "PermissionsBoundaryArn";
var _PBDD = "PermissionsBoundaryDecisionDetail";
var _PBPIL = "PermissionsBoundaryPolicyInputList";
var _PBT = "PermissionsBoundaryType";
var _PBUC = "PermissionsBoundaryUsageCount";
var _PD = "PolicyDocument";
var _PG = "PolicyGroups";
var _PGP = "PutGroupPolicy";
var _PGSA = "PoliciesGrantingServiceAccess";
var _PI = "PolicyId";
var _PIL = "PolicyInputList";
var _PK = "PrivateKey";
var _PKL = "PrivateKeyList";
var _PLU = "PasswordLastUsed";
var _PN = "PolicyName";
var _PNo = "PolicyNames";
var _PP = "PathPrefix";
var _PPa = "PasswordPolicy";
var _PR = "PolicyRoles";
var _PRP = "PutRolePolicy";
var _PRPB = "PutRolePermissionsBoundary";
var _PRPa = "PasswordReusePrevention";
var _PRR = "PasswordResetRequired";
var _PSA = "PolicySourceArn";
var _PT = "PolicyType";
var _PU = "PolicyUsers";
var _PUF = "PolicyUsageFilter";
var _PUP = "PutUserPolicy";
var _PUPB = "PutUserPermissionsBoundary";
var _PV = "PolicyVersion";
var _PVL = "PolicyVersionList";
var _Pa = "Password";
var _Po = "Policy";
var _Pol = "Policies";
var _QRCPNG = "QRCodePNG";
var _R = "Region";
var _RA = "ResourceArns";
var _RCIDFOIDCP = "RemoveClientIDFromOpenIDConnectProvider";
var _RDL = "RoleDetailList";
var _RF = "ReportFormat";
var _RHO = "ResourceHandlingOption";
var _RI = "RoleId";
var _RLC = "RequireLowercaseCharacters";
var _RLU = "RoleLastUsed";
var _RMFAD = "ResyncMFADevice";
var _RN = "RoleName";
var _RNe = "RequireNumbers";
var _RO = "ResourceOwner";
var _RP = "ResourcePolicy";
var _RPK = "RemovePrivateKey";
var _RPL = "RolePolicyList";
var _RRFIP = "RemoveRoleFromInstanceProfile";
var _RS = "RequireSymbols";
var _RSR = "ResourceSpecificResults";
var _RSSC = "ResetServiceSpecificCredential";
var _RUC = "RequireUppercaseCharacters";
var _RUFG = "RemoveUserFromGroup";
var _RUL = "RoleUsageList";
var _Re = "Reason";
var _Res = "Resources";
var _Ro = "Role";
var _Rol = "Roles";
var _S = "Scope";
var _SAD = "SetAsDefault";
var _SAK = "SecretAccessKey";
var _SAMLMD = "SAMLMetadataDocument";
var _SAMLPA = "SAMLProviderArn";
var _SAMLPL = "SAMLProviderList";
var _SAMLPUUID = "SAMLProviderUUID";
var _SC = "ServerCertificate";
var _SCI = "ServerCertificateId";
var _SCM = "ServerCertificateMetadata";
var _SCML = "ServerCertificateMetadataList";
var _SCN = "ServerCertificateName";
var _SCP = "SimulateCustomPolicy";
var _SDPV = "SetDefaultPolicyVersion";
var _SK = "SortKey";
var _SLA = "ServicesLastAccessed";
var _SM = "SummaryMap";
var _SN = "ServiceName";
var _SNe = "SerialNumber";
var _SNer = "ServiceNamespace";
var _SNerv = "ServiceNamespaces";
var _SP = "ServicePassword";
var _SPI = "SourcePolicyId";
var _SPP = "SimulatePrincipalPolicy";
var _SPT = "SourcePolicyType";
var _SPt = "StartPosition";
var _SSC = "ServiceSpecificCredential";
var _SSCI = "ServiceSpecificCredentialId";
var _SSCe = "ServiceSpecificCredentials";
var _SSHPK = "SSHPublicKey";
var _SSHPKB = "SSHPublicKeyBody";
var _SSHPKI = "SSHPublicKeyId";
var _SSHPKu = "SSHPublicKeys";
var _SSTSP = "SetSecurityTokenServicePreferences";
var _SUN = "ServiceUserName";
var _St = "Status";
var _Sta = "State";
var _T = "Tags";
var _TAE = "TotalAuthenticatedEntities";
var _TALA = "TrackedActionsLastAccessed";
var _TIP = "TagInstanceProfile";
var _TK = "TagKeys";
var _TL = "ThumbprintList";
var _TMFAD = "TagMFADevice";
var _TOIDCP = "TagOpenIDConnectProvider";
var _TP = "TagPolicy";
var _TR = "TagRole";
var _TSAMLP = "TagSAMLProvider";
var _TSC = "TagServerCertificate";
var _TU = "TagUser";
var _Ti = "Timestamp";
var _Ty = "Type";
var _U = "Url";
var _UAK = "UpdateAccessKey";
var _UAPP = "UpdateAccountPasswordPolicy";
var _UARP = "UpdateAssumeRolePolicy";
var _UD = "UpdateDate";
var _UDL = "UserDetailList";
var _UDp = "UploadDate";
var _UG = "UpdateGroup";
var _UI = "UserId";
var _UIP = "UntagInstanceProfile";
var _ULP = "UpdateLoginProfile";
var _UMFAD = "UntagMFADevice";
var _UN = "UserName";
var _UOIDCP = "UntagOpenIDConnectProvider";
var _UOIDCPT = "UpdateOpenIDConnectProviderThumbprint";
var _UP = "UntagPolicy";
var _UPL = "UserPolicyList";
var _UR = "UntagRole";
var _URD = "UpdateRoleDescription";
var _URp = "UpdateRole";
var _USAMLP = "UntagSAMLProvider";
var _USAMLPp = "UpdateSAMLProvider";
var _USC = "UntagServerCertificate";
var _USCp = "UpdateServerCertificate";
var _USCpd = "UpdateSigningCertificate";
var _USCpl = "UploadServerCertificate";
var _USCplo = "UploadSigningCertificate";
var _USSC = "UpdateServiceSpecificCredential";
var _USSHPK = "UpdateSSHPublicKey";
var _USSHPKp = "UploadSSHPublicKey";
var _UU = "UntagUser";
var _UUp = "UpdateUser";
var _Us = "User";
var _Use = "Users";
var _V = "Version";
var _VI = "VersionId";
var _VMFAD = "VirtualMFADevice";
var _VMFADN = "VirtualMFADeviceName";
var _VMFADi = "VirtualMFADevices";
var _VU = "ValidUntil";
var _Va = "Value";
var _Ve = "Versions";
var _e = "entry";
var _m = "message";
var _me = "member";
var buildFormUrlencodedString = /* @__PURE__ */ __name((formEntries) => Object.entries(formEntries).map(([key, value]) => (0, import_smithy_client.extendedEncodeURIComponent)(key) + "=" + (0, import_smithy_client.extendedEncodeURIComponent)(value)).join("&"), "buildFormUrlencodedString");
var loadQueryErrorCode = /* @__PURE__ */ __name((output, data) => {
  if (data.Error?.Code !== void 0) {
    return data.Error.Code;
  }
  if (output.statusCode == 404) {
    return "NotFound";
  }
}, "loadQueryErrorCode");

// src/commands/AddClientIDToOpenIDConnectProviderCommand.ts
var AddClientIDToOpenIDConnectProviderCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "AddClientIDToOpenIDConnectProvider", {}).n("IAMClient", "AddClientIDToOpenIDConnectProviderCommand").f(void 0, void 0).ser(se_AddClientIDToOpenIDConnectProviderCommand).de(de_AddClientIDToOpenIDConnectProviderCommand).build() {
  static {
    __name(this, "AddClientIDToOpenIDConnectProviderCommand");
  }
};

// src/commands/AddRoleToInstanceProfileCommand.ts



var AddRoleToInstanceProfileCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "AddRoleToInstanceProfile", {}).n("IAMClient", "AddRoleToInstanceProfileCommand").f(void 0, void 0).ser(se_AddRoleToInstanceProfileCommand).de(de_AddRoleToInstanceProfileCommand).build() {
  static {
    __name(this, "AddRoleToInstanceProfileCommand");
  }
};

// src/commands/AddUserToGroupCommand.ts



var AddUserToGroupCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "AddUserToGroup", {}).n("IAMClient", "AddUserToGroupCommand").f(void 0, void 0).ser(se_AddUserToGroupCommand).de(de_AddUserToGroupCommand).build() {
  static {
    __name(this, "AddUserToGroupCommand");
  }
};

// src/commands/AttachGroupPolicyCommand.ts



var AttachGroupPolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "AttachGroupPolicy", {}).n("IAMClient", "AttachGroupPolicyCommand").f(void 0, void 0).ser(se_AttachGroupPolicyCommand).de(de_AttachGroupPolicyCommand).build() {
  static {
    __name(this, "AttachGroupPolicyCommand");
  }
};

// src/commands/AttachRolePolicyCommand.ts



var AttachRolePolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "AttachRolePolicy", {}).n("IAMClient", "AttachRolePolicyCommand").f(void 0, void 0).ser(se_AttachRolePolicyCommand).de(de_AttachRolePolicyCommand).build() {
  static {
    __name(this, "AttachRolePolicyCommand");
  }
};

// src/commands/AttachUserPolicyCommand.ts



var AttachUserPolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "AttachUserPolicy", {}).n("IAMClient", "AttachUserPolicyCommand").f(void 0, void 0).ser(se_AttachUserPolicyCommand).de(de_AttachUserPolicyCommand).build() {
  static {
    __name(this, "AttachUserPolicyCommand");
  }
};

// src/commands/ChangePasswordCommand.ts



var ChangePasswordCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "ChangePassword", {}).n("IAMClient", "ChangePasswordCommand").f(ChangePasswordRequestFilterSensitiveLog, void 0).ser(se_ChangePasswordCommand).de(de_ChangePasswordCommand).build() {
  static {
    __name(this, "ChangePasswordCommand");
  }
};

// src/commands/CreateAccessKeyCommand.ts



var CreateAccessKeyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "CreateAccessKey", {}).n("IAMClient", "CreateAccessKeyCommand").f(void 0, CreateAccessKeyResponseFilterSensitiveLog).ser(se_CreateAccessKeyCommand).de(de_CreateAccessKeyCommand).build() {
  static {
    __name(this, "CreateAccessKeyCommand");
  }
};

// src/commands/CreateAccountAliasCommand.ts



var CreateAccountAliasCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "CreateAccountAlias", {}).n("IAMClient", "CreateAccountAliasCommand").f(void 0, void 0).ser(se_CreateAccountAliasCommand).de(de_CreateAccountAliasCommand).build() {
  static {
    __name(this, "CreateAccountAliasCommand");
  }
};

// src/commands/CreateGroupCommand.ts



var CreateGroupCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "CreateGroup", {}).n("IAMClient", "CreateGroupCommand").f(void 0, void 0).ser(se_CreateGroupCommand).de(de_CreateGroupCommand).build() {
  static {
    __name(this, "CreateGroupCommand");
  }
};

// src/commands/CreateInstanceProfileCommand.ts



var CreateInstanceProfileCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "CreateInstanceProfile", {}).n("IAMClient", "CreateInstanceProfileCommand").f(void 0, void 0).ser(se_CreateInstanceProfileCommand).de(de_CreateInstanceProfileCommand).build() {
  static {
    __name(this, "CreateInstanceProfileCommand");
  }
};

// src/commands/CreateLoginProfileCommand.ts



var CreateLoginProfileCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "CreateLoginProfile", {}).n("IAMClient", "CreateLoginProfileCommand").f(CreateLoginProfileRequestFilterSensitiveLog, void 0).ser(se_CreateLoginProfileCommand).de(de_CreateLoginProfileCommand).build() {
  static {
    __name(this, "CreateLoginProfileCommand");
  }
};

// src/commands/CreateOpenIDConnectProviderCommand.ts



var CreateOpenIDConnectProviderCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "CreateOpenIDConnectProvider", {}).n("IAMClient", "CreateOpenIDConnectProviderCommand").f(void 0, void 0).ser(se_CreateOpenIDConnectProviderCommand).de(de_CreateOpenIDConnectProviderCommand).build() {
  static {
    __name(this, "CreateOpenIDConnectProviderCommand");
  }
};

// src/commands/CreatePolicyCommand.ts



var CreatePolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "CreatePolicy", {}).n("IAMClient", "CreatePolicyCommand").f(void 0, void 0).ser(se_CreatePolicyCommand).de(de_CreatePolicyCommand).build() {
  static {
    __name(this, "CreatePolicyCommand");
  }
};

// src/commands/CreatePolicyVersionCommand.ts



var CreatePolicyVersionCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "CreatePolicyVersion", {}).n("IAMClient", "CreatePolicyVersionCommand").f(void 0, void 0).ser(se_CreatePolicyVersionCommand).de(de_CreatePolicyVersionCommand).build() {
  static {
    __name(this, "CreatePolicyVersionCommand");
  }
};

// src/commands/CreateRoleCommand.ts



var CreateRoleCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "CreateRole", {}).n("IAMClient", "CreateRoleCommand").f(void 0, void 0).ser(se_CreateRoleCommand).de(de_CreateRoleCommand).build() {
  static {
    __name(this, "CreateRoleCommand");
  }
};

// src/commands/CreateSAMLProviderCommand.ts



var CreateSAMLProviderCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "CreateSAMLProvider", {}).n("IAMClient", "CreateSAMLProviderCommand").f(CreateSAMLProviderRequestFilterSensitiveLog, void 0).ser(se_CreateSAMLProviderCommand).de(de_CreateSAMLProviderCommand).build() {
  static {
    __name(this, "CreateSAMLProviderCommand");
  }
};

// src/commands/CreateServiceLinkedRoleCommand.ts



var CreateServiceLinkedRoleCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "CreateServiceLinkedRole", {}).n("IAMClient", "CreateServiceLinkedRoleCommand").f(void 0, void 0).ser(se_CreateServiceLinkedRoleCommand).de(de_CreateServiceLinkedRoleCommand).build() {
  static {
    __name(this, "CreateServiceLinkedRoleCommand");
  }
};

// src/commands/CreateServiceSpecificCredentialCommand.ts



var CreateServiceSpecificCredentialCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "CreateServiceSpecificCredential", {}).n("IAMClient", "CreateServiceSpecificCredentialCommand").f(void 0, CreateServiceSpecificCredentialResponseFilterSensitiveLog).ser(se_CreateServiceSpecificCredentialCommand).de(de_CreateServiceSpecificCredentialCommand).build() {
  static {
    __name(this, "CreateServiceSpecificCredentialCommand");
  }
};

// src/commands/CreateUserCommand.ts



var CreateUserCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "CreateUser", {}).n("IAMClient", "CreateUserCommand").f(void 0, void 0).ser(se_CreateUserCommand).de(de_CreateUserCommand).build() {
  static {
    __name(this, "CreateUserCommand");
  }
};

// src/commands/CreateVirtualMFADeviceCommand.ts



var CreateVirtualMFADeviceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "CreateVirtualMFADevice", {}).n("IAMClient", "CreateVirtualMFADeviceCommand").f(void 0, CreateVirtualMFADeviceResponseFilterSensitiveLog).ser(se_CreateVirtualMFADeviceCommand).de(de_CreateVirtualMFADeviceCommand).build() {
  static {
    __name(this, "CreateVirtualMFADeviceCommand");
  }
};

// src/commands/DeactivateMFADeviceCommand.ts



var DeactivateMFADeviceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "DeactivateMFADevice", {}).n("IAMClient", "DeactivateMFADeviceCommand").f(void 0, void 0).ser(se_DeactivateMFADeviceCommand).de(de_DeactivateMFADeviceCommand).build() {
  static {
    __name(this, "DeactivateMFADeviceCommand");
  }
};

// src/commands/DeleteAccessKeyCommand.ts



var DeleteAccessKeyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "DeleteAccessKey", {}).n("IAMClient", "DeleteAccessKeyCommand").f(void 0, void 0).ser(se_DeleteAccessKeyCommand).de(de_DeleteAccessKeyCommand).build() {
  static {
    __name(this, "DeleteAccessKeyCommand");
  }
};

// src/commands/DeleteAccountAliasCommand.ts



var DeleteAccountAliasCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "DeleteAccountAlias", {}).n("IAMClient", "DeleteAccountAliasCommand").f(void 0, void 0).ser(se_DeleteAccountAliasCommand).de(de_DeleteAccountAliasCommand).build() {
  static {
    __name(this, "DeleteAccountAliasCommand");
  }
};

// src/commands/DeleteAccountPasswordPolicyCommand.ts



var DeleteAccountPasswordPolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "DeleteAccountPasswordPolicy", {}).n("IAMClient", "DeleteAccountPasswordPolicyCommand").f(void 0, void 0).ser(se_DeleteAccountPasswordPolicyCommand).de(de_DeleteAccountPasswordPolicyCommand).build() {
  static {
    __name(this, "DeleteAccountPasswordPolicyCommand");
  }
};

// src/commands/DeleteGroupCommand.ts



var DeleteGroupCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "DeleteGroup", {}).n("IAMClient", "DeleteGroupCommand").f(void 0, void 0).ser(se_DeleteGroupCommand).de(de_DeleteGroupCommand).build() {
  static {
    __name(this, "DeleteGroupCommand");
  }
};

// src/commands/DeleteGroupPolicyCommand.ts



var DeleteGroupPolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "DeleteGroupPolicy", {}).n("IAMClient", "DeleteGroupPolicyCommand").f(void 0, void 0).ser(se_DeleteGroupPolicyCommand).de(de_DeleteGroupPolicyCommand).build() {
  static {
    __name(this, "DeleteGroupPolicyCommand");
  }
};

// src/commands/DeleteInstanceProfileCommand.ts



var DeleteInstanceProfileCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "DeleteInstanceProfile", {}).n("IAMClient", "DeleteInstanceProfileCommand").f(void 0, void 0).ser(se_DeleteInstanceProfileCommand).de(de_DeleteInstanceProfileCommand).build() {
  static {
    __name(this, "DeleteInstanceProfileCommand");
  }
};

// src/commands/DeleteLoginProfileCommand.ts



var DeleteLoginProfileCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "DeleteLoginProfile", {}).n("IAMClient", "DeleteLoginProfileCommand").f(void 0, void 0).ser(se_DeleteLoginProfileCommand).de(de_DeleteLoginProfileCommand).build() {
  static {
    __name(this, "DeleteLoginProfileCommand");
  }
};

// src/commands/DeleteOpenIDConnectProviderCommand.ts



var DeleteOpenIDConnectProviderCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "DeleteOpenIDConnectProvider", {}).n("IAMClient", "DeleteOpenIDConnectProviderCommand").f(void 0, void 0).ser(se_DeleteOpenIDConnectProviderCommand).de(de_DeleteOpenIDConnectProviderCommand).build() {
  static {
    __name(this, "DeleteOpenIDConnectProviderCommand");
  }
};

// src/commands/DeletePolicyCommand.ts



var DeletePolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "DeletePolicy", {}).n("IAMClient", "DeletePolicyCommand").f(void 0, void 0).ser(se_DeletePolicyCommand).de(de_DeletePolicyCommand).build() {
  static {
    __name(this, "DeletePolicyCommand");
  }
};

// src/commands/DeletePolicyVersionCommand.ts



var DeletePolicyVersionCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "DeletePolicyVersion", {}).n("IAMClient", "DeletePolicyVersionCommand").f(void 0, void 0).ser(se_DeletePolicyVersionCommand).de(de_DeletePolicyVersionCommand).build() {
  static {
    __name(this, "DeletePolicyVersionCommand");
  }
};

// src/commands/DeleteRoleCommand.ts



var DeleteRoleCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "DeleteRole", {}).n("IAMClient", "DeleteRoleCommand").f(void 0, void 0).ser(se_DeleteRoleCommand).de(de_DeleteRoleCommand).build() {
  static {
    __name(this, "DeleteRoleCommand");
  }
};

// src/commands/DeleteRolePermissionsBoundaryCommand.ts



var DeleteRolePermissionsBoundaryCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "DeleteRolePermissionsBoundary", {}).n("IAMClient", "DeleteRolePermissionsBoundaryCommand").f(void 0, void 0).ser(se_DeleteRolePermissionsBoundaryCommand).de(de_DeleteRolePermissionsBoundaryCommand).build() {
  static {
    __name(this, "DeleteRolePermissionsBoundaryCommand");
  }
};

// src/commands/DeleteRolePolicyCommand.ts



var DeleteRolePolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "DeleteRolePolicy", {}).n("IAMClient", "DeleteRolePolicyCommand").f(void 0, void 0).ser(se_DeleteRolePolicyCommand).de(de_DeleteRolePolicyCommand).build() {
  static {
    __name(this, "DeleteRolePolicyCommand");
  }
};

// src/commands/DeleteSAMLProviderCommand.ts



var DeleteSAMLProviderCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "DeleteSAMLProvider", {}).n("IAMClient", "DeleteSAMLProviderCommand").f(void 0, void 0).ser(se_DeleteSAMLProviderCommand).de(de_DeleteSAMLProviderCommand).build() {
  static {
    __name(this, "DeleteSAMLProviderCommand");
  }
};

// src/commands/DeleteServerCertificateCommand.ts



var DeleteServerCertificateCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "DeleteServerCertificate", {}).n("IAMClient", "DeleteServerCertificateCommand").f(void 0, void 0).ser(se_DeleteServerCertificateCommand).de(de_DeleteServerCertificateCommand).build() {
  static {
    __name(this, "DeleteServerCertificateCommand");
  }
};

// src/commands/DeleteServiceLinkedRoleCommand.ts



var DeleteServiceLinkedRoleCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "DeleteServiceLinkedRole", {}).n("IAMClient", "DeleteServiceLinkedRoleCommand").f(void 0, void 0).ser(se_DeleteServiceLinkedRoleCommand).de(de_DeleteServiceLinkedRoleCommand).build() {
  static {
    __name(this, "DeleteServiceLinkedRoleCommand");
  }
};

// src/commands/DeleteServiceSpecificCredentialCommand.ts



var DeleteServiceSpecificCredentialCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "DeleteServiceSpecificCredential", {}).n("IAMClient", "DeleteServiceSpecificCredentialCommand").f(void 0, void 0).ser(se_DeleteServiceSpecificCredentialCommand).de(de_DeleteServiceSpecificCredentialCommand).build() {
  static {
    __name(this, "DeleteServiceSpecificCredentialCommand");
  }
};

// src/commands/DeleteSigningCertificateCommand.ts



var DeleteSigningCertificateCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "DeleteSigningCertificate", {}).n("IAMClient", "DeleteSigningCertificateCommand").f(void 0, void 0).ser(se_DeleteSigningCertificateCommand).de(de_DeleteSigningCertificateCommand).build() {
  static {
    __name(this, "DeleteSigningCertificateCommand");
  }
};

// src/commands/DeleteSSHPublicKeyCommand.ts



var DeleteSSHPublicKeyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "DeleteSSHPublicKey", {}).n("IAMClient", "DeleteSSHPublicKeyCommand").f(void 0, void 0).ser(se_DeleteSSHPublicKeyCommand).de(de_DeleteSSHPublicKeyCommand).build() {
  static {
    __name(this, "DeleteSSHPublicKeyCommand");
  }
};

// src/commands/DeleteUserCommand.ts



var DeleteUserCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "DeleteUser", {}).n("IAMClient", "DeleteUserCommand").f(void 0, void 0).ser(se_DeleteUserCommand).de(de_DeleteUserCommand).build() {
  static {
    __name(this, "DeleteUserCommand");
  }
};

// src/commands/DeleteUserPermissionsBoundaryCommand.ts



var DeleteUserPermissionsBoundaryCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "DeleteUserPermissionsBoundary", {}).n("IAMClient", "DeleteUserPermissionsBoundaryCommand").f(void 0, void 0).ser(se_DeleteUserPermissionsBoundaryCommand).de(de_DeleteUserPermissionsBoundaryCommand).build() {
  static {
    __name(this, "DeleteUserPermissionsBoundaryCommand");
  }
};

// src/commands/DeleteUserPolicyCommand.ts



var DeleteUserPolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "DeleteUserPolicy", {}).n("IAMClient", "DeleteUserPolicyCommand").f(void 0, void 0).ser(se_DeleteUserPolicyCommand).de(de_DeleteUserPolicyCommand).build() {
  static {
    __name(this, "DeleteUserPolicyCommand");
  }
};

// src/commands/DeleteVirtualMFADeviceCommand.ts



var DeleteVirtualMFADeviceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "DeleteVirtualMFADevice", {}).n("IAMClient", "DeleteVirtualMFADeviceCommand").f(void 0, void 0).ser(se_DeleteVirtualMFADeviceCommand).de(de_DeleteVirtualMFADeviceCommand).build() {
  static {
    __name(this, "DeleteVirtualMFADeviceCommand");
  }
};

// src/commands/DetachGroupPolicyCommand.ts



var DetachGroupPolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "DetachGroupPolicy", {}).n("IAMClient", "DetachGroupPolicyCommand").f(void 0, void 0).ser(se_DetachGroupPolicyCommand).de(de_DetachGroupPolicyCommand).build() {
  static {
    __name(this, "DetachGroupPolicyCommand");
  }
};

// src/commands/DetachRolePolicyCommand.ts



var DetachRolePolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "DetachRolePolicy", {}).n("IAMClient", "DetachRolePolicyCommand").f(void 0, void 0).ser(se_DetachRolePolicyCommand).de(de_DetachRolePolicyCommand).build() {
  static {
    __name(this, "DetachRolePolicyCommand");
  }
};

// src/commands/DetachUserPolicyCommand.ts



var DetachUserPolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "DetachUserPolicy", {}).n("IAMClient", "DetachUserPolicyCommand").f(void 0, void 0).ser(se_DetachUserPolicyCommand).de(de_DetachUserPolicyCommand).build() {
  static {
    __name(this, "DetachUserPolicyCommand");
  }
};

// src/commands/DisableOrganizationsRootCredentialsManagementCommand.ts



var DisableOrganizationsRootCredentialsManagementCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "DisableOrganizationsRootCredentialsManagement", {}).n("IAMClient", "DisableOrganizationsRootCredentialsManagementCommand").f(void 0, void 0).ser(se_DisableOrganizationsRootCredentialsManagementCommand).de(de_DisableOrganizationsRootCredentialsManagementCommand).build() {
  static {
    __name(this, "DisableOrganizationsRootCredentialsManagementCommand");
  }
};

// src/commands/DisableOrganizationsRootSessionsCommand.ts



var DisableOrganizationsRootSessionsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "DisableOrganizationsRootSessions", {}).n("IAMClient", "DisableOrganizationsRootSessionsCommand").f(void 0, void 0).ser(se_DisableOrganizationsRootSessionsCommand).de(de_DisableOrganizationsRootSessionsCommand).build() {
  static {
    __name(this, "DisableOrganizationsRootSessionsCommand");
  }
};

// src/commands/EnableMFADeviceCommand.ts



var EnableMFADeviceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "EnableMFADevice", {}).n("IAMClient", "EnableMFADeviceCommand").f(void 0, void 0).ser(se_EnableMFADeviceCommand).de(de_EnableMFADeviceCommand).build() {
  static {
    __name(this, "EnableMFADeviceCommand");
  }
};

// src/commands/EnableOrganizationsRootCredentialsManagementCommand.ts



var EnableOrganizationsRootCredentialsManagementCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "EnableOrganizationsRootCredentialsManagement", {}).n("IAMClient", "EnableOrganizationsRootCredentialsManagementCommand").f(void 0, void 0).ser(se_EnableOrganizationsRootCredentialsManagementCommand).de(de_EnableOrganizationsRootCredentialsManagementCommand).build() {
  static {
    __name(this, "EnableOrganizationsRootCredentialsManagementCommand");
  }
};

// src/commands/EnableOrganizationsRootSessionsCommand.ts



var EnableOrganizationsRootSessionsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "EnableOrganizationsRootSessions", {}).n("IAMClient", "EnableOrganizationsRootSessionsCommand").f(void 0, void 0).ser(se_EnableOrganizationsRootSessionsCommand).de(de_EnableOrganizationsRootSessionsCommand).build() {
  static {
    __name(this, "EnableOrganizationsRootSessionsCommand");
  }
};

// src/commands/GenerateCredentialReportCommand.ts



var GenerateCredentialReportCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "GenerateCredentialReport", {}).n("IAMClient", "GenerateCredentialReportCommand").f(void 0, void 0).ser(se_GenerateCredentialReportCommand).de(de_GenerateCredentialReportCommand).build() {
  static {
    __name(this, "GenerateCredentialReportCommand");
  }
};

// src/commands/GenerateOrganizationsAccessReportCommand.ts



var GenerateOrganizationsAccessReportCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "GenerateOrganizationsAccessReport", {}).n("IAMClient", "GenerateOrganizationsAccessReportCommand").f(void 0, void 0).ser(se_GenerateOrganizationsAccessReportCommand).de(de_GenerateOrganizationsAccessReportCommand).build() {
  static {
    __name(this, "GenerateOrganizationsAccessReportCommand");
  }
};

// src/commands/GenerateServiceLastAccessedDetailsCommand.ts



var GenerateServiceLastAccessedDetailsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "GenerateServiceLastAccessedDetails", {}).n("IAMClient", "GenerateServiceLastAccessedDetailsCommand").f(void 0, void 0).ser(se_GenerateServiceLastAccessedDetailsCommand).de(de_GenerateServiceLastAccessedDetailsCommand).build() {
  static {
    __name(this, "GenerateServiceLastAccessedDetailsCommand");
  }
};

// src/commands/GetAccessKeyLastUsedCommand.ts



var GetAccessKeyLastUsedCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "GetAccessKeyLastUsed", {}).n("IAMClient", "GetAccessKeyLastUsedCommand").f(void 0, void 0).ser(se_GetAccessKeyLastUsedCommand).de(de_GetAccessKeyLastUsedCommand).build() {
  static {
    __name(this, "GetAccessKeyLastUsedCommand");
  }
};

// src/commands/GetAccountAuthorizationDetailsCommand.ts



var GetAccountAuthorizationDetailsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "GetAccountAuthorizationDetails", {}).n("IAMClient", "GetAccountAuthorizationDetailsCommand").f(void 0, void 0).ser(se_GetAccountAuthorizationDetailsCommand).de(de_GetAccountAuthorizationDetailsCommand).build() {
  static {
    __name(this, "GetAccountAuthorizationDetailsCommand");
  }
};

// src/commands/GetAccountPasswordPolicyCommand.ts



var GetAccountPasswordPolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "GetAccountPasswordPolicy", {}).n("IAMClient", "GetAccountPasswordPolicyCommand").f(void 0, void 0).ser(se_GetAccountPasswordPolicyCommand).de(de_GetAccountPasswordPolicyCommand).build() {
  static {
    __name(this, "GetAccountPasswordPolicyCommand");
  }
};

// src/commands/GetAccountSummaryCommand.ts



var GetAccountSummaryCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "GetAccountSummary", {}).n("IAMClient", "GetAccountSummaryCommand").f(void 0, void 0).ser(se_GetAccountSummaryCommand).de(de_GetAccountSummaryCommand).build() {
  static {
    __name(this, "GetAccountSummaryCommand");
  }
};

// src/commands/GetContextKeysForCustomPolicyCommand.ts



var GetContextKeysForCustomPolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "GetContextKeysForCustomPolicy", {}).n("IAMClient", "GetContextKeysForCustomPolicyCommand").f(void 0, void 0).ser(se_GetContextKeysForCustomPolicyCommand).de(de_GetContextKeysForCustomPolicyCommand).build() {
  static {
    __name(this, "GetContextKeysForCustomPolicyCommand");
  }
};

// src/commands/GetContextKeysForPrincipalPolicyCommand.ts



var GetContextKeysForPrincipalPolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "GetContextKeysForPrincipalPolicy", {}).n("IAMClient", "GetContextKeysForPrincipalPolicyCommand").f(void 0, void 0).ser(se_GetContextKeysForPrincipalPolicyCommand).de(de_GetContextKeysForPrincipalPolicyCommand).build() {
  static {
    __name(this, "GetContextKeysForPrincipalPolicyCommand");
  }
};

// src/commands/GetCredentialReportCommand.ts



var GetCredentialReportCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "GetCredentialReport", {}).n("IAMClient", "GetCredentialReportCommand").f(void 0, void 0).ser(se_GetCredentialReportCommand).de(de_GetCredentialReportCommand).build() {
  static {
    __name(this, "GetCredentialReportCommand");
  }
};

// src/commands/GetGroupCommand.ts



var GetGroupCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "GetGroup", {}).n("IAMClient", "GetGroupCommand").f(void 0, void 0).ser(se_GetGroupCommand).de(de_GetGroupCommand).build() {
  static {
    __name(this, "GetGroupCommand");
  }
};

// src/commands/GetGroupPolicyCommand.ts



var GetGroupPolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "GetGroupPolicy", {}).n("IAMClient", "GetGroupPolicyCommand").f(void 0, void 0).ser(se_GetGroupPolicyCommand).de(de_GetGroupPolicyCommand).build() {
  static {
    __name(this, "GetGroupPolicyCommand");
  }
};

// src/commands/GetInstanceProfileCommand.ts



var GetInstanceProfileCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "GetInstanceProfile", {}).n("IAMClient", "GetInstanceProfileCommand").f(void 0, void 0).ser(se_GetInstanceProfileCommand).de(de_GetInstanceProfileCommand).build() {
  static {
    __name(this, "GetInstanceProfileCommand");
  }
};

// src/commands/GetLoginProfileCommand.ts



var GetLoginProfileCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "GetLoginProfile", {}).n("IAMClient", "GetLoginProfileCommand").f(void 0, void 0).ser(se_GetLoginProfileCommand).de(de_GetLoginProfileCommand).build() {
  static {
    __name(this, "GetLoginProfileCommand");
  }
};

// src/commands/GetMFADeviceCommand.ts



var GetMFADeviceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "GetMFADevice", {}).n("IAMClient", "GetMFADeviceCommand").f(void 0, void 0).ser(se_GetMFADeviceCommand).de(de_GetMFADeviceCommand).build() {
  static {
    __name(this, "GetMFADeviceCommand");
  }
};

// src/commands/GetOpenIDConnectProviderCommand.ts



var GetOpenIDConnectProviderCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "GetOpenIDConnectProvider", {}).n("IAMClient", "GetOpenIDConnectProviderCommand").f(void 0, void 0).ser(se_GetOpenIDConnectProviderCommand).de(de_GetOpenIDConnectProviderCommand).build() {
  static {
    __name(this, "GetOpenIDConnectProviderCommand");
  }
};

// src/commands/GetOrganizationsAccessReportCommand.ts



var GetOrganizationsAccessReportCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "GetOrganizationsAccessReport", {}).n("IAMClient", "GetOrganizationsAccessReportCommand").f(void 0, void 0).ser(se_GetOrganizationsAccessReportCommand).de(de_GetOrganizationsAccessReportCommand).build() {
  static {
    __name(this, "GetOrganizationsAccessReportCommand");
  }
};

// src/commands/GetPolicyCommand.ts



var GetPolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "GetPolicy", {}).n("IAMClient", "GetPolicyCommand").f(void 0, void 0).ser(se_GetPolicyCommand).de(de_GetPolicyCommand).build() {
  static {
    __name(this, "GetPolicyCommand");
  }
};

// src/commands/GetPolicyVersionCommand.ts



var GetPolicyVersionCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "GetPolicyVersion", {}).n("IAMClient", "GetPolicyVersionCommand").f(void 0, void 0).ser(se_GetPolicyVersionCommand).de(de_GetPolicyVersionCommand).build() {
  static {
    __name(this, "GetPolicyVersionCommand");
  }
};

// src/commands/GetRoleCommand.ts



var GetRoleCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "GetRole", {}).n("IAMClient", "GetRoleCommand").f(void 0, void 0).ser(se_GetRoleCommand).de(de_GetRoleCommand).build() {
  static {
    __name(this, "GetRoleCommand");
  }
};

// src/commands/GetRolePolicyCommand.ts



var GetRolePolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "GetRolePolicy", {}).n("IAMClient", "GetRolePolicyCommand").f(void 0, void 0).ser(se_GetRolePolicyCommand).de(de_GetRolePolicyCommand).build() {
  static {
    __name(this, "GetRolePolicyCommand");
  }
};

// src/commands/GetSAMLProviderCommand.ts



var GetSAMLProviderCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "GetSAMLProvider", {}).n("IAMClient", "GetSAMLProviderCommand").f(void 0, void 0).ser(se_GetSAMLProviderCommand).de(de_GetSAMLProviderCommand).build() {
  static {
    __name(this, "GetSAMLProviderCommand");
  }
};

// src/commands/GetServerCertificateCommand.ts



var GetServerCertificateCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "GetServerCertificate", {}).n("IAMClient", "GetServerCertificateCommand").f(void 0, void 0).ser(se_GetServerCertificateCommand).de(de_GetServerCertificateCommand).build() {
  static {
    __name(this, "GetServerCertificateCommand");
  }
};

// src/commands/GetServiceLastAccessedDetailsCommand.ts



var GetServiceLastAccessedDetailsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "GetServiceLastAccessedDetails", {}).n("IAMClient", "GetServiceLastAccessedDetailsCommand").f(void 0, void 0).ser(se_GetServiceLastAccessedDetailsCommand).de(de_GetServiceLastAccessedDetailsCommand).build() {
  static {
    __name(this, "GetServiceLastAccessedDetailsCommand");
  }
};

// src/commands/GetServiceLastAccessedDetailsWithEntitiesCommand.ts



var GetServiceLastAccessedDetailsWithEntitiesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "GetServiceLastAccessedDetailsWithEntities", {}).n("IAMClient", "GetServiceLastAccessedDetailsWithEntitiesCommand").f(void 0, void 0).ser(se_GetServiceLastAccessedDetailsWithEntitiesCommand).de(de_GetServiceLastAccessedDetailsWithEntitiesCommand).build() {
  static {
    __name(this, "GetServiceLastAccessedDetailsWithEntitiesCommand");
  }
};

// src/commands/GetServiceLinkedRoleDeletionStatusCommand.ts



var GetServiceLinkedRoleDeletionStatusCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "GetServiceLinkedRoleDeletionStatus", {}).n("IAMClient", "GetServiceLinkedRoleDeletionStatusCommand").f(void 0, void 0).ser(se_GetServiceLinkedRoleDeletionStatusCommand).de(de_GetServiceLinkedRoleDeletionStatusCommand).build() {
  static {
    __name(this, "GetServiceLinkedRoleDeletionStatusCommand");
  }
};

// src/commands/GetSSHPublicKeyCommand.ts



var GetSSHPublicKeyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "GetSSHPublicKey", {}).n("IAMClient", "GetSSHPublicKeyCommand").f(void 0, void 0).ser(se_GetSSHPublicKeyCommand).de(de_GetSSHPublicKeyCommand).build() {
  static {
    __name(this, "GetSSHPublicKeyCommand");
  }
};

// src/commands/GetUserCommand.ts



var GetUserCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "GetUser", {}).n("IAMClient", "GetUserCommand").f(void 0, void 0).ser(se_GetUserCommand).de(de_GetUserCommand).build() {
  static {
    __name(this, "GetUserCommand");
  }
};

// src/commands/GetUserPolicyCommand.ts



var GetUserPolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "GetUserPolicy", {}).n("IAMClient", "GetUserPolicyCommand").f(void 0, void 0).ser(se_GetUserPolicyCommand).de(de_GetUserPolicyCommand).build() {
  static {
    __name(this, "GetUserPolicyCommand");
  }
};

// src/commands/ListAccessKeysCommand.ts



var ListAccessKeysCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "ListAccessKeys", {}).n("IAMClient", "ListAccessKeysCommand").f(void 0, void 0).ser(se_ListAccessKeysCommand).de(de_ListAccessKeysCommand).build() {
  static {
    __name(this, "ListAccessKeysCommand");
  }
};

// src/commands/ListAccountAliasesCommand.ts



var ListAccountAliasesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "ListAccountAliases", {}).n("IAMClient", "ListAccountAliasesCommand").f(void 0, void 0).ser(se_ListAccountAliasesCommand).de(de_ListAccountAliasesCommand).build() {
  static {
    __name(this, "ListAccountAliasesCommand");
  }
};

// src/commands/ListAttachedGroupPoliciesCommand.ts



var ListAttachedGroupPoliciesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "ListAttachedGroupPolicies", {}).n("IAMClient", "ListAttachedGroupPoliciesCommand").f(void 0, void 0).ser(se_ListAttachedGroupPoliciesCommand).de(de_ListAttachedGroupPoliciesCommand).build() {
  static {
    __name(this, "ListAttachedGroupPoliciesCommand");
  }
};

// src/commands/ListAttachedRolePoliciesCommand.ts



var ListAttachedRolePoliciesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "ListAttachedRolePolicies", {}).n("IAMClient", "ListAttachedRolePoliciesCommand").f(void 0, void 0).ser(se_ListAttachedRolePoliciesCommand).de(de_ListAttachedRolePoliciesCommand).build() {
  static {
    __name(this, "ListAttachedRolePoliciesCommand");
  }
};

// src/commands/ListAttachedUserPoliciesCommand.ts



var ListAttachedUserPoliciesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "ListAttachedUserPolicies", {}).n("IAMClient", "ListAttachedUserPoliciesCommand").f(void 0, void 0).ser(se_ListAttachedUserPoliciesCommand).de(de_ListAttachedUserPoliciesCommand).build() {
  static {
    __name(this, "ListAttachedUserPoliciesCommand");
  }
};

// src/commands/ListEntitiesForPolicyCommand.ts



var ListEntitiesForPolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "ListEntitiesForPolicy", {}).n("IAMClient", "ListEntitiesForPolicyCommand").f(void 0, void 0).ser(se_ListEntitiesForPolicyCommand).de(de_ListEntitiesForPolicyCommand).build() {
  static {
    __name(this, "ListEntitiesForPolicyCommand");
  }
};

// src/commands/ListGroupPoliciesCommand.ts



var ListGroupPoliciesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "ListGroupPolicies", {}).n("IAMClient", "ListGroupPoliciesCommand").f(void 0, void 0).ser(se_ListGroupPoliciesCommand).de(de_ListGroupPoliciesCommand).build() {
  static {
    __name(this, "ListGroupPoliciesCommand");
  }
};

// src/commands/ListGroupsCommand.ts



var ListGroupsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "ListGroups", {}).n("IAMClient", "ListGroupsCommand").f(void 0, void 0).ser(se_ListGroupsCommand).de(de_ListGroupsCommand).build() {
  static {
    __name(this, "ListGroupsCommand");
  }
};

// src/commands/ListGroupsForUserCommand.ts



var ListGroupsForUserCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "ListGroupsForUser", {}).n("IAMClient", "ListGroupsForUserCommand").f(void 0, void 0).ser(se_ListGroupsForUserCommand).de(de_ListGroupsForUserCommand).build() {
  static {
    __name(this, "ListGroupsForUserCommand");
  }
};

// src/commands/ListInstanceProfilesCommand.ts



var ListInstanceProfilesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "ListInstanceProfiles", {}).n("IAMClient", "ListInstanceProfilesCommand").f(void 0, void 0).ser(se_ListInstanceProfilesCommand).de(de_ListInstanceProfilesCommand).build() {
  static {
    __name(this, "ListInstanceProfilesCommand");
  }
};

// src/commands/ListInstanceProfilesForRoleCommand.ts



var ListInstanceProfilesForRoleCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "ListInstanceProfilesForRole", {}).n("IAMClient", "ListInstanceProfilesForRoleCommand").f(void 0, void 0).ser(se_ListInstanceProfilesForRoleCommand).de(de_ListInstanceProfilesForRoleCommand).build() {
  static {
    __name(this, "ListInstanceProfilesForRoleCommand");
  }
};

// src/commands/ListInstanceProfileTagsCommand.ts



var ListInstanceProfileTagsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "ListInstanceProfileTags", {}).n("IAMClient", "ListInstanceProfileTagsCommand").f(void 0, void 0).ser(se_ListInstanceProfileTagsCommand).de(de_ListInstanceProfileTagsCommand).build() {
  static {
    __name(this, "ListInstanceProfileTagsCommand");
  }
};

// src/commands/ListMFADevicesCommand.ts



var ListMFADevicesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "ListMFADevices", {}).n("IAMClient", "ListMFADevicesCommand").f(void 0, void 0).ser(se_ListMFADevicesCommand).de(de_ListMFADevicesCommand).build() {
  static {
    __name(this, "ListMFADevicesCommand");
  }
};

// src/commands/ListMFADeviceTagsCommand.ts



var ListMFADeviceTagsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "ListMFADeviceTags", {}).n("IAMClient", "ListMFADeviceTagsCommand").f(void 0, void 0).ser(se_ListMFADeviceTagsCommand).de(de_ListMFADeviceTagsCommand).build() {
  static {
    __name(this, "ListMFADeviceTagsCommand");
  }
};

// src/commands/ListOpenIDConnectProvidersCommand.ts



var ListOpenIDConnectProvidersCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "ListOpenIDConnectProviders", {}).n("IAMClient", "ListOpenIDConnectProvidersCommand").f(void 0, void 0).ser(se_ListOpenIDConnectProvidersCommand).de(de_ListOpenIDConnectProvidersCommand).build() {
  static {
    __name(this, "ListOpenIDConnectProvidersCommand");
  }
};

// src/commands/ListOpenIDConnectProviderTagsCommand.ts



var ListOpenIDConnectProviderTagsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "ListOpenIDConnectProviderTags", {}).n("IAMClient", "ListOpenIDConnectProviderTagsCommand").f(void 0, void 0).ser(se_ListOpenIDConnectProviderTagsCommand).de(de_ListOpenIDConnectProviderTagsCommand).build() {
  static {
    __name(this, "ListOpenIDConnectProviderTagsCommand");
  }
};

// src/commands/ListOrganizationsFeaturesCommand.ts



var ListOrganizationsFeaturesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "ListOrganizationsFeatures", {}).n("IAMClient", "ListOrganizationsFeaturesCommand").f(void 0, void 0).ser(se_ListOrganizationsFeaturesCommand).de(de_ListOrganizationsFeaturesCommand).build() {
  static {
    __name(this, "ListOrganizationsFeaturesCommand");
  }
};

// src/commands/ListPoliciesCommand.ts



var ListPoliciesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "ListPolicies", {}).n("IAMClient", "ListPoliciesCommand").f(void 0, void 0).ser(se_ListPoliciesCommand).de(de_ListPoliciesCommand).build() {
  static {
    __name(this, "ListPoliciesCommand");
  }
};

// src/commands/ListPoliciesGrantingServiceAccessCommand.ts



var ListPoliciesGrantingServiceAccessCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "ListPoliciesGrantingServiceAccess", {}).n("IAMClient", "ListPoliciesGrantingServiceAccessCommand").f(void 0, void 0).ser(se_ListPoliciesGrantingServiceAccessCommand).de(de_ListPoliciesGrantingServiceAccessCommand).build() {
  static {
    __name(this, "ListPoliciesGrantingServiceAccessCommand");
  }
};

// src/commands/ListPolicyTagsCommand.ts



var ListPolicyTagsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "ListPolicyTags", {}).n("IAMClient", "ListPolicyTagsCommand").f(void 0, void 0).ser(se_ListPolicyTagsCommand).de(de_ListPolicyTagsCommand).build() {
  static {
    __name(this, "ListPolicyTagsCommand");
  }
};

// src/commands/ListPolicyVersionsCommand.ts



var ListPolicyVersionsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "ListPolicyVersions", {}).n("IAMClient", "ListPolicyVersionsCommand").f(void 0, void 0).ser(se_ListPolicyVersionsCommand).de(de_ListPolicyVersionsCommand).build() {
  static {
    __name(this, "ListPolicyVersionsCommand");
  }
};

// src/commands/ListRolePoliciesCommand.ts



var ListRolePoliciesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "ListRolePolicies", {}).n("IAMClient", "ListRolePoliciesCommand").f(void 0, void 0).ser(se_ListRolePoliciesCommand).de(de_ListRolePoliciesCommand).build() {
  static {
    __name(this, "ListRolePoliciesCommand");
  }
};

// src/commands/ListRolesCommand.ts



var ListRolesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "ListRoles", {}).n("IAMClient", "ListRolesCommand").f(void 0, void 0).ser(se_ListRolesCommand).de(de_ListRolesCommand).build() {
  static {
    __name(this, "ListRolesCommand");
  }
};

// src/commands/ListRoleTagsCommand.ts



var ListRoleTagsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "ListRoleTags", {}).n("IAMClient", "ListRoleTagsCommand").f(void 0, void 0).ser(se_ListRoleTagsCommand).de(de_ListRoleTagsCommand).build() {
  static {
    __name(this, "ListRoleTagsCommand");
  }
};

// src/commands/ListSAMLProvidersCommand.ts



var ListSAMLProvidersCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "ListSAMLProviders", {}).n("IAMClient", "ListSAMLProvidersCommand").f(void 0, void 0).ser(se_ListSAMLProvidersCommand).de(de_ListSAMLProvidersCommand).build() {
  static {
    __name(this, "ListSAMLProvidersCommand");
  }
};

// src/commands/ListSAMLProviderTagsCommand.ts



var ListSAMLProviderTagsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "ListSAMLProviderTags", {}).n("IAMClient", "ListSAMLProviderTagsCommand").f(void 0, void 0).ser(se_ListSAMLProviderTagsCommand).de(de_ListSAMLProviderTagsCommand).build() {
  static {
    __name(this, "ListSAMLProviderTagsCommand");
  }
};

// src/commands/ListServerCertificatesCommand.ts



var ListServerCertificatesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "ListServerCertificates", {}).n("IAMClient", "ListServerCertificatesCommand").f(void 0, void 0).ser(se_ListServerCertificatesCommand).de(de_ListServerCertificatesCommand).build() {
  static {
    __name(this, "ListServerCertificatesCommand");
  }
};

// src/commands/ListServerCertificateTagsCommand.ts



var ListServerCertificateTagsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "ListServerCertificateTags", {}).n("IAMClient", "ListServerCertificateTagsCommand").f(void 0, void 0).ser(se_ListServerCertificateTagsCommand).de(de_ListServerCertificateTagsCommand).build() {
  static {
    __name(this, "ListServerCertificateTagsCommand");
  }
};

// src/commands/ListServiceSpecificCredentialsCommand.ts



var ListServiceSpecificCredentialsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "ListServiceSpecificCredentials", {}).n("IAMClient", "ListServiceSpecificCredentialsCommand").f(void 0, void 0).ser(se_ListServiceSpecificCredentialsCommand).de(de_ListServiceSpecificCredentialsCommand).build() {
  static {
    __name(this, "ListServiceSpecificCredentialsCommand");
  }
};

// src/commands/ListSigningCertificatesCommand.ts



var ListSigningCertificatesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "ListSigningCertificates", {}).n("IAMClient", "ListSigningCertificatesCommand").f(void 0, void 0).ser(se_ListSigningCertificatesCommand).de(de_ListSigningCertificatesCommand).build() {
  static {
    __name(this, "ListSigningCertificatesCommand");
  }
};

// src/commands/ListSSHPublicKeysCommand.ts



var ListSSHPublicKeysCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "ListSSHPublicKeys", {}).n("IAMClient", "ListSSHPublicKeysCommand").f(void 0, void 0).ser(se_ListSSHPublicKeysCommand).de(de_ListSSHPublicKeysCommand).build() {
  static {
    __name(this, "ListSSHPublicKeysCommand");
  }
};

// src/commands/ListUserPoliciesCommand.ts



var ListUserPoliciesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "ListUserPolicies", {}).n("IAMClient", "ListUserPoliciesCommand").f(void 0, void 0).ser(se_ListUserPoliciesCommand).de(de_ListUserPoliciesCommand).build() {
  static {
    __name(this, "ListUserPoliciesCommand");
  }
};

// src/commands/ListUsersCommand.ts



var ListUsersCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "ListUsers", {}).n("IAMClient", "ListUsersCommand").f(void 0, void 0).ser(se_ListUsersCommand).de(de_ListUsersCommand).build() {
  static {
    __name(this, "ListUsersCommand");
  }
};

// src/commands/ListUserTagsCommand.ts



var ListUserTagsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "ListUserTags", {}).n("IAMClient", "ListUserTagsCommand").f(void 0, void 0).ser(se_ListUserTagsCommand).de(de_ListUserTagsCommand).build() {
  static {
    __name(this, "ListUserTagsCommand");
  }
};

// src/commands/ListVirtualMFADevicesCommand.ts



var ListVirtualMFADevicesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "ListVirtualMFADevices", {}).n("IAMClient", "ListVirtualMFADevicesCommand").f(void 0, ListVirtualMFADevicesResponseFilterSensitiveLog).ser(se_ListVirtualMFADevicesCommand).de(de_ListVirtualMFADevicesCommand).build() {
  static {
    __name(this, "ListVirtualMFADevicesCommand");
  }
};

// src/commands/PutGroupPolicyCommand.ts



var PutGroupPolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "PutGroupPolicy", {}).n("IAMClient", "PutGroupPolicyCommand").f(void 0, void 0).ser(se_PutGroupPolicyCommand).de(de_PutGroupPolicyCommand).build() {
  static {
    __name(this, "PutGroupPolicyCommand");
  }
};

// src/commands/PutRolePermissionsBoundaryCommand.ts



var PutRolePermissionsBoundaryCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "PutRolePermissionsBoundary", {}).n("IAMClient", "PutRolePermissionsBoundaryCommand").f(void 0, void 0).ser(se_PutRolePermissionsBoundaryCommand).de(de_PutRolePermissionsBoundaryCommand).build() {
  static {
    __name(this, "PutRolePermissionsBoundaryCommand");
  }
};

// src/commands/PutRolePolicyCommand.ts



var PutRolePolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "PutRolePolicy", {}).n("IAMClient", "PutRolePolicyCommand").f(void 0, void 0).ser(se_PutRolePolicyCommand).de(de_PutRolePolicyCommand).build() {
  static {
    __name(this, "PutRolePolicyCommand");
  }
};

// src/commands/PutUserPermissionsBoundaryCommand.ts



var PutUserPermissionsBoundaryCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "PutUserPermissionsBoundary", {}).n("IAMClient", "PutUserPermissionsBoundaryCommand").f(void 0, void 0).ser(se_PutUserPermissionsBoundaryCommand).de(de_PutUserPermissionsBoundaryCommand).build() {
  static {
    __name(this, "PutUserPermissionsBoundaryCommand");
  }
};

// src/commands/PutUserPolicyCommand.ts



var PutUserPolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "PutUserPolicy", {}).n("IAMClient", "PutUserPolicyCommand").f(void 0, void 0).ser(se_PutUserPolicyCommand).de(de_PutUserPolicyCommand).build() {
  static {
    __name(this, "PutUserPolicyCommand");
  }
};

// src/commands/RemoveClientIDFromOpenIDConnectProviderCommand.ts



var RemoveClientIDFromOpenIDConnectProviderCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "RemoveClientIDFromOpenIDConnectProvider", {}).n("IAMClient", "RemoveClientIDFromOpenIDConnectProviderCommand").f(void 0, void 0).ser(se_RemoveClientIDFromOpenIDConnectProviderCommand).de(de_RemoveClientIDFromOpenIDConnectProviderCommand).build() {
  static {
    __name(this, "RemoveClientIDFromOpenIDConnectProviderCommand");
  }
};

// src/commands/RemoveRoleFromInstanceProfileCommand.ts



var RemoveRoleFromInstanceProfileCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "RemoveRoleFromInstanceProfile", {}).n("IAMClient", "RemoveRoleFromInstanceProfileCommand").f(void 0, void 0).ser(se_RemoveRoleFromInstanceProfileCommand).de(de_RemoveRoleFromInstanceProfileCommand).build() {
  static {
    __name(this, "RemoveRoleFromInstanceProfileCommand");
  }
};

// src/commands/RemoveUserFromGroupCommand.ts



var RemoveUserFromGroupCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "RemoveUserFromGroup", {}).n("IAMClient", "RemoveUserFromGroupCommand").f(void 0, void 0).ser(se_RemoveUserFromGroupCommand).de(de_RemoveUserFromGroupCommand).build() {
  static {
    __name(this, "RemoveUserFromGroupCommand");
  }
};

// src/commands/ResetServiceSpecificCredentialCommand.ts



var ResetServiceSpecificCredentialCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "ResetServiceSpecificCredential", {}).n("IAMClient", "ResetServiceSpecificCredentialCommand").f(void 0, ResetServiceSpecificCredentialResponseFilterSensitiveLog).ser(se_ResetServiceSpecificCredentialCommand).de(de_ResetServiceSpecificCredentialCommand).build() {
  static {
    __name(this, "ResetServiceSpecificCredentialCommand");
  }
};

// src/commands/ResyncMFADeviceCommand.ts



var ResyncMFADeviceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "ResyncMFADevice", {}).n("IAMClient", "ResyncMFADeviceCommand").f(void 0, void 0).ser(se_ResyncMFADeviceCommand).de(de_ResyncMFADeviceCommand).build() {
  static {
    __name(this, "ResyncMFADeviceCommand");
  }
};

// src/commands/SetDefaultPolicyVersionCommand.ts



var SetDefaultPolicyVersionCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "SetDefaultPolicyVersion", {}).n("IAMClient", "SetDefaultPolicyVersionCommand").f(void 0, void 0).ser(se_SetDefaultPolicyVersionCommand).de(de_SetDefaultPolicyVersionCommand).build() {
  static {
    __name(this, "SetDefaultPolicyVersionCommand");
  }
};

// src/commands/SetSecurityTokenServicePreferencesCommand.ts



var SetSecurityTokenServicePreferencesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "SetSecurityTokenServicePreferences", {}).n("IAMClient", "SetSecurityTokenServicePreferencesCommand").f(void 0, void 0).ser(se_SetSecurityTokenServicePreferencesCommand).de(de_SetSecurityTokenServicePreferencesCommand).build() {
  static {
    __name(this, "SetSecurityTokenServicePreferencesCommand");
  }
};

// src/commands/SimulateCustomPolicyCommand.ts



var SimulateCustomPolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "SimulateCustomPolicy", {}).n("IAMClient", "SimulateCustomPolicyCommand").f(void 0, void 0).ser(se_SimulateCustomPolicyCommand).de(de_SimulateCustomPolicyCommand).build() {
  static {
    __name(this, "SimulateCustomPolicyCommand");
  }
};

// src/commands/SimulatePrincipalPolicyCommand.ts



var SimulatePrincipalPolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "SimulatePrincipalPolicy", {}).n("IAMClient", "SimulatePrincipalPolicyCommand").f(void 0, void 0).ser(se_SimulatePrincipalPolicyCommand).de(de_SimulatePrincipalPolicyCommand).build() {
  static {
    __name(this, "SimulatePrincipalPolicyCommand");
  }
};

// src/commands/TagInstanceProfileCommand.ts



var TagInstanceProfileCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "TagInstanceProfile", {}).n("IAMClient", "TagInstanceProfileCommand").f(void 0, void 0).ser(se_TagInstanceProfileCommand).de(de_TagInstanceProfileCommand).build() {
  static {
    __name(this, "TagInstanceProfileCommand");
  }
};

// src/commands/TagMFADeviceCommand.ts



var TagMFADeviceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "TagMFADevice", {}).n("IAMClient", "TagMFADeviceCommand").f(void 0, void 0).ser(se_TagMFADeviceCommand).de(de_TagMFADeviceCommand).build() {
  static {
    __name(this, "TagMFADeviceCommand");
  }
};

// src/commands/TagOpenIDConnectProviderCommand.ts



var TagOpenIDConnectProviderCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "TagOpenIDConnectProvider", {}).n("IAMClient", "TagOpenIDConnectProviderCommand").f(void 0, void 0).ser(se_TagOpenIDConnectProviderCommand).de(de_TagOpenIDConnectProviderCommand).build() {
  static {
    __name(this, "TagOpenIDConnectProviderCommand");
  }
};

// src/commands/TagPolicyCommand.ts



var TagPolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "TagPolicy", {}).n("IAMClient", "TagPolicyCommand").f(void 0, void 0).ser(se_TagPolicyCommand).de(de_TagPolicyCommand).build() {
  static {
    __name(this, "TagPolicyCommand");
  }
};

// src/commands/TagRoleCommand.ts



var TagRoleCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "TagRole", {}).n("IAMClient", "TagRoleCommand").f(void 0, void 0).ser(se_TagRoleCommand).de(de_TagRoleCommand).build() {
  static {
    __name(this, "TagRoleCommand");
  }
};

// src/commands/TagSAMLProviderCommand.ts



var TagSAMLProviderCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "TagSAMLProvider", {}).n("IAMClient", "TagSAMLProviderCommand").f(void 0, void 0).ser(se_TagSAMLProviderCommand).de(de_TagSAMLProviderCommand).build() {
  static {
    __name(this, "TagSAMLProviderCommand");
  }
};

// src/commands/TagServerCertificateCommand.ts



var TagServerCertificateCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "TagServerCertificate", {}).n("IAMClient", "TagServerCertificateCommand").f(void 0, void 0).ser(se_TagServerCertificateCommand).de(de_TagServerCertificateCommand).build() {
  static {
    __name(this, "TagServerCertificateCommand");
  }
};

// src/commands/TagUserCommand.ts



var TagUserCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "TagUser", {}).n("IAMClient", "TagUserCommand").f(void 0, void 0).ser(se_TagUserCommand).de(de_TagUserCommand).build() {
  static {
    __name(this, "TagUserCommand");
  }
};

// src/commands/UntagInstanceProfileCommand.ts



var UntagInstanceProfileCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "UntagInstanceProfile", {}).n("IAMClient", "UntagInstanceProfileCommand").f(void 0, void 0).ser(se_UntagInstanceProfileCommand).de(de_UntagInstanceProfileCommand).build() {
  static {
    __name(this, "UntagInstanceProfileCommand");
  }
};

// src/commands/UntagMFADeviceCommand.ts



var UntagMFADeviceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "UntagMFADevice", {}).n("IAMClient", "UntagMFADeviceCommand").f(void 0, void 0).ser(se_UntagMFADeviceCommand).de(de_UntagMFADeviceCommand).build() {
  static {
    __name(this, "UntagMFADeviceCommand");
  }
};

// src/commands/UntagOpenIDConnectProviderCommand.ts



var UntagOpenIDConnectProviderCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "UntagOpenIDConnectProvider", {}).n("IAMClient", "UntagOpenIDConnectProviderCommand").f(void 0, void 0).ser(se_UntagOpenIDConnectProviderCommand).de(de_UntagOpenIDConnectProviderCommand).build() {
  static {
    __name(this, "UntagOpenIDConnectProviderCommand");
  }
};

// src/commands/UntagPolicyCommand.ts



var UntagPolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "UntagPolicy", {}).n("IAMClient", "UntagPolicyCommand").f(void 0, void 0).ser(se_UntagPolicyCommand).de(de_UntagPolicyCommand).build() {
  static {
    __name(this, "UntagPolicyCommand");
  }
};

// src/commands/UntagRoleCommand.ts



var UntagRoleCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "UntagRole", {}).n("IAMClient", "UntagRoleCommand").f(void 0, void 0).ser(se_UntagRoleCommand).de(de_UntagRoleCommand).build() {
  static {
    __name(this, "UntagRoleCommand");
  }
};

// src/commands/UntagSAMLProviderCommand.ts



var UntagSAMLProviderCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "UntagSAMLProvider", {}).n("IAMClient", "UntagSAMLProviderCommand").f(void 0, void 0).ser(se_UntagSAMLProviderCommand).de(de_UntagSAMLProviderCommand).build() {
  static {
    __name(this, "UntagSAMLProviderCommand");
  }
};

// src/commands/UntagServerCertificateCommand.ts



var UntagServerCertificateCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "UntagServerCertificate", {}).n("IAMClient", "UntagServerCertificateCommand").f(void 0, void 0).ser(se_UntagServerCertificateCommand).de(de_UntagServerCertificateCommand).build() {
  static {
    __name(this, "UntagServerCertificateCommand");
  }
};

// src/commands/UntagUserCommand.ts



var UntagUserCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "UntagUser", {}).n("IAMClient", "UntagUserCommand").f(void 0, void 0).ser(se_UntagUserCommand).de(de_UntagUserCommand).build() {
  static {
    __name(this, "UntagUserCommand");
  }
};

// src/commands/UpdateAccessKeyCommand.ts



var UpdateAccessKeyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "UpdateAccessKey", {}).n("IAMClient", "UpdateAccessKeyCommand").f(void 0, void 0).ser(se_UpdateAccessKeyCommand).de(de_UpdateAccessKeyCommand).build() {
  static {
    __name(this, "UpdateAccessKeyCommand");
  }
};

// src/commands/UpdateAccountPasswordPolicyCommand.ts



var UpdateAccountPasswordPolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "UpdateAccountPasswordPolicy", {}).n("IAMClient", "UpdateAccountPasswordPolicyCommand").f(void 0, void 0).ser(se_UpdateAccountPasswordPolicyCommand).de(de_UpdateAccountPasswordPolicyCommand).build() {
  static {
    __name(this, "UpdateAccountPasswordPolicyCommand");
  }
};

// src/commands/UpdateAssumeRolePolicyCommand.ts



var UpdateAssumeRolePolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "UpdateAssumeRolePolicy", {}).n("IAMClient", "UpdateAssumeRolePolicyCommand").f(void 0, void 0).ser(se_UpdateAssumeRolePolicyCommand).de(de_UpdateAssumeRolePolicyCommand).build() {
  static {
    __name(this, "UpdateAssumeRolePolicyCommand");
  }
};

// src/commands/UpdateGroupCommand.ts



var UpdateGroupCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "UpdateGroup", {}).n("IAMClient", "UpdateGroupCommand").f(void 0, void 0).ser(se_UpdateGroupCommand).de(de_UpdateGroupCommand).build() {
  static {
    __name(this, "UpdateGroupCommand");
  }
};

// src/commands/UpdateLoginProfileCommand.ts



var UpdateLoginProfileCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "UpdateLoginProfile", {}).n("IAMClient", "UpdateLoginProfileCommand").f(UpdateLoginProfileRequestFilterSensitiveLog, void 0).ser(se_UpdateLoginProfileCommand).de(de_UpdateLoginProfileCommand).build() {
  static {
    __name(this, "UpdateLoginProfileCommand");
  }
};

// src/commands/UpdateOpenIDConnectProviderThumbprintCommand.ts



var UpdateOpenIDConnectProviderThumbprintCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "UpdateOpenIDConnectProviderThumbprint", {}).n("IAMClient", "UpdateOpenIDConnectProviderThumbprintCommand").f(void 0, void 0).ser(se_UpdateOpenIDConnectProviderThumbprintCommand).de(de_UpdateOpenIDConnectProviderThumbprintCommand).build() {
  static {
    __name(this, "UpdateOpenIDConnectProviderThumbprintCommand");
  }
};

// src/commands/UpdateRoleCommand.ts



var UpdateRoleCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "UpdateRole", {}).n("IAMClient", "UpdateRoleCommand").f(void 0, void 0).ser(se_UpdateRoleCommand).de(de_UpdateRoleCommand).build() {
  static {
    __name(this, "UpdateRoleCommand");
  }
};

// src/commands/UpdateRoleDescriptionCommand.ts



var UpdateRoleDescriptionCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "UpdateRoleDescription", {}).n("IAMClient", "UpdateRoleDescriptionCommand").f(void 0, void 0).ser(se_UpdateRoleDescriptionCommand).de(de_UpdateRoleDescriptionCommand).build() {
  static {
    __name(this, "UpdateRoleDescriptionCommand");
  }
};

// src/commands/UpdateSAMLProviderCommand.ts



var UpdateSAMLProviderCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "UpdateSAMLProvider", {}).n("IAMClient", "UpdateSAMLProviderCommand").f(UpdateSAMLProviderRequestFilterSensitiveLog, void 0).ser(se_UpdateSAMLProviderCommand).de(de_UpdateSAMLProviderCommand).build() {
  static {
    __name(this, "UpdateSAMLProviderCommand");
  }
};

// src/commands/UpdateServerCertificateCommand.ts



var UpdateServerCertificateCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "UpdateServerCertificate", {}).n("IAMClient", "UpdateServerCertificateCommand").f(void 0, void 0).ser(se_UpdateServerCertificateCommand).de(de_UpdateServerCertificateCommand).build() {
  static {
    __name(this, "UpdateServerCertificateCommand");
  }
};

// src/commands/UpdateServiceSpecificCredentialCommand.ts



var UpdateServiceSpecificCredentialCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "UpdateServiceSpecificCredential", {}).n("IAMClient", "UpdateServiceSpecificCredentialCommand").f(void 0, void 0).ser(se_UpdateServiceSpecificCredentialCommand).de(de_UpdateServiceSpecificCredentialCommand).build() {
  static {
    __name(this, "UpdateServiceSpecificCredentialCommand");
  }
};

// src/commands/UpdateSigningCertificateCommand.ts



var UpdateSigningCertificateCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "UpdateSigningCertificate", {}).n("IAMClient", "UpdateSigningCertificateCommand").f(void 0, void 0).ser(se_UpdateSigningCertificateCommand).de(de_UpdateSigningCertificateCommand).build() {
  static {
    __name(this, "UpdateSigningCertificateCommand");
  }
};

// src/commands/UpdateSSHPublicKeyCommand.ts



var UpdateSSHPublicKeyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "UpdateSSHPublicKey", {}).n("IAMClient", "UpdateSSHPublicKeyCommand").f(void 0, void 0).ser(se_UpdateSSHPublicKeyCommand).de(de_UpdateSSHPublicKeyCommand).build() {
  static {
    __name(this, "UpdateSSHPublicKeyCommand");
  }
};

// src/commands/UpdateUserCommand.ts



var UpdateUserCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "UpdateUser", {}).n("IAMClient", "UpdateUserCommand").f(void 0, void 0).ser(se_UpdateUserCommand).de(de_UpdateUserCommand).build() {
  static {
    __name(this, "UpdateUserCommand");
  }
};

// src/commands/UploadServerCertificateCommand.ts



var UploadServerCertificateCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "UploadServerCertificate", {}).n("IAMClient", "UploadServerCertificateCommand").f(UploadServerCertificateRequestFilterSensitiveLog, void 0).ser(se_UploadServerCertificateCommand).de(de_UploadServerCertificateCommand).build() {
  static {
    __name(this, "UploadServerCertificateCommand");
  }
};

// src/commands/UploadSigningCertificateCommand.ts



var UploadSigningCertificateCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "UploadSigningCertificate", {}).n("IAMClient", "UploadSigningCertificateCommand").f(void 0, void 0).ser(se_UploadSigningCertificateCommand).de(de_UploadSigningCertificateCommand).build() {
  static {
    __name(this, "UploadSigningCertificateCommand");
  }
};

// src/commands/UploadSSHPublicKeyCommand.ts



var UploadSSHPublicKeyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSIdentityManagementV20100508", "UploadSSHPublicKey", {}).n("IAMClient", "UploadSSHPublicKeyCommand").f(void 0, void 0).ser(se_UploadSSHPublicKeyCommand).de(de_UploadSSHPublicKeyCommand).build() {
  static {
    __name(this, "UploadSSHPublicKeyCommand");
  }
};

// src/IAM.ts
var commands = {
  AddClientIDToOpenIDConnectProviderCommand,
  AddRoleToInstanceProfileCommand,
  AddUserToGroupCommand,
  AttachGroupPolicyCommand,
  AttachRolePolicyCommand,
  AttachUserPolicyCommand,
  ChangePasswordCommand,
  CreateAccessKeyCommand,
  CreateAccountAliasCommand,
  CreateGroupCommand,
  CreateInstanceProfileCommand,
  CreateLoginProfileCommand,
  CreateOpenIDConnectProviderCommand,
  CreatePolicyCommand,
  CreatePolicyVersionCommand,
  CreateRoleCommand,
  CreateSAMLProviderCommand,
  CreateServiceLinkedRoleCommand,
  CreateServiceSpecificCredentialCommand,
  CreateUserCommand,
  CreateVirtualMFADeviceCommand,
  DeactivateMFADeviceCommand,
  DeleteAccessKeyCommand,
  DeleteAccountAliasCommand,
  DeleteAccountPasswordPolicyCommand,
  DeleteGroupCommand,
  DeleteGroupPolicyCommand,
  DeleteInstanceProfileCommand,
  DeleteLoginProfileCommand,
  DeleteOpenIDConnectProviderCommand,
  DeletePolicyCommand,
  DeletePolicyVersionCommand,
  DeleteRoleCommand,
  DeleteRolePermissionsBoundaryCommand,
  DeleteRolePolicyCommand,
  DeleteSAMLProviderCommand,
  DeleteServerCertificateCommand,
  DeleteServiceLinkedRoleCommand,
  DeleteServiceSpecificCredentialCommand,
  DeleteSigningCertificateCommand,
  DeleteSSHPublicKeyCommand,
  DeleteUserCommand,
  DeleteUserPermissionsBoundaryCommand,
  DeleteUserPolicyCommand,
  DeleteVirtualMFADeviceCommand,
  DetachGroupPolicyCommand,
  DetachRolePolicyCommand,
  DetachUserPolicyCommand,
  DisableOrganizationsRootCredentialsManagementCommand,
  DisableOrganizationsRootSessionsCommand,
  EnableMFADeviceCommand,
  EnableOrganizationsRootCredentialsManagementCommand,
  EnableOrganizationsRootSessionsCommand,
  GenerateCredentialReportCommand,
  GenerateOrganizationsAccessReportCommand,
  GenerateServiceLastAccessedDetailsCommand,
  GetAccessKeyLastUsedCommand,
  GetAccountAuthorizationDetailsCommand,
  GetAccountPasswordPolicyCommand,
  GetAccountSummaryCommand,
  GetContextKeysForCustomPolicyCommand,
  GetContextKeysForPrincipalPolicyCommand,
  GetCredentialReportCommand,
  GetGroupCommand,
  GetGroupPolicyCommand,
  GetInstanceProfileCommand,
  GetLoginProfileCommand,
  GetMFADeviceCommand,
  GetOpenIDConnectProviderCommand,
  GetOrganizationsAccessReportCommand,
  GetPolicyCommand,
  GetPolicyVersionCommand,
  GetRoleCommand,
  GetRolePolicyCommand,
  GetSAMLProviderCommand,
  GetServerCertificateCommand,
  GetServiceLastAccessedDetailsCommand,
  GetServiceLastAccessedDetailsWithEntitiesCommand,
  GetServiceLinkedRoleDeletionStatusCommand,
  GetSSHPublicKeyCommand,
  GetUserCommand,
  GetUserPolicyCommand,
  ListAccessKeysCommand,
  ListAccountAliasesCommand,
  ListAttachedGroupPoliciesCommand,
  ListAttachedRolePoliciesCommand,
  ListAttachedUserPoliciesCommand,
  ListEntitiesForPolicyCommand,
  ListGroupPoliciesCommand,
  ListGroupsCommand,
  ListGroupsForUserCommand,
  ListInstanceProfilesCommand,
  ListInstanceProfilesForRoleCommand,
  ListInstanceProfileTagsCommand,
  ListMFADevicesCommand,
  ListMFADeviceTagsCommand,
  ListOpenIDConnectProvidersCommand,
  ListOpenIDConnectProviderTagsCommand,
  ListOrganizationsFeaturesCommand,
  ListPoliciesCommand,
  ListPoliciesGrantingServiceAccessCommand,
  ListPolicyTagsCommand,
  ListPolicyVersionsCommand,
  ListRolePoliciesCommand,
  ListRolesCommand,
  ListRoleTagsCommand,
  ListSAMLProvidersCommand,
  ListSAMLProviderTagsCommand,
  ListServerCertificatesCommand,
  ListServerCertificateTagsCommand,
  ListServiceSpecificCredentialsCommand,
  ListSigningCertificatesCommand,
  ListSSHPublicKeysCommand,
  ListUserPoliciesCommand,
  ListUsersCommand,
  ListUserTagsCommand,
  ListVirtualMFADevicesCommand,
  PutGroupPolicyCommand,
  PutRolePermissionsBoundaryCommand,
  PutRolePolicyCommand,
  PutUserPermissionsBoundaryCommand,
  PutUserPolicyCommand,
  RemoveClientIDFromOpenIDConnectProviderCommand,
  RemoveRoleFromInstanceProfileCommand,
  RemoveUserFromGroupCommand,
  ResetServiceSpecificCredentialCommand,
  ResyncMFADeviceCommand,
  SetDefaultPolicyVersionCommand,
  SetSecurityTokenServicePreferencesCommand,
  SimulateCustomPolicyCommand,
  SimulatePrincipalPolicyCommand,
  TagInstanceProfileCommand,
  TagMFADeviceCommand,
  TagOpenIDConnectProviderCommand,
  TagPolicyCommand,
  TagRoleCommand,
  TagSAMLProviderCommand,
  TagServerCertificateCommand,
  TagUserCommand,
  UntagInstanceProfileCommand,
  UntagMFADeviceCommand,
  UntagOpenIDConnectProviderCommand,
  UntagPolicyCommand,
  UntagRoleCommand,
  UntagSAMLProviderCommand,
  UntagServerCertificateCommand,
  UntagUserCommand,
  UpdateAccessKeyCommand,
  UpdateAccountPasswordPolicyCommand,
  UpdateAssumeRolePolicyCommand,
  UpdateGroupCommand,
  UpdateLoginProfileCommand,
  UpdateOpenIDConnectProviderThumbprintCommand,
  UpdateRoleCommand,
  UpdateRoleDescriptionCommand,
  UpdateSAMLProviderCommand,
  UpdateServerCertificateCommand,
  UpdateServiceSpecificCredentialCommand,
  UpdateSigningCertificateCommand,
  UpdateSSHPublicKeyCommand,
  UpdateUserCommand,
  UploadServerCertificateCommand,
  UploadSigningCertificateCommand,
  UploadSSHPublicKeyCommand
};
var IAM = class extends IAMClient {
  static {
    __name(this, "IAM");
  }
};
(0, import_smithy_client.createAggregatedClient)(commands, IAM);

// src/pagination/GetAccountAuthorizationDetailsPaginator.ts

var paginateGetAccountAuthorizationDetails = (0, import_core.createPaginator)(IAMClient, GetAccountAuthorizationDetailsCommand, "Marker", "Marker", "MaxItems");

// src/pagination/GetGroupPaginator.ts

var paginateGetGroup = (0, import_core.createPaginator)(IAMClient, GetGroupCommand, "Marker", "Marker", "MaxItems");

// src/pagination/ListAccessKeysPaginator.ts

var paginateListAccessKeys = (0, import_core.createPaginator)(IAMClient, ListAccessKeysCommand, "Marker", "Marker", "MaxItems");

// src/pagination/ListAccountAliasesPaginator.ts

var paginateListAccountAliases = (0, import_core.createPaginator)(IAMClient, ListAccountAliasesCommand, "Marker", "Marker", "MaxItems");

// src/pagination/ListAttachedGroupPoliciesPaginator.ts

var paginateListAttachedGroupPolicies = (0, import_core.createPaginator)(IAMClient, ListAttachedGroupPoliciesCommand, "Marker", "Marker", "MaxItems");

// src/pagination/ListAttachedRolePoliciesPaginator.ts

var paginateListAttachedRolePolicies = (0, import_core.createPaginator)(IAMClient, ListAttachedRolePoliciesCommand, "Marker", "Marker", "MaxItems");

// src/pagination/ListAttachedUserPoliciesPaginator.ts

var paginateListAttachedUserPolicies = (0, import_core.createPaginator)(IAMClient, ListAttachedUserPoliciesCommand, "Marker", "Marker", "MaxItems");

// src/pagination/ListEntitiesForPolicyPaginator.ts

var paginateListEntitiesForPolicy = (0, import_core.createPaginator)(IAMClient, ListEntitiesForPolicyCommand, "Marker", "Marker", "MaxItems");

// src/pagination/ListGroupPoliciesPaginator.ts

var paginateListGroupPolicies = (0, import_core.createPaginator)(IAMClient, ListGroupPoliciesCommand, "Marker", "Marker", "MaxItems");

// src/pagination/ListGroupsForUserPaginator.ts

var paginateListGroupsForUser = (0, import_core.createPaginator)(IAMClient, ListGroupsForUserCommand, "Marker", "Marker", "MaxItems");

// src/pagination/ListGroupsPaginator.ts

var paginateListGroups = (0, import_core.createPaginator)(IAMClient, ListGroupsCommand, "Marker", "Marker", "MaxItems");

// src/pagination/ListInstanceProfileTagsPaginator.ts

var paginateListInstanceProfileTags = (0, import_core.createPaginator)(IAMClient, ListInstanceProfileTagsCommand, "Marker", "Marker", "MaxItems");

// src/pagination/ListInstanceProfilesForRolePaginator.ts

var paginateListInstanceProfilesForRole = (0, import_core.createPaginator)(IAMClient, ListInstanceProfilesForRoleCommand, "Marker", "Marker", "MaxItems");

// src/pagination/ListInstanceProfilesPaginator.ts

var paginateListInstanceProfiles = (0, import_core.createPaginator)(IAMClient, ListInstanceProfilesCommand, "Marker", "Marker", "MaxItems");

// src/pagination/ListMFADeviceTagsPaginator.ts

var paginateListMFADeviceTags = (0, import_core.createPaginator)(IAMClient, ListMFADeviceTagsCommand, "Marker", "Marker", "MaxItems");

// src/pagination/ListMFADevicesPaginator.ts

var paginateListMFADevices = (0, import_core.createPaginator)(IAMClient, ListMFADevicesCommand, "Marker", "Marker", "MaxItems");

// src/pagination/ListOpenIDConnectProviderTagsPaginator.ts

var paginateListOpenIDConnectProviderTags = (0, import_core.createPaginator)(IAMClient, ListOpenIDConnectProviderTagsCommand, "Marker", "Marker", "MaxItems");

// src/pagination/ListPoliciesPaginator.ts

var paginateListPolicies = (0, import_core.createPaginator)(IAMClient, ListPoliciesCommand, "Marker", "Marker", "MaxItems");

// src/pagination/ListPolicyTagsPaginator.ts

var paginateListPolicyTags = (0, import_core.createPaginator)(IAMClient, ListPolicyTagsCommand, "Marker", "Marker", "MaxItems");

// src/pagination/ListPolicyVersionsPaginator.ts

var paginateListPolicyVersions = (0, import_core.createPaginator)(IAMClient, ListPolicyVersionsCommand, "Marker", "Marker", "MaxItems");

// src/pagination/ListRolePoliciesPaginator.ts

var paginateListRolePolicies = (0, import_core.createPaginator)(IAMClient, ListRolePoliciesCommand, "Marker", "Marker", "MaxItems");

// src/pagination/ListRoleTagsPaginator.ts

var paginateListRoleTags = (0, import_core.createPaginator)(IAMClient, ListRoleTagsCommand, "Marker", "Marker", "MaxItems");

// src/pagination/ListRolesPaginator.ts

var paginateListRoles = (0, import_core.createPaginator)(IAMClient, ListRolesCommand, "Marker", "Marker", "MaxItems");

// src/pagination/ListSAMLProviderTagsPaginator.ts

var paginateListSAMLProviderTags = (0, import_core.createPaginator)(IAMClient, ListSAMLProviderTagsCommand, "Marker", "Marker", "MaxItems");

// src/pagination/ListSSHPublicKeysPaginator.ts

var paginateListSSHPublicKeys = (0, import_core.createPaginator)(IAMClient, ListSSHPublicKeysCommand, "Marker", "Marker", "MaxItems");

// src/pagination/ListServerCertificateTagsPaginator.ts

var paginateListServerCertificateTags = (0, import_core.createPaginator)(IAMClient, ListServerCertificateTagsCommand, "Marker", "Marker", "MaxItems");

// src/pagination/ListServerCertificatesPaginator.ts

var paginateListServerCertificates = (0, import_core.createPaginator)(IAMClient, ListServerCertificatesCommand, "Marker", "Marker", "MaxItems");

// src/pagination/ListSigningCertificatesPaginator.ts

var paginateListSigningCertificates = (0, import_core.createPaginator)(IAMClient, ListSigningCertificatesCommand, "Marker", "Marker", "MaxItems");

// src/pagination/ListUserPoliciesPaginator.ts

var paginateListUserPolicies = (0, import_core.createPaginator)(IAMClient, ListUserPoliciesCommand, "Marker", "Marker", "MaxItems");

// src/pagination/ListUserTagsPaginator.ts

var paginateListUserTags = (0, import_core.createPaginator)(IAMClient, ListUserTagsCommand, "Marker", "Marker", "MaxItems");

// src/pagination/ListUsersPaginator.ts

var paginateListUsers = (0, import_core.createPaginator)(IAMClient, ListUsersCommand, "Marker", "Marker", "MaxItems");

// src/pagination/ListVirtualMFADevicesPaginator.ts

var paginateListVirtualMFADevices = (0, import_core.createPaginator)(IAMClient, ListVirtualMFADevicesCommand, "Marker", "Marker", "MaxItems");

// src/pagination/SimulateCustomPolicyPaginator.ts

var paginateSimulateCustomPolicy = (0, import_core.createPaginator)(IAMClient, SimulateCustomPolicyCommand, "Marker", "Marker", "MaxItems");

// src/pagination/SimulatePrincipalPolicyPaginator.ts

var paginateSimulatePrincipalPolicy = (0, import_core.createPaginator)(IAMClient, SimulatePrincipalPolicyCommand, "Marker", "Marker", "MaxItems");

// src/waiters/waitForInstanceProfileExists.ts
var import_util_waiter = require("@smithy/util-waiter");
var checkState = /* @__PURE__ */ __name(async (client, input) => {
  let reason;
  try {
    const result = await client.send(new GetInstanceProfileCommand(input));
    reason = result;
    return { state: import_util_waiter.WaiterState.SUCCESS, reason };
  } catch (exception) {
    reason = exception;
    if (exception.name && exception.name == "NoSuchEntityException") {
      return { state: import_util_waiter.WaiterState.RETRY, reason };
    }
  }
  return { state: import_util_waiter.WaiterState.RETRY, reason };
}, "checkState");
var waitForInstanceProfileExists = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 1, maxDelay: 120 };
  return (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState);
}, "waitForInstanceProfileExists");
var waitUntilInstanceProfileExists = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 1, maxDelay: 120 };
  const result = await (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState);
  return (0, import_util_waiter.checkExceptions)(result);
}, "waitUntilInstanceProfileExists");

// src/waiters/waitForPolicyExists.ts

var checkState2 = /* @__PURE__ */ __name(async (client, input) => {
  let reason;
  try {
    const result = await client.send(new GetPolicyCommand(input));
    reason = result;
    return { state: import_util_waiter.WaiterState.SUCCESS, reason };
  } catch (exception) {
    reason = exception;
    if (exception.name && exception.name == "NoSuchEntityException") {
      return { state: import_util_waiter.WaiterState.RETRY, reason };
    }
  }
  return { state: import_util_waiter.WaiterState.RETRY, reason };
}, "checkState");
var waitForPolicyExists = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 1, maxDelay: 120 };
  return (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState2);
}, "waitForPolicyExists");
var waitUntilPolicyExists = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 1, maxDelay: 120 };
  const result = await (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState2);
  return (0, import_util_waiter.checkExceptions)(result);
}, "waitUntilPolicyExists");

// src/waiters/waitForRoleExists.ts

var checkState3 = /* @__PURE__ */ __name(async (client, input) => {
  let reason;
  try {
    const result = await client.send(new GetRoleCommand(input));
    reason = result;
    return { state: import_util_waiter.WaiterState.SUCCESS, reason };
  } catch (exception) {
    reason = exception;
    if (exception.name && exception.name == "NoSuchEntityException") {
      return { state: import_util_waiter.WaiterState.RETRY, reason };
    }
  }
  return { state: import_util_waiter.WaiterState.RETRY, reason };
}, "checkState");
var waitForRoleExists = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 1, maxDelay: 120 };
  return (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState3);
}, "waitForRoleExists");
var waitUntilRoleExists = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 1, maxDelay: 120 };
  const result = await (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState3);
  return (0, import_util_waiter.checkExceptions)(result);
}, "waitUntilRoleExists");

// src/waiters/waitForUserExists.ts

var checkState4 = /* @__PURE__ */ __name(async (client, input) => {
  let reason;
  try {
    const result = await client.send(new GetUserCommand(input));
    reason = result;
    return { state: import_util_waiter.WaiterState.SUCCESS, reason };
  } catch (exception) {
    reason = exception;
    if (exception.name && exception.name == "NoSuchEntityException") {
      return { state: import_util_waiter.WaiterState.RETRY, reason };
    }
  }
  return { state: import_util_waiter.WaiterState.RETRY, reason };
}, "checkState");
var waitForUserExists = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 1, maxDelay: 120 };
  return (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState4);
}, "waitForUserExists");
var waitUntilUserExists = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 1, maxDelay: 120 };
  const result = await (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState4);
  return (0, import_util_waiter.checkExceptions)(result);
}, "waitUntilUserExists");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  IAMServiceException,
  __Client,
  IAMClient,
  IAM,
  $Command,
  AddClientIDToOpenIDConnectProviderCommand,
  AddRoleToInstanceProfileCommand,
  AddUserToGroupCommand,
  AttachGroupPolicyCommand,
  AttachRolePolicyCommand,
  AttachUserPolicyCommand,
  ChangePasswordCommand,
  CreateAccessKeyCommand,
  CreateAccountAliasCommand,
  CreateGroupCommand,
  CreateInstanceProfileCommand,
  CreateLoginProfileCommand,
  CreateOpenIDConnectProviderCommand,
  CreatePolicyCommand,
  CreatePolicyVersionCommand,
  CreateRoleCommand,
  CreateSAMLProviderCommand,
  CreateServiceLinkedRoleCommand,
  CreateServiceSpecificCredentialCommand,
  CreateUserCommand,
  CreateVirtualMFADeviceCommand,
  DeactivateMFADeviceCommand,
  DeleteAccessKeyCommand,
  DeleteAccountAliasCommand,
  DeleteAccountPasswordPolicyCommand,
  DeleteGroupCommand,
  DeleteGroupPolicyCommand,
  DeleteInstanceProfileCommand,
  DeleteLoginProfileCommand,
  DeleteOpenIDConnectProviderCommand,
  DeletePolicyCommand,
  DeletePolicyVersionCommand,
  DeleteRoleCommand,
  DeleteRolePermissionsBoundaryCommand,
  DeleteRolePolicyCommand,
  DeleteSAMLProviderCommand,
  DeleteSSHPublicKeyCommand,
  DeleteServerCertificateCommand,
  DeleteServiceLinkedRoleCommand,
  DeleteServiceSpecificCredentialCommand,
  DeleteSigningCertificateCommand,
  DeleteUserCommand,
  DeleteUserPermissionsBoundaryCommand,
  DeleteUserPolicyCommand,
  DeleteVirtualMFADeviceCommand,
  DetachGroupPolicyCommand,
  DetachRolePolicyCommand,
  DetachUserPolicyCommand,
  DisableOrganizationsRootCredentialsManagementCommand,
  DisableOrganizationsRootSessionsCommand,
  EnableMFADeviceCommand,
  EnableOrganizationsRootCredentialsManagementCommand,
  EnableOrganizationsRootSessionsCommand,
  GenerateCredentialReportCommand,
  GenerateOrganizationsAccessReportCommand,
  GenerateServiceLastAccessedDetailsCommand,
  GetAccessKeyLastUsedCommand,
  GetAccountAuthorizationDetailsCommand,
  GetAccountPasswordPolicyCommand,
  GetAccountSummaryCommand,
  GetContextKeysForCustomPolicyCommand,
  GetContextKeysForPrincipalPolicyCommand,
  GetCredentialReportCommand,
  GetGroupCommand,
  GetGroupPolicyCommand,
  GetInstanceProfileCommand,
  GetLoginProfileCommand,
  GetMFADeviceCommand,
  GetOpenIDConnectProviderCommand,
  GetOrganizationsAccessReportCommand,
  GetPolicyCommand,
  GetPolicyVersionCommand,
  GetRoleCommand,
  GetRolePolicyCommand,
  GetSAMLProviderCommand,
  GetSSHPublicKeyCommand,
  GetServerCertificateCommand,
  GetServiceLastAccessedDetailsCommand,
  GetServiceLastAccessedDetailsWithEntitiesCommand,
  GetServiceLinkedRoleDeletionStatusCommand,
  GetUserCommand,
  GetUserPolicyCommand,
  ListAccessKeysCommand,
  ListAccountAliasesCommand,
  ListAttachedGroupPoliciesCommand,
  ListAttachedRolePoliciesCommand,
  ListAttachedUserPoliciesCommand,
  ListEntitiesForPolicyCommand,
  ListGroupPoliciesCommand,
  ListGroupsCommand,
  ListGroupsForUserCommand,
  ListInstanceProfileTagsCommand,
  ListInstanceProfilesCommand,
  ListInstanceProfilesForRoleCommand,
  ListMFADeviceTagsCommand,
  ListMFADevicesCommand,
  ListOpenIDConnectProviderTagsCommand,
  ListOpenIDConnectProvidersCommand,
  ListOrganizationsFeaturesCommand,
  ListPoliciesCommand,
  ListPoliciesGrantingServiceAccessCommand,
  ListPolicyTagsCommand,
  ListPolicyVersionsCommand,
  ListRolePoliciesCommand,
  ListRoleTagsCommand,
  ListRolesCommand,
  ListSAMLProviderTagsCommand,
  ListSAMLProvidersCommand,
  ListSSHPublicKeysCommand,
  ListServerCertificateTagsCommand,
  ListServerCertificatesCommand,
  ListServiceSpecificCredentialsCommand,
  ListSigningCertificatesCommand,
  ListUserPoliciesCommand,
  ListUserTagsCommand,
  ListUsersCommand,
  ListVirtualMFADevicesCommand,
  PutGroupPolicyCommand,
  PutRolePermissionsBoundaryCommand,
  PutRolePolicyCommand,
  PutUserPermissionsBoundaryCommand,
  PutUserPolicyCommand,
  RemoveClientIDFromOpenIDConnectProviderCommand,
  RemoveRoleFromInstanceProfileCommand,
  RemoveUserFromGroupCommand,
  ResetServiceSpecificCredentialCommand,
  ResyncMFADeviceCommand,
  SetDefaultPolicyVersionCommand,
  SetSecurityTokenServicePreferencesCommand,
  SimulateCustomPolicyCommand,
  SimulatePrincipalPolicyCommand,
  TagInstanceProfileCommand,
  TagMFADeviceCommand,
  TagOpenIDConnectProviderCommand,
  TagPolicyCommand,
  TagRoleCommand,
  TagSAMLProviderCommand,
  TagServerCertificateCommand,
  TagUserCommand,
  UntagInstanceProfileCommand,
  UntagMFADeviceCommand,
  UntagOpenIDConnectProviderCommand,
  UntagPolicyCommand,
  UntagRoleCommand,
  UntagSAMLProviderCommand,
  UntagServerCertificateCommand,
  UntagUserCommand,
  UpdateAccessKeyCommand,
  UpdateAccountPasswordPolicyCommand,
  UpdateAssumeRolePolicyCommand,
  UpdateGroupCommand,
  UpdateLoginProfileCommand,
  UpdateOpenIDConnectProviderThumbprintCommand,
  UpdateRoleCommand,
  UpdateRoleDescriptionCommand,
  UpdateSAMLProviderCommand,
  UpdateSSHPublicKeyCommand,
  UpdateServerCertificateCommand,
  UpdateServiceSpecificCredentialCommand,
  UpdateSigningCertificateCommand,
  UpdateUserCommand,
  UploadSSHPublicKeyCommand,
  UploadServerCertificateCommand,
  UploadSigningCertificateCommand,
  paginateGetAccountAuthorizationDetails,
  paginateGetGroup,
  paginateListAccessKeys,
  paginateListAccountAliases,
  paginateListAttachedGroupPolicies,
  paginateListAttachedRolePolicies,
  paginateListAttachedUserPolicies,
  paginateListEntitiesForPolicy,
  paginateListGroupPolicies,
  paginateListGroupsForUser,
  paginateListGroups,
  paginateListInstanceProfileTags,
  paginateListInstanceProfilesForRole,
  paginateListInstanceProfiles,
  paginateListMFADeviceTags,
  paginateListMFADevices,
  paginateListOpenIDConnectProviderTags,
  paginateListPolicies,
  paginateListPolicyTags,
  paginateListPolicyVersions,
  paginateListRolePolicies,
  paginateListRoleTags,
  paginateListRoles,
  paginateListSAMLProviderTags,
  paginateListSSHPublicKeys,
  paginateListServerCertificateTags,
  paginateListServerCertificates,
  paginateListSigningCertificates,
  paginateListUserPolicies,
  paginateListUserTags,
  paginateListUsers,
  paginateListVirtualMFADevices,
  paginateSimulateCustomPolicy,
  paginateSimulatePrincipalPolicy,
  waitForInstanceProfileExists,
  waitUntilInstanceProfileExists,
  waitForPolicyExists,
  waitUntilPolicyExists,
  waitForRoleExists,
  waitUntilRoleExists,
  waitForUserExists,
  waitUntilUserExists,
  AccessAdvisorUsageGranularityType,
  StatusType,
  AccountNotManagementOrDelegatedAdministratorException,
  InvalidInputException,
  LimitExceededException,
  NoSuchEntityException,
  ServiceFailureException,
  EntityAlreadyExistsException,
  UnmodifiableEntityException,
  AssertionEncryptionModeType,
  AssignmentStatusType,
  PermissionsBoundaryAttachmentType,
  PolicyNotAttachableException,
  EntityTemporarilyUnmodifiableException,
  InvalidUserTypeException,
  PasswordPolicyViolationException,
  ConcurrentModificationException,
  OpenIdIdpCommunicationErrorException,
  MalformedPolicyDocumentException,
  ServiceNotSupportedException,
  DeleteConflictException,
  FeatureType,
  OrganizationNotFoundException,
  OrganizationNotInAllFeaturesModeException,
  ServiceAccessNotEnabledException,
  InvalidAuthenticationCodeException,
  CallerIsNotManagementAccountException,
  ReportStateType,
  ReportGenerationLimitExceededException,
  EntityType,
  SummaryKeyType,
  CredentialReportExpiredException,
  CredentialReportNotPresentException,
  CredentialReportNotReadyException,
  ReportFormatType,
  SortKeyType,
  JobStatusType,
  PolicyOwnerEntityType,
  DeletionTaskStatusType,
  EncodingType,
  UnrecognizedPublicKeyEncodingException,
  PolicyUsageType,
  PolicyScopeType,
  PolicyType,
  GlobalEndpointTokenVersion,
  PolicyEvaluationException,
  ContextKeyTypeEnum,
  AccessKeyFilterSensitiveLog,
  ChangePasswordRequestFilterSensitiveLog,
  CreateAccessKeyResponseFilterSensitiveLog,
  CreateLoginProfileRequestFilterSensitiveLog,
  CreateSAMLProviderRequestFilterSensitiveLog,
  ServiceSpecificCredentialFilterSensitiveLog,
  CreateServiceSpecificCredentialResponseFilterSensitiveLog,
  VirtualMFADeviceFilterSensitiveLog,
  CreateVirtualMFADeviceResponseFilterSensitiveLog,
  ListVirtualMFADevicesResponseFilterSensitiveLog,
  ResetServiceSpecificCredentialResponseFilterSensitiveLog,
  PolicyEvaluationDecisionType,
  PolicySourceType,
  KeyPairMismatchException,
  MalformedCertificateException,
  DuplicateCertificateException,
  InvalidCertificateException,
  DuplicateSSHPublicKeyException,
  InvalidPublicKeyException,
  UpdateLoginProfileRequestFilterSensitiveLog,
  UpdateSAMLProviderRequestFilterSensitiveLog,
  UploadServerCertificateRequestFilterSensitiveLog
});

